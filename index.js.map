{"version":3,"file":"index.js","sources":["src/parser.js","src/util.js","src/render.js","src/index.js"],"sourcesContent":["import karas from 'karas';\n\nconst { inject, math } = karas;\n\nfunction parseAndLoadTex(tex, cb, props = {}) {\n  let src = props.imagePath || tex.imagePath;\n  let texHash = {};\n  inject.measureImg(src, function() {\n    tex.SubTexture.forEach(item => {\n      let { name, x, y, width, height, frameX = 0, frameY = 0, frameWidth = width, frameHeight = height } = item;\n      texHash[name] = {\n        name,\n        x,\n        y,\n        width,\n        height,\n        frameX,\n        frameY,\n        frameWidth,\n        frameHeight,\n        source: inject.IMG[src].source,\n      };\n    });\n    cb(texHash);\n  });\n}\n\nfunction parseSke(ske, texHash, props = {}) {\n  let {\n    frameRate: globalFrameRate,\n    armature,\n  } = ske;\n  let currentArmature = armature[0];\n  if(props.armature) {\n    for(let i = 0, len = armature.length; i < len; i++) {\n      let item = armature[i];\n      if(item.name === props.armature) {\n        currentArmature = item;\n        break;\n      }\n    }\n    if(!currentArmature) {\n      throw new Error('Can not find armature: ' + props.armature);\n    }\n  }\n  if(!currentArmature) {\n    console.warn('No armature data');\n    return;\n  }\n  let {\n    name,\n    bone,\n    slot,\n    skin,\n    frameRate,\n    animation,\n    defaultActions,\n    canvas,\n  } = currentArmature;\n  let boneHash = parseBone(bone);\n  let slotHash = parseSlot(slot);\n  let skinHash = parseSkin(skin, texHash, props);\n  let animationHash = parseAnimation(animation, frameRate || globalFrameRate || 60, boneHash);\n  return {\n    name,\n    bone,\n    boneHash,\n    slot,\n    slotHash,\n    skin: skin[0].slot,\n    skinHash,\n    animationHash,\n    defaultActions,\n    canvas,\n  };\n}\n\nfunction parseSlot(data) {\n  let hash = {};\n  data.forEach(item => {\n    hash[item.name] = item;\n  });\n  return hash;\n}\n\nfunction parseBone(data) {\n  let hash = {};\n  // bone数据形成tree结构，符合dom格式，第一个一定是root\n  let root = data[0];\n  root.children = [];\n  hash[root.name] = root;\n  data.forEach((item, i) => {\n    let { name, parent, transform = {} } = item;\n    if(parent) {\n      hash[parent].children.push(item);\n    }\n    hash[name] = item;\n    item.children = [];\n    item.index = i;\n    // 静态变换样式，可能某个骨骼没动画\n    let matrix = [1, 0, 0, 1, 0, 0];\n    if(transform.x || transform.y) {\n      let m = [1, 0, 0, 1, transform.x || 0, transform.y || 0];\n      matrix = math.matrix.multiply(matrix, m);\n    }\n    if(transform.skX) {\n      let d = math.geom.d2r(transform.skX);\n      let sin = Math.sin(d);\n      let cos = Math.cos(d);\n      let m = [cos, sin, -sin, cos, 0, 0];\n      matrix = math.matrix.multiply(matrix, m);\n    }\n    if(transform.scX !== undefined || transform.scY !== undefined) {\n      let m = [transform.scX === undefined ? 1 : transform.scX, 0, 0, transform.scY === undefined ? 1 : transform.scY, 0, 0];\n      matrix = karas.math.matrix.multiply(matrix, m);\n    }\n    item.matrix = matrix;\n  });\n  return hash;\n}\n\nfunction parseSkin(data, texHash, props) {\n  let hash = {};\n  data[0].slot.forEach(item => {\n    let { name: slotName, display } = item;\n    hash[slotName] = item;\n    display.forEach(item => {\n      let { type, name, path } = item;\n      // mesh网格分析三角形\n      if(type === 'mesh') {\n        let { vertices, triangles, uvs, weights, bonePose } = item;\n        let weightHash;\n        let bonePoseHash;\n        // 有权重则绑定骨骼，坐标系为世界；\n        // 没有权重时，完全属于父骨骼，类似普通贴图行为\n        if(weights) {\n          // 权重格式化hash\n          weightHash = {};\n          for(let i = 0, len = weights.length, verticesIndex = 0; i < len; i++) {\n            let num = weights[i];\n            let list = [];\n            for(let j = i + 1; j < i + 1 + num * 2; j += 2) {\n              let index = weights[j];\n              let value = weights[j + 1];\n              list.push({\n                index,\n                value,\n              });\n            }\n            weightHash[verticesIndex++] = list;\n            i += num * 2;\n          }\n          // 骨骼初始pose格式化和世界坐标\n          bonePoseHash = {};\n          for(let i = 0, len = bonePose.length; i < len; i += 7) {\n            let index = bonePose[i];\n            let matrix = bonePose.slice(i + 1, i + 7);\n            let coords = math.matrix.calPoint([0, 0], matrix);\n            bonePoseHash[index] = {\n              coords,\n              pose: matrix,\n            };\n          }\n        }\n        // 顶点格式化，相对于骨骼点的x/y位移差值\n        let verticesList = item.verticesList = [];\n        for(let i = 0, len = vertices.length; i < len; i += 2) {\n          let index = i >> 1;\n          let x = vertices[i];\n          let y = vertices[i + 1];\n          let res = {\n            index,\n            x,\n            y,\n          };\n          verticesList.push(res);\n          // 有添加绑定骨骼才有权重\n          if(weightHash) {\n            res.weightList = [];\n            let weight = weightHash[index];\n            weight.forEach(item => {\n              let { index, value } = item;\n              let { coords, pose } = bonePoseHash[index];\n              // 先求骨头的角度，逆向选择至水平后，平移x/y的差值\n              let [x0, y0] = math.matrix.calPoint([0, 0], pose);\n              let [x1, y1] = math.matrix.calPoint([1, 0], pose);\n              let dx = x1 - x0;\n              let dy = y1 - y0;\n              let theta;\n              // 4个象限分开判断\n              if(dx >= 0 && dy >= 0) {\n                theta = -Math.atan(Math.abs(dy / dx));\n              }\n              else if(dx < 0 && dy >= 0) {\n                theta = -Math.PI + Math.atan(Math.abs(dy / dx));\n              }\n              else if(dx < 0 && dy < 0) {\n                theta = Math.PI - Math.atan(Math.abs(dy / dx));\n              }\n              else {\n                theta = Math.atan(Math.abs(dy / dx));\n              }\n              let rotate = [Math.cos(theta), Math.sin(theta), -Math.sin(theta), Math.cos(theta), 0, 0];\n              let translate = [1, 0, 0, 1, x - coords[0], y - coords[1]];\n              let matrix = math.matrix.multiply(rotate, translate);\n              res.weightList.push({\n                index,\n                value,\n                matrix,\n              });\n            });\n          }\n        }\n        // 三角形，切割图片坐标\n        let tex = texHash[path || name];\n        let { width, height } = tex;\n        let triangleList = item.triangleList = [];\n        for(let i = 0, len = triangles.length; i < len; i += 3) {\n          let i1 = triangles[i];\n          let i2 = triangles[i + 1];\n          let i3 = triangles[i + 2];\n          // uv坐标\n          let p1x = uvs[i1 * 2];\n          let p1y = uvs[i1 * 2 + 1];\n          let p2x = uvs[i2 * 2];\n          let p2y = uvs[i2 * 2 + 1];\n          let p3x = uvs[i3 * 2];\n          let p3y = uvs[i3 * 2 + 1];\n          // uv贴图坐标根据尺寸映射真实坐标\n          let x1 = p1x * width;\n          let y1 = p1y * height;\n          let x2 = p2x * width;\n          let y2 = p2y * height;\n          let x3 = p3x * width;\n          let y3 = p3y * height;\n          // 从内心往外扩展约0.25px，可参数指定\n          let [x0, y0] = math.geom.triangleIncentre(x1, y1, x2, y2, x3, y3);\n          let px = parseFloat(props.enlarge);\n          if(isNaN(px)) {\n            px = 0.25;\n          }\n          // 单独为slot配置的扩展参数\n          if(props.enlargeSlot && props.enlargeSlot.hasOwnProperty(slotName)) {\n            let n = parseFloat(props.enlargeSlot[slotName]);\n            if(isNaN(n)) {\n              n = 0.25;\n            }\n            px = n;\n          }\n          let scale = px ? triangleScale(x0, y0, x1, y1, x2, y2, x3, y3, px) : 1;\n          // 以内心为transformOrigin\n          let m = math.matrix.identity();\n          m[4] = -x0;\n          m[5] = -y0;\n          // 缩放\n          let t = math.matrix.identity();\n          t[0] = t[3] = scale;\n          m = math.matrix.multiply(t, m);\n          // 移动回去\n          t[4] = x0;\n          t[5] = y0;\n          m = math.matrix.multiply(t, m);\n          // 获取扩展后的三角形顶点坐标\n          let [sx1, sy1] = math.geom.transformPoint(m, x1, y1);\n          let [sx2, sy2] = math.geom.transformPoint(m, x2, y2);\n          let [sx3, sy3] = math.geom.transformPoint(m, x3, y3);\n          // 三角形所在矩形距离左上角原点的坐标，以此做img切割最小尺寸化，以及变换原点计算\n          // let [ox, oy, ow, oh] = triangleOriginCoords(sx1, sy1, sx2, sy2, sx3, sy3);\n          triangleList.push({\n            index: Math.round(i / 3),\n            indexList: [i1, i2, i3],\n            // ox,\n            // oy,\n            // ow,\n            // oh,\n            // points: [\n            //   [p1x, p1y],\n            //   [p2x, p2y],\n            //   [p3x, p3y]\n            // ],\n            coords: [\n              [x1, y1],\n              [x2, y2],\n              [x3, y3]\n            ],\n            scale,\n            scaleCoords: [\n              [sx1, sy1],\n              [sx2, sy2],\n              [sx3, sy3]\n            ],\n            width,\n            height,\n          });\n        }\n      }\n    });\n  });\n  return hash;\n}\n\n/**\n * 将三角形从内心缩放指定像素\n * @param x0\n * @param y0\n * @param x1\n * @param y1\n * @param x2\n * @param y2\n * @param x3\n * @param y3\n * @param px 缩放多少像素，可正负\n * @returns {number} 缩放倍数\n */\nfunction triangleScale(x0, y0, x1, y1, x2, y2, x3, y3, px = 0) {\n  // 内心到任意一边的距离\n  let a = y2 - y1;\n  let b = x1 - x2;\n  let c = x2 * y1 - x1 * y2;\n  let d = Math.abs(a * x0 + b * y0 + c) / Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n  return (d + px) / d;\n}\n\n/**\n * 获取三角形所在最小矩形的原点坐标、尺寸\n * @param x1\n * @param y1\n * @param x2\n * @param y2\n * @param x3\n * @param y3\n */\nfunction triangleOriginCoords(x1, y1, x2, y2, x3, y3) {\n  let xMin = x1;\n  let yMin = y1;\n  let xMax = x1;\n  let yMax = y1;\n  xMin = Math.min(xMin, x2);\n  xMin = Math.min(xMin, x3);\n  yMin = Math.min(yMin, y2);\n  yMin = Math.min(yMin, y3);\n  xMax = Math.max(xMax, x2);\n  xMax = Math.max(xMax, x3);\n  yMax = Math.max(yMax, y2);\n  yMax = Math.max(yMax, y3);\n  return [xMin, yMin, xMax - xMin, yMax - yMin];\n}\n\nfunction parseAnimation(data, frameRate, boneHash) {\n  let hash = {};\n  data.forEach(item => {\n    let { duration, playTimes, name, bone = [], slot = [], ffd = [] } = item;\n    hash[name] = item;\n    item.options = {\n      duration: 1000 * duration / frameRate,\n      iterations: playTimes === 0 ? Infinity : playTimes,\n      fill: 'forwards',\n    };\n    // 骨骼动画列表\n    item.boneAnimationList = bone.map(item => {\n      let { name, translateFrame, rotateFrame, scaleFrame } = item;\n      let { transform: originTransform = {} } = boneHash[name];\n      let res = {\n        name,\n        list: [],\n      };\n      if(translateFrame) {\n        let offsetSum = 0;\n        let last;\n        let value = translateFrame.map(frame => {\n          let { duration: d = 1 } = frame;\n          let easingFn = getEasing(frame);\n          let offset = offsetSum / duration;\n          offsetSum += d;\n          let { x = 0, y = 0 } = originTransform;\n          let res = {\n            type: 0,\n            translateX: (frame.x || 0) + x,\n            translateY: (frame.y || 0) + y,\n            offset,\n            easingFn,\n          };\n          if(last) {\n            last.dx = res.translateX - last.translateX;\n            last.dy = res.translateY - last.translateY;\n          }\n          last = res;\n          return res;\n        });\n        res.list.push(value);\n      }\n      if(rotateFrame) {\n        let offsetSum = 0;\n        let last;\n        let value = rotateFrame.map(frame => {\n          let { duration: d = 1 } = frame;\n          let easingFn = getEasing(frame);\n          let offset = offsetSum / duration;\n          offsetSum += d;\n          let { skX = 0 } = originTransform;\n          let res = {\n            type: 1,\n            rotateZ: (frame.rotate || 0) + skX,\n            offset,\n            easingFn,\n          };\n          if(last) {\n            last.dz = res.rotateZ - last.rotateZ;\n          }\n          last = res;\n          return res;\n        });\n        res.list.push(value);\n      }\n      if(scaleFrame) {\n        let offsetSum = 0;\n        let last;\n        let value = scaleFrame.map(frame => {\n          let { duration: d = 1 } = frame;\n          let easingFn = getEasing(frame);\n          let offset = offsetSum / duration;\n          offsetSum += d;\n          let { scX = 1, scY = 1 } = originTransform;\n          let res = {\n            type: 2,\n            scaleX: (frame.x === undefined ? 1 : frame.x) * scX,\n            scaleY: (frame.y === undefined ? 1 : frame.y) * scY,\n            offset,\n            easingFn,\n          };\n          if(last) {\n            last.dx = res.scaleX - last.scaleX;\n            last.dy = res.scaleY - last.scaleY;\n          }\n          last = res;\n          return res;\n        });\n        res.list.push(value);\n      }\n      return res;\n    });\n    // 插槽动画列表\n    item.slotAnimationList = slot.map(item => {\n      let { displayFrame, colorFrame } = item;\n      if(displayFrame) {\n        let offsetSum = 0;\n        displayFrame.forEach(frame => {\n          let { duration: d = 1 } = frame;\n          let offset = offsetSum / duration;\n          offsetSum += d;\n          frame.offset = offset;\n        });\n      }\n      if(colorFrame) {\n        let offsetSum = 0;\n        let last;\n        colorFrame.forEach(frame => {\n          let { duration: d = 1 } = frame;\n          frame.easingFn = getEasing(frame);\n          let offset = offsetSum / duration;\n          offsetSum += d;\n          frame.offset = offset;\n          // 没有value就用默认值\n          if(!frame.value) {\n            frame.value = {\n              aM: 100,\n            };\n          }\n          if(frame.value.aM === undefined) {\n            frame.value.aM = 100;\n          }\n          if(last) {\n            last.da = frame.value.aM - last.value.aM;\n          }\n          last = frame;\n        });\n      }\n      return item;\n    });\n    // 自由变形列表\n    let ffdAnimationHash = item.ffdAnimationHash = {};\n    item.ffdAnimationList = ffd.map(item => {\n      let { name, slot, frame } = item;\n      // db限制了不能出现在名字里\n      ffdAnimationHash[slot + '>' + name] = item;\n      if(frame) {\n        let offsetSum = 0;\n        let last;\n        frame.forEach(frame => {\n          let { vertices, duration: d = 1, offset: os } = frame;\n          frame.easingFn = getEasing(frame);\n          if(vertices) {\n            for(let i = 0; i < os; i++) {\n              vertices.unshift(0);\n            }\n          }\n          let offset = offsetSum / duration;\n          offsetSum += d;\n          frame.offset = offset;\n          // 顶点变形数据vertices都是偏移量，无偏移为空\n          if(last) {\n            let verticesLast = last.vertices;\n            if(verticesLast && vertices) {\n              last.dv = [];\n              for(let i = 0, len = Math.max(verticesLast.length, vertices.length); i < len; i++) {\n                last.dv.push((vertices[i] || 0) - (verticesLast[i] || 0));\n              }\n            }\n            else if(verticesLast) {\n              last.dv = last.vertices.map(n => -n);\n            }\n            else if(vertices) {\n              last.dv = vertices;\n            }\n          }\n          last = frame;\n        });\n      }\n      return item;\n    });\n  });\n  return hash;\n}\n\nfunction getEasing(frame) {\n  let curve = frame.curve;\n  if(curve && curve[0] !== 1 && curve[1] !== 1 && curve[2] !== 0 && curve[3] !== 0) {\n    return karas.animate.easing.cubicBezier(curve[0], curve[1], curve[2], curve[3]);\n  }\n}\n\nexport default {\n  parseAndLoadTex,\n  parseSke,\n};\n","import karas from 'karas';\n\nconst { math } = karas;\n\n/**\n * 根据动画时间状态修改骨骼当前matrix\n * @param animationList 动画列表\n * @param offset 当前时间偏移量\n * @param boneHash 骨骼hash\n */\nfunction animateBoneMatrix(animationList, offset, boneHash) {\n  animationList.forEach(item => {\n    let { name, list } = item;\n    let bone = boneHash[name];\n    // 先以静态变换样式为基础\n    let { transform = {} } = bone;\n    let res = {};\n    res.translateX = transform.x || 0;\n    res.translateY = transform.y || 0;\n    res.rotateZ = transform.skX || 0;\n    res.scaleX = transform.scX === undefined ? 1 : transform.scX;\n    res.scaleY = transform.scY === undefined ? 1 : transform.scY;\n    // 再assign动画中的变换样式\n    list.forEach(frames => {\n      let len = frames.length;\n      let type = frames[0].type;\n      let i = binarySearch(0, len - 1, offset, frames);\n      let current = frames[i];\n      let easingFn = current.easingFn;\n      // 是否最后一帧\n      if(i === len - 1) {\n        if(type === 0) {\n          res.translateX = current.translateX;\n          res.translateY = current.translateY;\n        }\n        else if(type === 1) {\n          res.rotateZ = current.rotateZ;\n        }\n        else if(type === 2) {\n          res.scaleX = current.scaleX;\n          res.scaleY = current.scaleY;\n        }\n      }\n      else {\n        let next = frames[i + 1];\n        let total = next.offset - current.offset;\n        let percent = (offset - current.offset) / total;\n        if(easingFn) {\n          percent = easingFn(percent);\n        }\n        if(type === 0) {\n          res.translateX = current.translateX + current.dx * percent;\n          res.translateY = current.translateY + current.dy * percent;\n        }\n        else if(type === 1) {\n          res.rotateZ = current.rotateZ + current.dz * percent;\n        }\n        else if(type === 2) {\n          res.scaleX = current.scaleX + current.dx * percent;\n          res.scaleY = current.scaleY + current.dy * percent;\n        }\n      }\n    });\n    let matrix = [1, 0, 0, 1, 0, 0];\n    if(res.translateX || res.translateY) {\n      let m = [1, 0, 0, 1, res.translateX || 0, res.translateY || 0];\n      matrix = math.matrix.multiply(matrix, m);\n    }\n    if(res.rotateZ) {\n      let d = math.geom.d2r(res.rotateZ);\n      let sin = Math.sin(d);\n      let cos = Math.cos(d);\n      let m = [cos, sin, -sin, cos, 0, 0];\n      matrix = math.matrix.multiply(matrix, m);\n    }\n    if(res.scaleX !== undefined || res.scaleY !== undefined) {\n      let m = [res.scaleX === undefined ? 1 : res.scaleX, 0, 0, res.scaleY === undefined ? 1 : res.scaleY, 0, 0];\n      matrix = math.matrix.multiply(matrix, m);\n    }\n    bone.matrixA = matrix;\n  });\n}\n\n/**\n * 二分查找根据时间轴帧序列和当前百分比获得当前帧\n * @param i\n * @param j\n * @param offset\n * @param frames\n * @returns {frame}\n */\nfunction binarySearch(i, j, offset, frames) {\n  if(i === j) {\n    let frame = frames[i];\n    if(frame.offset > offset) {\n      return i - 1;\n    }\n    return i;\n  }\n  else {\n    let middle = i + ((j - i) >> 1);\n    let frame = frames[middle];\n    if(frame.offset === offset) {\n      return middle;\n    }\n    else if(frame.offset > offset) {\n      return binarySearch(i, Math.max(middle - 1, i), offset, frames);\n    }\n    else {\n      return binarySearch(Math.min(middle + 1, j), j, offset, frames);\n    }\n  }\n}\n\n/**\n * 递归遍历骨骼，根据父子属性合并生成骨骼相对于舞台的最终currentMatrix\n * @param root 根骨骼\n */\nfunction mergeBoneMatrix(root) {\n  root.currentMatrix = root.matrixA || root.matrix;\n  root.children.forEach(item => {\n    mergeChildBoneMatrix(item, root.currentMatrix);\n  });\n}\n\nfunction mergeChildBoneMatrix(bone, parentMatrix) {\n  bone.currentMatrix = math.matrix.multiply(parentMatrix, bone.matrixA || bone.matrix);\n  bone.children.forEach(item => {\n    mergeChildBoneMatrix(item, bone.currentMatrix);\n  });\n}\n\n/**\n * 根据当前动画时间执行slot的动画，确定显示slot下的皮肤索引和透明度\n * @param slotAnimationList\n * @param offset\n * @param slotHash\n */\nfunction animateSlot(slotAnimationList, offset, slotHash) {\n  slotAnimationList.forEach(item => {\n    let { name, displayFrame, colorFrame } = item;\n    let slot = slotHash[name];\n    if(displayFrame) {\n      let i = binarySearch(0, displayFrame.length - 1, offset, displayFrame);\n      let { value = 0 } = displayFrame[i];\n      slot.displayIndexA = value;\n    }\n    if(colorFrame) {\n      let len = colorFrame.length;\n      let i = binarySearch(0, len - 1, offset, colorFrame);\n      let current = colorFrame[i];\n      let easingFn = current.easing;\n      // 是否最后一帧\n      if(i === len - 1) {\n        slot.colorA = current.value;\n      }\n      else {\n        let next = colorFrame[i + 1];\n        let total = next.offset - current.offset;\n        let percent = (offset - current.offset) / total;\n        if(easingFn) {\n          percent = easingFn(percent);\n        }\n        slot.colorA = {\n          aM: current.value.aM + current.da * percent,\n        };\n      }\n    }\n  });\n}\n\n/**\n * 根据当前骨骼状态计算slot中显示对象变换matrix\n * @param offset\n * @param slot\n * @param skinHash\n * @param bone\n * @param boneHash\n * @param texHash\n * @param ffdAnimationHash\n */\nfunction calSlot(offset, slot, skinHash, bone, boneHash, texHash, ffdAnimationHash) {\n  slot.forEach(item => {\n    let { name, parent, displayIndex = 0, displayIndexA = displayIndex } = item;\n    // 插槽隐藏不显示\n    if(displayIndexA < 0) {\n      return;\n    }\n    let skin = skinHash[name];\n    let displayTarget = skin.display[displayIndexA];\n    // 网格类型\n    if(displayTarget.type === 'mesh') {\n      let { verticesList, triangleList } = displayTarget;\n      // 先进行顶点变换\n      verticesList.forEach(item => {\n        let { weightList } = item;\n        // 有绑定骨骼的mesh，计算权重\n        if(weightList) {\n          let m = [0, 0, 0, 0, 0, 0];\n          weightList.forEach(weight => {\n            let { index, value, matrix } = weight;\n            let boneMatrix = bone[index].currentMatrix;\n            let offset = karas.math.matrix.multiply(boneMatrix, matrix);\n            for(let i = 0; i < 6; i++) {\n              m[i] += offset[i] * value;\n            }\n          });\n          item.matrix = m;\n          // item.coords = math.geom.transformPoint(m, 0, 0);\n        }\n        // 没有绑定认为直属父骨骼\n        else {\n          let parentBoneMatrix = boneHash[parent].currentMatrix;\n          let offsetMatrix = [1, 0, 0, 1, item.x, item.y];\n          let m = karas.math.matrix.multiply(parentBoneMatrix, offsetMatrix);\n          item.matrix = m;\n          // item.coords = math.geom.transformPoint(m, 0, 0);\n        }\n        // 每次先清空ffd自由变换的数据\n        item.matrixF = null;\n      });\n      // 如果有ffd自定义顶点变换，计算偏移量matrix\n      let ffd = ffdAnimationHash[name + '>' + (displayTarget.path || displayTarget.name)];\n      if(ffd) {\n        let { frame } = ffd;\n        if(frame) {\n          let len = frame.length;\n          let i = binarySearch(0, len - 1, offset, frame);\n          let current = frame[i];\n          let easingFn = current.easingFn;\n          // 是否最后一帧\n          if(i === len - 1) {\n            let { vertices } = current;\n            if(vertices) {\n              for(let i = 0, len = vertices.length; i < len - 1; i += 2) {\n                let x = vertices[i];\n                let y = vertices[i + 1];\n                if(x === 0 && y === 0) {\n                  continue;\n                }\n                let index = i >> 1;\n                let target = verticesList[index];\n                let m = [1, 0, 0, 1, x, y];\n                target.matrixF = math.matrix.multiply(target.matrix, m);\n              }\n            }\n          }\n          else {\n            let next = frame[i + 1];\n            let total = next.offset - current.offset;\n            let percent = (offset - current.offset) / total;\n            if(easingFn) {\n              percent = easingFn(percent);\n            }\n            let { vertices, dv } = current;\n            if(vertices || dv) {\n              let len = 0;\n              if(vertices) {\n                len = vertices.length;\n              }\n              if(dv) {\n                len = Math.max(len, dv.length);\n              }\n              for(let i = 0; i < len - 1; i += 2) {\n                let x, y;\n                if(vertices) {\n                  x = vertices[i] || 0;\n                  y = vertices[i + 1] || 0;\n                }\n                else {\n                  x = y = 0;\n                }\n                if(dv) {\n                  x += (dv[i] || 0) * percent;\n                  y += (dv[i + 1] || 0) * percent;\n                }\n                if(x === 0 && y === 0) {\n                  continue;\n                }\n                let index = i >> 1;\n                let target = verticesList[index];\n                let m = [1, 0, 0, 1, x, y];\n                target.matrixF = math.matrix.multiply(target.matrix, m);\n              }\n            }\n          }\n        }\n      }\n      // 三角形根据顶点坐标变化计算仿射变换matrix\n      triangleList.forEach(item => {\n        let { indexList, coords } = item;\n        let source = coords[0].concat(coords[1]).concat(coords[2]);\n        let target = [];\n        indexList.forEach(i => {\n          let vertices = verticesList[i];\n          let coords = math.geom.transformPoint(vertices.matrixF || vertices.matrix, 0, 0);\n          target = target.concat(coords);\n        });\n        // 先交换确保3个点顺序\n        let [source1, target1] = math.tar.exchangeOrder(source, target);\n        let matrix = math.tar.transform(source1, target1);\n        item.matrix = matrix;\n      });\n    }\n    // 默认图片类型\n    else {\n      let { transform = {} } = displayTarget;\n      let tex = texHash[displayTarget.path || displayTarget.name];\n      let parentBoneMatrix = boneHash[parent].currentMatrix;\n      let matrix = math.matrix.identity();\n      // 图片本身形变，因中心点在图片本身中心，所以无论是否有translate都要平移\n      let t = [1, 0, 0, 1, (transform.x || 0) - tex.frameWidth * 0.5, (transform.y || 0) - tex.frameHeight * 0.5];\n      matrix = math.matrix.multiply(matrix, t);\n      // 可选旋转\n      if(transform.skX) {\n        let d = math.geom.d2r(transform.skX);\n        let sin = Math.sin(d);\n        let cos = Math.cos(d);\n        let t = [cos, sin, -sin, cos, 0, 0];\n        matrix = math.matrix.multiply(matrix, t);\n      }\n      // 可选缩放\n      if(transform.scX !== undefined || transform.scY !== undefined) {\n        let t = [transform.scX === undefined ? 1 : transform.scX, 0, 0, transform.scY === undefined ? 1 : transform.scY, 0, 0];\n        matrix = math.matrix.multiply(matrix, t);\n      }\n      // tfo为图片中心，可合并\n      t = math.matrix.identity();\n      t[4] = tex.frameWidth * 0.5;\n      t[5] = tex.frameHeight * 0.5;\n      matrix = math.matrix.multiply(t, matrix);\n      t = math.matrix.identity();\n      t[4] = -tex.frameWidth * 0.5;\n      t[5] = -tex.frameHeight * 0.5;\n      matrix = math.matrix.multiply(matrix, t);\n      matrix = math.matrix.multiply(parentBoneMatrix, matrix);\n      displayTarget.matrix = matrix;\n    }\n  });\n}\n\nfunction clearAnimation(bone, slot) {\n  bone.forEach(item => {\n    delete item.matrixA;\n  });\n  slot.forEach(item => {\n    delete item.displayIndexA;\n    delete item.colorA;\n  });\n}\n\nexport default {\n  animateBoneMatrix,\n  mergeBoneMatrix,\n  animateSlot,\n  calSlot,\n  clearAnimation,\n};\n","import karas from 'karas';\n\nconst { math } = karas;\n\nfunction canvasBone(ctx, matrixEvent, bone) {\n  let { length, children, currentMatrix } = bone;\n  let m = math.matrix.multiply(matrixEvent, currentMatrix);\n  ctx.setTransform(...m);\n  ctx.beginPath();\n  ctx.strokeStyle = '#000';\n  ctx.lineWidth = 1;\n  ctx.arc(0, 0, 5, 0, Math.PI * 2);\n  ctx.moveTo(0, 0);\n  ctx.lineTo(length || 5, 0);\n  ctx.closePath();\n  ctx.stroke();\n  children.forEach(item => {\n    canvasBone(ctx, matrixEvent, item);\n  });\n}\n\nfunction canvasSlot(ctx, matrixEvent, slot, skinHash, texHash) {\n  slot.forEach(item => {\n    let { name, displayIndex = 0, displayIndexA = displayIndex, blendMode, color = {}, colorA = color } = item;\n    // 插槽隐藏不显示\n    if(displayIndexA < 0) {\n      return;\n    }\n    // 叠加模式\n    if(blendMode === 'add') {\n      ctx.globalCompositeOperation = 'lighter';\n    }\n    let { aM = 100 } = colorA;\n    let opacity = ctx.globalAlpha;\n    // 透明度\n    ctx.globalAlpha *= aM / 100;\n    let skin = skinHash[name];\n    let displayTarget = skin.display[displayIndexA];\n    let tex = texHash[displayTarget.path || displayTarget.name];\n    // 网格类型\n    if(displayTarget.type === 'mesh') {\n      let { triangleList } = displayTarget;\n      triangleList.forEach(item => {\n        let { matrix, scaleCoords } = item;\n        matrix = math.matrix.multiply(matrixEvent, matrix);\n        // clip绘制\n        ctx.save();\n        ctx.setTransform(...matrix);\n        ctx.beginPath();\n        ctx.moveTo(scaleCoords[0][0], scaleCoords[0][1]);\n        ctx.lineTo(scaleCoords[1][0], scaleCoords[1][1]);\n        ctx.lineTo(scaleCoords[2][0], scaleCoords[2][1]);\n        ctx.closePath();\n        ctx.clip();\n        ctx.drawImage(tex.source, -tex.x - tex.frameX, -tex.y - tex.frameY);\n        ctx.restore();\n      });\n    }\n    // 默认图片类型\n    else {\n      let { matrix } = displayTarget;\n      if(matrix[0] === 0 || matrix[3] === 0) {\n        return;\n      }\n      matrix = math.matrix.multiply(matrixEvent, matrix);\n      // clip绘制\n      ctx.save();\n      ctx.setTransform(...matrix);\n      ctx.beginPath();\n      ctx.moveTo(-tex.frameX, -tex.frameY);\n      ctx.lineTo(-tex.frameX + tex.width, -tex.frameY);\n      ctx.lineTo(-tex.frameX + tex.width,  -tex.frameY + tex.height);\n      ctx.lineTo(-tex.frameX,  -tex.frameY + tex.height);\n      ctx.closePath();\n      ctx.clip();\n      ctx.drawImage(tex.source, -tex.x - tex.frameX, -tex.y - tex.frameY);\n      ctx.restore();\n    }\n    // 恢复模式\n    if(blendMode) {\n      ctx.globalCompositeOperation = 'source-over';\n    }\n    ctx.globalAlpha = opacity;\n  });\n}\n\nfunction canvasTriangle(ctx, matrixEvent, slot, skinHash, texHash) {\n  slot.forEach(item => {\n    let { name, displayIndex = 0, displayIndexA = displayIndex } = item;\n    // 插槽隐藏不显示\n    if(displayIndexA < 0) {\n      return;\n    }\n    let skin = skinHash[name];\n    let displayTarget = skin.display[displayIndexA];\n    let tex = texHash[displayTarget.path || displayTarget.name];\n    // 网格类型\n    if(displayTarget.type === 'mesh') {\n      let { verticesList, triangleList } = displayTarget;\n      triangleList.forEach(item => {\n        let { matrix, scaleCoords } = item;\n        matrix = math.matrix.multiply(matrixEvent, matrix);\n        ctx.setTransform(...matrix);\n        ctx.strokeStyle = '#39F';\n        ctx.lineWidth = 1;\n        ctx.beginPath();\n        ctx.moveTo(scaleCoords[0][0], scaleCoords[0][1]);\n        ctx.lineTo(scaleCoords[1][0], scaleCoords[1][1]);\n        ctx.lineTo(scaleCoords[2][0], scaleCoords[2][1]);\n        ctx.closePath();\n        ctx.stroke();\n      });\n      verticesList.forEach(item => {\n        let { matrix, matrixF } = item;\n        matrix = math.matrix.multiply(matrixEvent, matrixF || matrix);\n        ctx.setTransform(...matrix);\n        ctx.fillStyle = '#0D6';\n        ctx.beginPath();\n        ctx.arc(0, 0, 4, 0, Math.PI * 2);\n        ctx.closePath();\n        ctx.fill();\n      });\n    }\n    // 默认图片类型\n    else {\n      let { matrix } = displayTarget;\n      matrix = math.matrix.multiply(matrixEvent, matrix);\n      ctx.save();\n      ctx.setTransform(...matrix);\n      ctx.strokeStyle = '#F90';\n      ctx.lineWidth = 1;\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(tex.frameWidth, 0);\n      ctx.lineTo(tex.frameWidth, tex.frameHeight);\n      ctx.lineTo(0, tex.frameHeight);\n      ctx.closePath();\n      ctx.stroke();\n      ctx.strokeStyle = 'rgba(172, 0, 172, 0.5)';\n      ctx.beginPath();\n      ctx.moveTo(-tex.frameX, -tex.frameY);\n      ctx.lineTo(-tex.frameX + tex.width, -tex.frameY);\n      ctx.lineTo(-tex.frameX + tex.width,  -tex.frameY + tex.height);\n      ctx.lineTo(-tex.frameX,  -tex.frameY + tex.height);\n      ctx.closePath();\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n}\n\nexport default {\n  canvasSlot,\n  canvasTriangle,\n  canvasBone,\n};\n","import karas from 'karas';\nimport parser from './parser';\nimport util from './util';\nimport render from './render';\nimport { version } from '../package.json';\n\nlet uuid = 0;\n\nconst SHARE_CACHE = {};\n\nclass Dragonbones extends karas.Component {\n  componentDidMount() {\n    this.init();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    let props = this.props;\n    if(nextProps !== props) {\n      if(nextProps.ske !== props.ske\n        || nextProps.tex !== props.tex\n        || nextProps.enlarge !== props.enlarge\n        || nextProps.enlargeSlot !== props.enlargeSlot\n          && !karas.util.equal(nextProps.enlargeSlot, props.enlargeSlot)) {\n        this.init();\n      }\n      else {\n        if(nextProps.armature !== props.armature) {\n          this.armature(nextProps.armature, props);\n        }\n        else {\n          if(nextProps.action !== props.action) {\n            this.action(nextProps.action);\n          }\n          if(nextProps.imagePath !== props.imagePath) {\n            this.changeImage(nextProps.imagePath);\n          }\n          if(nextProps.playbackRate !== props.playbackRate && this.animation) {\n            this.animation.playbackRate = nextProps.playbackRate;\n          }\n          if(nextProps.fps !== props.fps && this.animation) {\n            this.animation.fps = nextProps.fps;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  init() {\n    let props = this.props;\n    let { ske, tex } = props;\n    let total = 0;\n    if(karas.util.isString(ske)) {\n      total++;\n      props.loadJson(ske, (res) => {\n        total--;\n        ske = res;\n        this.build(total, ske, tex);\n      });\n    }\n    if(karas.util.isString(tex)) {\n      total++;\n      props.loadJson(tex, (res) => {\n        total--;\n        tex = res;\n        this.build(total, ske, tex);\n      });\n    }\n    this.build(total, ske, tex);\n  }\n\n  build(count, ske, tex) {\n    if(count !== 0) {\n      return;\n    }\n    let props = this.props;\n    this.staticCacheFlag = !!props.staticCache;\n    this.staticCacheHash = {};\n    ske.uuid = ske.uuid || ++uuid;\n    if(ske.version !== '5.5') {\n      throw new Error('The version' + ske.version + ' does not match 5.5');\n    }\n    this.ske = karas.util.clone(ske);\n    this.tex = karas.util.clone(tex);\n    parser.parseAndLoadTex(this.tex, (texHash) => {\n      this.texHash = texHash;\n      this.armature(props.armature, props);\n    }, props);\n  }\n\n  armature(name, options = {}) {\n    let op = karas.util.extend({}, options);\n    op.armature = name;\n    let {\n      name: n,\n      bone,\n      boneHash,\n      slot,\n      slotHash,\n      skin,\n      skinHash,\n      animationHash,\n      defaultActions,\n      canvas,\n    } = parser.parseSke(this.ske, this.texHash, op);\n    this.armatureName = n;\n    this.bone = bone;\n    this.boneHash = boneHash;\n    this.slot = slot;\n    this.slotHash = slotHash;\n    this.skin = skin;\n    this.skinHash = skinHash;\n    this.animationHash = animationHash;\n    this.canvas = canvas;\n\n    let defaultAction;\n    if(options.action && animationHash[options.action]) {\n      let key = options.pause ? 'gotoAndStop' : 'gotoAndPlay';\n      defaultAction = {\n        [key]: options.action,\n      };\n    }\n    // 不存在或没有指定使用ske文件的第一个\n    else if(defaultActions && defaultActions.length) {\n      defaultAction = defaultActions[0];\n    }\n    if(defaultAction) {\n      let a = this.action(defaultAction.gotoAndPlay || defaultAction.gotoAndStop);\n      if(options.pause || defaultAction.gotoAndStop) {\n        a.gotoAndStop(0);\n      }\n      return a;\n    }\n    else {\n      console.warn('No action data');\n    }\n  }\n\n  action(name) {\n    this.actionName = name;\n    let animation = this.animationHash[name];\n    if(!animation) {\n      throw new Error('Can not find animation: ' + name);\n    }\n    // 清除上次动画的影响\n    if(this.animation) {\n      util.clearAnimation(this.bone, this.slot);\n    }\n    let { boneAnimationList, slotAnimationList, ffdAnimationHash, options } = animation;\n    if(!karas.util.isNil(this.props.playbackRate)) {\n      options.playbackRate = this.props.playbackRate;\n    }\n    if(!karas.util.isNil(this.props.fps)) {\n      options.fps = this.props.fps;\n    }\n    // 隐藏节点模拟一段不展示的动画，带动每次渲染\n    let fake = this.ref.fake;\n    fake.clearAnimate();\n    let a = this.animation = fake.animate([\n      {\n        opacity: 0,\n      },\n      {\n        opacity: 1,\n      }\n    ], options);\n    // 劫持隐藏节点渲染，因本身display:none可以不执行原本逻辑，计算并渲染骨骼动画\n    let self = this;\n    let root = self.root;\n    let width = root.width;\n    let height = root.height;\n    fake.render = function(renderMode, ctx, defs) {\n      // 开启了静态帧优化优先使用缓存\n      let offScreen;\n      let sourceCtx;\n      let staticKey;\n      if(self.staticCacheFlag) {\n        offScreen = karas.inject.getCacheCanvas(width, height);\n        sourceCtx = ctx;\n        ctx = offScreen.ctx;\n        let frame = Math.floor(a.currentTime * (self.fps || 60) / 1000);\n        // ske文件uuid + 骨架名 + 动画名 + 帧数\n        staticKey = self.ske.uuid + '>' + self.armatureName + '>' + self.actionName + '>' + frame;\n        let cache = self.staticCacheHash[staticKey];\n        if(cache) {\n          ctx.putImageData(cache, 0, 0);\n          offScreen.draw(ctx);\n          sourceCtx.drawImage(offScreen.canvas, 0, 0);\n          ctx.clearRect(0, 0, width, height);\n          return;\n        }\n      }\n      let { bone, slot, boneHash, slotHash, skinHash, texHash } = self;\n      // 动态情况缓存当前帧，为多个实例节省计算\n      let dynamicKey = self.ske.uuid + '>' + self.armatureName + '>' + self.actionName;\n      let dynamicCache = SHARE_CACHE[dynamicKey];\n      if(self.props.share && dynamicCache && dynamicCache.currentTime === a.currentTime) {\n        bone = dynamicCache.bone;\n        slot = dynamicCache.slot;\n        skinHash = dynamicCache.skinHash;\n      }\n      else {\n        let offset = Math.min(1, a.currentTime / a.duration);\n        util.animateBoneMatrix(boneAnimationList, offset, boneHash);\n        util.mergeBoneMatrix(bone[0]);\n        util.animateSlot(slotAnimationList, offset, slotHash);\n        util.calSlot(offset, slot, skinHash, bone, boneHash, texHash, ffdAnimationHash);\n        SHARE_CACHE[dynamicKey] = {\n          bone,\n          slot,\n          skinHash,\n          currentTime: a.currentTime,\n        };\n      }\n      if(renderMode === karas.mode.CANVAS) {\n        let { matrixEvent, computedStyle } = self.shadowRoot;\n        // 先在dom中居中\n        let left = computedStyle.marginLeft + computedStyle.borderLeftWidth + computedStyle.width * 0.5;\n        let top = computedStyle.marginTop + computedStyle.borderTopWidth + computedStyle.height * 0.5;\n        let t = karas.math.matrix.identity();\n        t[4] = left;\n        t[5] = top;\n        // 画布居中\n        if(self.canvas) {\n          let dx = self.canvas.x || 0;\n          let dy = self.canvas.y || 0;\n          t[4] -= dx * 0.5;\n          t[5] -= dy * 0.5;\n          // 适配尺寸\n          if(self.props.fitSize) {\n            let sx = computedStyle.width / self.canvas.width;\n            let sy = computedStyle.height / self.canvas.height;\n            t[0] = sx;\n            t[3] = sy;\n          }\n        }\n        matrixEvent = karas.math.matrix.multiply(matrixEvent, t);\n        render.canvasSlot(ctx, matrixEvent, slot, skinHash, texHash);\n        // debug模式\n        if(self.props.debug) {\n          render.canvasTriangle(ctx, matrixEvent, slot, skinHash, texHash);\n          render.canvasBone(ctx, matrixEvent, bone[0]);\n        }\n        else {\n          if(self.props.debugBone) {\n            render.canvasBone(ctx, matrixEvent, bone[0]);\n          }\n          if(self.props.debugSlot) {\n            render.canvasTriangle(ctx, matrixEvent, slot, skinHash, texHash);\n          }\n        }\n        // 静态帧优化将离屏内容绘入\n        if(self.staticCacheFlag) {\n          offScreen.draw(ctx);\n          sourceCtx.drawImage(offScreen.canvas, 0, 0);\n          self.staticCacheHash[staticKey] = ctx.getImageData(0, 0, width, height);\n          ctx.clearRect(0, 0, width, height);\n        }\n      }\n    };\n    return a;\n  }\n\n  changeImage(src) {\n    if(src) {\n      let tex = this.tex;\n      tex.imagePath = src;\n      let texHash = this.texHash;\n      karas.inject.measureImg(src, function() {\n        tex.SubTexture.forEach(item => {\n          let { name } = item;\n          texHash[name].source = karas.inject.IMG[src].source;\n        });\n      });\n    }\n  }\n\n  setStaticCache(flag) {\n    this.staticCacheFlag = !!flag;\n  }\n\n  cleanStaticCache() {\n    this.staticCacheHash = {};\n  }\n\n  render() {\n    return <div>\n      <$line ref=\"fake\" style={{\n        display: 'none',\n      }}/>\n    </div>;\n  }\n}\n\nDragonbones.version = version;\n\nexport default Dragonbones;\n"],"names":["inject","karas","math","parseAndLoadTex","tex","cb","props","src","imagePath","texHash","measureImg","SubTexture","forEach","item","name","x","y","width","height","frameX","frameY","frameWidth","frameHeight","source","IMG","parseSke","ske","globalFrameRate","frameRate","armature","currentArmature","i","len","length","Error","console","warn","bone","slot","skin","animation","defaultActions","canvas","boneHash","parseBone","slotHash","parseSlot","skinHash","parseSkin","animationHash","parseAnimation","data","hash","root","children","parent","transform","push","index","matrix","m","multiply","skX","d","geom","d2r","sin","Math","cos","scX","undefined","scY","slotName","display","type","path","vertices","triangles","uvs","weights","bonePose","weightHash","bonePoseHash","verticesIndex","num","list","j","value","slice","coords","calPoint","pose","verticesList","res","weightList","weight","x0","y0","x1","y1","dx","dy","theta","atan","abs","PI","rotate","translate","triangleList","i1","i2","i3","p1x","p1y","p2x","p2y","p3x","p3y","x2","y2","x3","y3","triangleIncentre","px","parseFloat","enlarge","isNaN","enlargeSlot","hasOwnProperty","n","scale","triangleScale","identity","t","transformPoint","sx1","sy1","sx2","sy2","sx3","sy3","round","indexList","scaleCoords","a","b","c","sqrt","pow","duration","playTimes","ffd","options","iterations","Infinity","fill","boneAnimationList","map","translateFrame","rotateFrame","scaleFrame","originTransform","offsetSum","last","frame","easingFn","getEasing","offset","translateX","translateY","rotateZ","dz","scaleX","scaleY","slotAnimationList","displayFrame","colorFrame","aM","da","ffdAnimationHash","ffdAnimationList","os","unshift","verticesLast","dv","max","curve","animate","easing","cubicBezier","animateBoneMatrix","animationList","frames","binarySearch","current","next","total","percent","matrixA","middle","min","mergeBoneMatrix","currentMatrix","mergeChildBoneMatrix","parentMatrix","animateSlot","displayIndexA","colorA","calSlot","displayIndex","displayTarget","boneMatrix","parentBoneMatrix","offsetMatrix","matrixF","target","concat","tar","exchangeOrder","source1","target1","clearAnimation","canvasBone","ctx","matrixEvent","setTransform","beginPath","strokeStyle","lineWidth","arc","moveTo","lineTo","closePath","stroke","canvasSlot","blendMode","color","globalCompositeOperation","opacity","globalAlpha","save","clip","drawImage","restore","canvasTriangle","fillStyle","uuid","SHARE_CACHE","Dragonbones","init","nextProps","util","equal","action","changeImage","playbackRate","fps","isString","loadJson","build","count","staticCacheFlag","staticCache","staticCacheHash","version","clone","parser","op","extend","armatureName","defaultAction","key","pause","gotoAndPlay","gotoAndStop","actionName","isNil","fake","ref","clearAnimate","self","render","renderMode","defs","offScreen","sourceCtx","staticKey","getCacheCanvas","floor","currentTime","cache","putImageData","draw","clearRect","dynamicKey","dynamicCache","share","mode","CANVAS","shadowRoot","computedStyle","left","marginLeft","borderLeftWidth","top","marginTop","borderTopWidth","fitSize","sx","sy","debug","debugBone","debugSlot","getImageData","flag","Component"],"mappings":"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"}