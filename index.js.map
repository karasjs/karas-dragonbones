{"version":3,"file":"index.js","sources":["src/parser.js","src/util.js","src/render.js","src/index.js"],"sourcesContent":["import karas from 'karas';\n\nconst { inject, math } = karas;\n\nfunction parseAndLoadTex(tex, cb, props = {}) {\n  let src = props.imagePath || tex.imagePath;\n  let texHash = {};\n  inject.measureImg(src, function() {\n    tex.SubTexture.forEach(item => {\n      let { name, x, y, width, height, frameX = 0, frameY = 0, frameWidth = width, frameHeight = height } = item;\n      texHash[name] = {\n        name,\n        x,\n        y,\n        width,\n        height,\n        frameX,\n        frameY,\n        frameWidth,\n        frameHeight,\n        source: inject.IMG[src].source,\n      };\n    });\n    cb(texHash);\n  });\n}\n\nfunction parseSke(ske, texHash, props = {}) {\n  let {\n    frameRate: globalFrameRate,\n    armature,\n  } = ske;\n  let currentArmature = armature[0];\n  if(props.armature) {\n    for(let i = 0, len = armature.length; i < len; i++) {\n      let item = armature[i];\n      if(item.name === props.armature) {\n        currentArmature = item;\n        break;\n      }\n    }\n    if(!currentArmature) {\n      throw new Error('Can not find armature: ' + props.armature);\n    }\n  }\n  if(!currentArmature) {\n    console.warn('No armature data');\n    return;\n  }\n  let {\n    name,\n    bone,\n    slot,\n    skin,\n    frameRate,\n    animation,\n    defaultActions,\n    canvas,\n  } = currentArmature;\n  let boneHash = parseBone(bone);\n  let slotHash = parseSlot(slot);\n  let skinHash = parseSkin(skin, texHash, props);\n  let animationHash = parseAnimation(animation, frameRate || globalFrameRate || 60, boneHash);\n  return {\n    name,\n    bone,\n    boneHash,\n    slot,\n    slotHash,\n    skin: skin[0].slot,\n    skinHash,\n    animationHash,\n    defaultActions,\n    canvas,\n  };\n}\n\nfunction parseSlot(data) {\n  let hash = {};\n  data.forEach(item => {\n    hash[item.name] = item;\n  });\n  return hash;\n}\n\nfunction parseBone(data) {\n  let hash = {};\n  // bone数据形成tree结构，符合dom格式，第一个一定是root\n  let root = data[0];\n  root.children = [];\n  hash[root.name] = root;\n  data.forEach((item, i) => {\n    let { name, parent, transform = {} } = item;\n    if(parent) {\n      hash[parent].children.push(item);\n    }\n    hash[name] = item;\n    item.children = [];\n    item.index = i;\n    // 静态变换样式，可能某个骨骼没动画\n    let matrix = math.matrix.identity();\n    if(transform.x || transform.y) {\n      let m = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, transform.x || 0, transform.y || 0, 0, 1];\n      matrix = math.matrix.multiply(matrix, m);\n    }\n    if(transform.skX) {\n      let d = math.geom.d2r(transform.skX);\n      let sin = Math.sin(d);\n      let cos = Math.cos(d);\n      let m = [cos, sin, 0, 0, -sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n      matrix = math.matrix.multiply(matrix, m);\n    }\n    if(transform.scX !== undefined || transform.scY !== undefined) {\n      let m = [transform.scX === undefined ? 1 : transform.scX, 0, 0, 0, 0, transform.scY === undefined ? 1 : transform.scY, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n      matrix = karas.math.matrix.multiply(matrix, m);\n    }\n    item.matrix = matrix;\n  });\n  return hash;\n}\n\nfunction parseSkin(data, texHash, props) {\n  let hash = {};\n  data[0].slot.forEach(item => {\n    let { name: slotName, display } = item;\n    hash[slotName] = item;\n    display.forEach(item => {\n      let { type, name, path } = item;\n      // mesh网格分析三角形\n      if(type === 'mesh') {\n        let { vertices, triangles, uvs, weights, bonePose } = item;\n        let weightHash;\n        let bonePoseHash;\n        // 有权重则绑定骨骼，坐标系为世界；\n        // 没有权重时，完全属于父骨骼，类似普通贴图行为\n        if(weights) {\n          // 权重格式化hash\n          weightHash = {};\n          for(let i = 0, len = weights.length, verticesIndex = 0; i < len; i++) {\n            let num = weights[i];\n            let list = [];\n            for(let j = i + 1; j < i + 1 + num * 2; j += 2) {\n              let index = weights[j];\n              let value = weights[j + 1];\n              list.push({\n                index,\n                value,\n              });\n            }\n            weightHash[verticesIndex++] = list;\n            i += num * 2;\n          }\n          // 骨骼初始pose格式化和世界坐标\n          bonePoseHash = {};\n          for(let i = 0, len = bonePose.length; i < len; i += 7) {\n            let index = bonePose[i];\n            let m = bonePose.slice(i + 1, i + 7);\n            let matrix = [m[0], m[1], 0, 0, m[2], m[3], 0, 0, 0, 0, 1, 0, m[4], m[5], 0, 1];\n            let coords = math.matrix.calPoint([0, 0], matrix);\n            bonePoseHash[index] = {\n              coords,\n              pose: matrix,\n            };\n          }\n        }\n        // 顶点格式化，相对于骨骼点的x/y位移差值\n        let verticesList = item.verticesList = [];\n        for(let i = 0, len = vertices.length; i < len; i += 2) {\n          let index = i >> 1;\n          let x = vertices[i];\n          let y = vertices[i + 1];\n          let res = {\n            index,\n            x,\n            y,\n          };\n          verticesList.push(res);\n          // 有添加绑定骨骼才有权重\n          if(weightHash) {\n            res.weightList = [];\n            let weight = weightHash[index];\n            weight.forEach(item => {\n              let { index, value } = item;\n              let { coords, pose } = bonePoseHash[index];\n              // 先求骨头的角度，逆向选择至水平后，平移x/y的差值\n              let [x0, y0] = math.matrix.calPoint([0, 0], pose);\n              let [x1, y1] = math.matrix.calPoint([1, 0], pose);\n              let dx = x1 - x0;\n              let dy = y1 - y0;\n              let theta;\n              // 4个象限分开判断\n              if(dx >= 0 && dy >= 0) {\n                theta = -Math.atan(Math.abs(dy / dx));\n              }\n              else if(dx < 0 && dy >= 0) {\n                theta = -Math.PI + Math.atan(Math.abs(dy / dx));\n              }\n              else if(dx < 0 && dy < 0) {\n                theta = Math.PI - Math.atan(Math.abs(dy / dx));\n              }\n              else {\n                theta = Math.atan(Math.abs(dy / dx));\n              }\n              let rotate = [Math.cos(theta), Math.sin(theta), 0, 0, -Math.sin(theta), Math.cos(theta), 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n              let translate = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, x - coords[0], y - coords[1], 0, 1];\n              let matrix = math.matrix.multiply(rotate, translate);\n              res.weightList.push({\n                index,\n                value,\n                matrix,\n              });\n            });\n          }\n        }\n        // 三角形，切割图片坐标\n        let tex = texHash[path || name];\n        let { width, height } = tex;\n        let triangleList = item.triangleList = [];\n        for(let i = 0, len = triangles.length; i < len; i += 3) {\n          let i1 = triangles[i];\n          let i2 = triangles[i + 1];\n          let i3 = triangles[i + 2];\n          // uv坐标\n          let p1x = uvs[i1 * 2];\n          let p1y = uvs[i1 * 2 + 1];\n          let p2x = uvs[i2 * 2];\n          let p2y = uvs[i2 * 2 + 1];\n          let p3x = uvs[i3 * 2];\n          let p3y = uvs[i3 * 2 + 1];\n          // uv贴图坐标根据尺寸映射真实坐标\n          let x1 = p1x * width;\n          let y1 = p1y * height;\n          let x2 = p2x * width;\n          let y2 = p2y * height;\n          let x3 = p3x * width;\n          let y3 = p3y * height;\n          // 从内心往外扩展约0.25px，可参数指定\n          let [x0, y0] = math.geom.triangleIncentre(x1, y1, x2, y2, x3, y3);\n          let px = parseFloat(props.enlarge);\n          if(isNaN(px)) {\n            px = 0.25;\n          }\n          // 单独为slot配置的扩展参数\n          if(props.enlargeSlot && props.enlargeSlot.hasOwnProperty(slotName)) {\n            let n = parseFloat(props.enlargeSlot[slotName]);\n            if(isNaN(n)) {\n              n = 0.25;\n            }\n            px = n;\n          }\n          let scale = px ? triangleScale(x0, y0, x1, y1, x2, y2, x3, y3, px) : 1;\n          // 以内心为transformOrigin\n          let m = math.matrix.identity();\n          m[12] = -x0;\n          m[13] = -y0;\n          // 缩放\n          let t = math.matrix.identity();\n          t[0] = t[5] = scale;\n          m = math.matrix.multiply(t, m);\n          // 移动回去\n          t[12] = x0;\n          t[13] = y0;\n          m = math.matrix.multiply(t, m);\n          // 获取扩展后的三角形顶点坐标\n          let [sx1, sy1] = math.matrix.calPoint([x1, y1], m);\n          let [sx2, sy2] = math.matrix.calPoint([x2, y2], m);\n          let [sx3, sy3] = math.matrix.calPoint([x3, y3], m);\n          // 三角形所在矩形距离左上角原点的坐标，以此做img切割最小尺寸化，以及变换原点计算\n          // let [ox, oy, ow, oh] = triangleOriginCoords(sx1, sy1, sx2, sy2, sx3, sy3);\n          triangleList.push({\n            index: Math.round(i / 3),\n            indexList: [i1, i2, i3],\n            // ox,\n            // oy,\n            // ow,\n            // oh,\n            // points: [\n            //   [p1x, p1y],\n            //   [p2x, p2y],\n            //   [p3x, p3y]\n            // ],\n            coords: [\n              [x1, y1],\n              [x2, y2],\n              [x3, y3]\n            ],\n            scale,\n            scaleCoords: [\n              [sx1, sy1],\n              [sx2, sy2],\n              [sx3, sy3]\n            ],\n            width,\n            height,\n          });\n        }\n      }\n    });\n  });\n  return hash;\n}\n\n/**\n * 将三角形从内心缩放指定像素\n * @param x0\n * @param y0\n * @param x1\n * @param y1\n * @param x2\n * @param y2\n * @param x3\n * @param y3\n * @param px 缩放多少像素，可正负\n * @returns {number} 缩放倍数\n */\nfunction triangleScale(x0, y0, x1, y1, x2, y2, x3, y3, px = 0) {\n  // 内心到任意一边的距离\n  let a = y2 - y1;\n  let b = x1 - x2;\n  let c = x2 * y1 - x1 * y2;\n  let d = Math.abs(a * x0 + b * y0 + c) / Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n  return (d + px) / d;\n}\n\n/**\n * 获取三角形所在最小矩形的原点坐标、尺寸\n * @param x1\n * @param y1\n * @param x2\n * @param y2\n * @param x3\n * @param y3\n */\nfunction triangleOriginCoords(x1, y1, x2, y2, x3, y3) {\n  let xMin = x1;\n  let yMin = y1;\n  let xMax = x1;\n  let yMax = y1;\n  xMin = Math.min(xMin, x2);\n  xMin = Math.min(xMin, x3);\n  yMin = Math.min(yMin, y2);\n  yMin = Math.min(yMin, y3);\n  xMax = Math.max(xMax, x2);\n  xMax = Math.max(xMax, x3);\n  yMax = Math.max(yMax, y2);\n  yMax = Math.max(yMax, y3);\n  return [xMin, yMin, xMax - xMin, yMax - yMin];\n}\n\nfunction parseAnimation(data, frameRate, boneHash) {\n  let hash = {};\n  data.forEach(item => {\n    let { duration, playTimes, name, bone = [], slot = [], ffd = [] } = item;\n    hash[name] = item;\n    item.options = {\n      duration: 1000 * duration / frameRate,\n      iterations: playTimes === 0 ? Infinity : playTimes,\n      fill: 'forwards',\n    };\n    // 骨骼动画列表\n    item.boneAnimationList = bone.map(item => {\n      let { name, translateFrame, rotateFrame, scaleFrame } = item;\n      let { transform: originTransform = {} } = boneHash[name];\n      let res = {\n        name,\n        list: [],\n      };\n      if(translateFrame) {\n        let offsetSum = 0;\n        let last;\n        let value = translateFrame.map(frame => {\n          let { duration: d = 1 } = frame;\n          let easingFn = getEasing(frame);\n          let offset = offsetSum / duration;\n          offsetSum += d;\n          let { x = 0, y = 0 } = originTransform;\n          let res = {\n            type: 0,\n            translateX: (frame.x || 0) + x,\n            translateY: (frame.y || 0) + y,\n            offset,\n            easingFn,\n          };\n          if(last) {\n            last.dx = res.translateX - last.translateX;\n            last.dy = res.translateY - last.translateY;\n          }\n          last = res;\n          return res;\n        });\n        res.list.push(value);\n      }\n      if(rotateFrame) {\n        let offsetSum = 0;\n        let last;\n        let value = rotateFrame.map(frame => {\n          let { duration: d = 1 } = frame;\n          let easingFn = getEasing(frame);\n          let offset = offsetSum / duration;\n          offsetSum += d;\n          let { skX = 0 } = originTransform;\n          let res = {\n            type: 1,\n            rotateZ: (frame.rotate || 0) + skX,\n            offset,\n            easingFn,\n          };\n          if(last) {\n            last.dz = res.rotateZ - last.rotateZ;\n          }\n          last = res;\n          return res;\n        });\n        res.list.push(value);\n      }\n      if(scaleFrame) {\n        let offsetSum = 0;\n        let last;\n        let value = scaleFrame.map(frame => {\n          let { duration: d = 1 } = frame;\n          let easingFn = getEasing(frame);\n          let offset = offsetSum / duration;\n          offsetSum += d;\n          let { scX = 1, scY = 1 } = originTransform;\n          let res = {\n            type: 2,\n            scaleX: (frame.x === undefined ? 1 : frame.x) * scX,\n            scaleY: (frame.y === undefined ? 1 : frame.y) * scY,\n            offset,\n            easingFn,\n          };\n          if(last) {\n            last.dx = res.scaleX - last.scaleX;\n            last.dy = res.scaleY - last.scaleY;\n          }\n          last = res;\n          return res;\n        });\n        res.list.push(value);\n      }\n      return res;\n    });\n    // 插槽动画列表\n    item.slotAnimationList = slot.map(item => {\n      let { displayFrame, colorFrame } = item;\n      if(displayFrame) {\n        let offsetSum = 0;\n        displayFrame.forEach(frame => {\n          let { duration: d = 1 } = frame;\n          let offset = offsetSum / duration;\n          offsetSum += d;\n          frame.offset = offset;\n        });\n      }\n      if(colorFrame) {\n        let offsetSum = 0;\n        let last;\n        colorFrame.forEach(frame => {\n          let { duration: d = 1 } = frame;\n          frame.easingFn = getEasing(frame);\n          let offset = offsetSum / duration;\n          offsetSum += d;\n          frame.offset = offset;\n          // 没有value就用默认值\n          if(!frame.value) {\n            frame.value = {\n              aM: 100,\n            };\n          }\n          if(frame.value.aM === undefined) {\n            frame.value.aM = 100;\n          }\n          if(last) {\n            last.da = frame.value.aM - last.value.aM;\n          }\n          last = frame;\n        });\n      }\n      return item;\n    });\n    // 自由变形列表\n    let ffdAnimationHash = item.ffdAnimationHash = {};\n    item.ffdAnimationList = ffd.map(item => {\n      let { name, slot, frame } = item;\n      // db限制了不能出现在名字里\n      ffdAnimationHash[slot + '>' + name] = item;\n      if(frame) {\n        let offsetSum = 0;\n        let last;\n        frame.forEach(frame => {\n          let { vertices, duration: d = 1, offset: os } = frame;\n          frame.easingFn = getEasing(frame);\n          if(vertices) {\n            for(let i = 0; i < os; i++) {\n              vertices.unshift(0);\n            }\n          }\n          let offset = offsetSum / duration;\n          offsetSum += d;\n          frame.offset = offset;\n          // 顶点变形数据vertices都是偏移量，无偏移为空\n          if(last) {\n            let verticesLast = last.vertices;\n            if(verticesLast && vertices) {\n              last.dv = [];\n              for(let i = 0, len = Math.max(verticesLast.length, vertices.length); i < len; i++) {\n                last.dv.push((vertices[i] || 0) - (verticesLast[i] || 0));\n              }\n            }\n            else if(verticesLast) {\n              last.dv = last.vertices.map(n => -n);\n            }\n            else if(vertices) {\n              last.dv = vertices;\n            }\n          }\n          last = frame;\n        });\n      }\n      return item;\n    });\n  });\n  return hash;\n}\n\nfunction getEasing(frame) {\n  let curve = frame.curve;\n  if(curve && curve[0] !== 1 && curve[1] !== 1 && curve[2] !== 0 && curve[3] !== 0) {\n    return karas.animate.easing.cubicBezier(curve[0], curve[1], curve[2], curve[3]);\n  }\n}\n\nexport default {\n  parseAndLoadTex,\n  parseSke,\n};\n","import karas from 'karas';\n\nconst { math } = karas;\n\n/**\n * 根据动画时间状态修改骨骼当前matrix\n * @param animationList 动画列表\n * @param offset 当前时间偏移量\n * @param boneHash 骨骼hash\n */\nfunction animateBoneMatrix(animationList, offset, boneHash) {\n  animationList.forEach(item => {\n    let { name, list } = item;\n    let bone = boneHash[name];\n    // 先以静态变换样式为基础\n    let { transform = {} } = bone;\n    let res = {};\n    res.translateX = transform.x || 0;\n    res.translateY = transform.y || 0;\n    res.rotateZ = transform.skX || 0;\n    res.scaleX = transform.scX === undefined ? 1 : transform.scX;\n    res.scaleY = transform.scY === undefined ? 1 : transform.scY;\n    // 再assign动画中的变换样式\n    list.forEach(frames => {\n      let len = frames.length;\n      if(!len) {\n        return;\n      }\n      let type = frames[0].type;\n      let i = binarySearch(0, len - 1, offset, frames);\n      let current = frames[i];\n      let easingFn = current.easingFn;\n      // 是否最后一帧\n      if(i === len - 1) {\n        if(type === 0) {\n          res.translateX = current.translateX;\n          res.translateY = current.translateY;\n        }\n        else if(type === 1) {\n          res.rotateZ = current.rotateZ;\n        }\n        else if(type === 2) {\n          res.scaleX = current.scaleX;\n          res.scaleY = current.scaleY;\n        }\n      }\n      else {\n        let next = frames[i + 1];\n        let total = next.offset - current.offset;\n        let percent = (offset - current.offset) / total;\n        if(easingFn) {\n          percent = easingFn(percent);\n        }\n        if(type === 0) {\n          res.translateX = current.translateX + current.dx * percent;\n          res.translateY = current.translateY + current.dy * percent;\n        }\n        else if(type === 1) {\n          res.rotateZ = current.rotateZ + current.dz * percent;\n        }\n        else if(type === 2) {\n          res.scaleX = current.scaleX + current.dx * percent;\n          res.scaleY = current.scaleY + current.dy * percent;\n        }\n      }\n    });\n    let matrix = math.matrix.identity();\n    if(res.translateX || res.translateY) {\n      let m = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, res.translateX || 0, res.translateY || 0, 0, 1];\n      matrix = math.matrix.multiply(matrix, m);\n    }\n    if(res.rotateZ) {\n      let d = math.geom.d2r(res.rotateZ);\n      let sin = Math.sin(d);\n      let cos = Math.cos(d);\n      let m = [cos, sin, 0, 0, -sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n      matrix = math.matrix.multiply(matrix, m);\n    }\n    if(res.scaleX !== undefined || res.scaleY !== undefined) {\n      let m = [res.scaleX === undefined ? 1 : res.scaleX, 0, 0, 0, 0, res.scaleY === undefined ? 1 : res.scaleY, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n      matrix = math.matrix.multiply(matrix, m);\n    }\n    bone.matrixA = matrix;\n  });\n}\n\n/**\n * 二分查找根据时间轴帧序列和当前百分比获得当前帧\n * @param i\n * @param j\n * @param offset\n * @param frames\n * @returns {frame}\n */\nfunction binarySearch(i, j, offset, frames) {\n  if(i === j) {\n    let frame = frames[i];\n    if(frame.offset > offset) {\n      return i - 1;\n    }\n    return i;\n  }\n  else {\n    let middle = i + ((j - i) >> 1);\n    let frame = frames[middle];\n    if(frame.offset === offset) {\n      return middle;\n    }\n    else if(frame.offset > offset) {\n      return binarySearch(i, Math.max(middle - 1, i), offset, frames);\n    }\n    else {\n      return binarySearch(Math.min(middle + 1, j), j, offset, frames);\n    }\n  }\n}\n\n/**\n * 递归遍历骨骼，根据父子属性合并生成骨骼相对于舞台的最终currentMatrix\n * @param root 根骨骼\n */\nfunction mergeBoneMatrix(root) {\n  root.currentMatrix = root.matrixA || root.matrix;\n  root.children.forEach(item => {\n    mergeChildBoneMatrix(item, root.currentMatrix);\n  });\n}\n\nfunction mergeChildBoneMatrix(bone, parentMatrix) {\n  bone.currentMatrix = math.matrix.multiply(parentMatrix, bone.matrixA || bone.matrix);\n  bone.children.forEach(item => {\n    mergeChildBoneMatrix(item, bone.currentMatrix);\n  });\n}\n\n/**\n * 根据当前动画时间执行slot的动画，确定显示slot下的皮肤索引和透明度\n * @param slotAnimationList\n * @param offset\n * @param slotHash\n */\nfunction animateSlot(slotAnimationList, offset, slotHash) {\n  slotAnimationList.forEach(item => {\n    let { name, displayFrame, colorFrame } = item;\n    let slot = slotHash[name];\n    if(displayFrame) {\n      if(displayFrame.length) {\n        let i = binarySearch(0, displayFrame.length - 1, offset, displayFrame);\n        let { value = 0 } = displayFrame[i];\n        slot.displayIndexA = value;\n      }\n    }\n    if(colorFrame) {\n      let len = colorFrame.length;\n      if(len) {\n        let i = binarySearch(0, len - 1, offset, colorFrame);\n        let current = colorFrame[i];\n        let easingFn = current.easing;\n        // 是否最后一帧\n        if(i === len - 1) {\n          slot.colorA = current.value;\n        }\n        else {\n          let next = colorFrame[i + 1];\n          let total = next.offset - current.offset;\n          let percent = (offset - current.offset) / total;\n          if(easingFn) {\n            percent = easingFn(percent);\n          }\n          slot.colorA = {\n            aM: current.value.aM + current.da * percent,\n          };\n        }\n      }\n    }\n  });\n}\n\n/**\n * 根据当前骨骼状态计算slot中显示对象变换matrix\n * @param offset\n * @param slot\n * @param skinHash\n * @param bone\n * @param boneHash\n * @param texHash\n * @param ffdAnimationHash\n */\nfunction calSlot(offset, slot, skinHash, bone, boneHash, texHash, ffdAnimationHash) {\n  slot.forEach(item => {\n    let { name, parent, displayIndex = 0, displayIndexA = displayIndex } = item;\n    // 插槽隐藏不显示\n    if(displayIndexA < 0) {\n      return;\n    }\n    let skin = skinHash[name];\n    let displayTarget = skin.display[displayIndexA];\n    // 网格类型\n    if(displayTarget.type === 'mesh') {\n      let { verticesList, triangleList } = displayTarget;\n      // 先进行顶点变换\n      verticesList.forEach(item => {\n        let { weightList } = item;\n        // 有绑定骨骼的mesh，计算权重\n        if(weightList) {\n          let m = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n          weightList.forEach(weight => {\n            let { index, value, matrix } = weight;\n            let boneMatrix = bone[index].currentMatrix;\n            let offset = karas.math.matrix.multiply(boneMatrix, matrix);\n            for(let i = 0; i < 16; i++) {\n              m[i] += offset[i] * value;\n            }\n          });\n          item.matrix = m;\n        }\n        // 没有绑定认为直属父骨骼\n        else {\n          let parentBoneMatrix = boneHash[parent].currentMatrix;\n          let offsetMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, item.x, item.y, 0, 1];\n          let m = karas.math.matrix.multiply(parentBoneMatrix, offsetMatrix);\n          item.matrix = m;\n        }\n        // 每次先清空ffd自由变换的数据\n        item.matrixF = null;\n      });\n      // 如果有ffd自定义顶点变换，计算偏移量matrix\n      let ffd = ffdAnimationHash[name + '>' + (displayTarget.path || displayTarget.name)];\n      if(ffd) {\n        let { frame } = ffd;\n        if(frame) {\n          let len = frame.length;\n          let i = binarySearch(0, len - 1, offset, frame);\n          let current = frame[i];\n          let easingFn = current.easingFn;\n          // 是否最后一帧\n          if(i === len - 1) {\n            let { vertices } = current;\n            if(vertices) {\n              for(let i = 0, len = vertices.length; i < len - 1; i += 2) {\n                let x = vertices[i];\n                let y = vertices[i + 1];\n                if(x === 0 && y === 0) {\n                  continue;\n                }\n                let index = i >> 1;\n                let target = verticesList[index];\n                let m = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, x, y, 0, 1];\n                target.matrixF = math.matrix.multiply(target.matrix, m);\n              }\n            }\n          }\n          else {\n            let next = frame[i + 1];\n            let total = next.offset - current.offset;\n            let percent = (offset - current.offset) / total;\n            if(easingFn) {\n              percent = easingFn(percent);\n            }\n            let { vertices, dv } = current;\n            if(vertices || dv) {\n              let len = 0;\n              if(vertices) {\n                len = vertices.length;\n              }\n              if(dv) {\n                len = Math.max(len, dv.length);\n              }\n              for(let i = 0; i < len - 1; i += 2) {\n                let x, y;\n                if(vertices) {\n                  x = vertices[i] || 0;\n                  y = vertices[i + 1] || 0;\n                }\n                else {\n                  x = y = 0;\n                }\n                if(dv) {\n                  x += (dv[i] || 0) * percent;\n                  y += (dv[i + 1] || 0) * percent;\n                }\n                if(x === 0 && y === 0) {\n                  continue;\n                }\n                let index = i >> 1;\n                let target = verticesList[index];\n                let m = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, x, y, 0, 1];\n                target.matrixF = math.matrix.multiply(target.matrix, m);\n              }\n            }\n          }\n        }\n      }\n      // 三角形根据顶点坐标变化计算仿射变换matrix\n      triangleList.forEach(item => {\n        let { indexList, coords } = item;\n        let source = coords[0].concat(coords[1]).concat(coords[2]);\n        let target = [];\n        indexList.forEach(i => {\n          let vertices = verticesList[i];\n          let coords = math.matrix.calPoint([0, 0], vertices.matrixF || vertices.matrix);\n          target = target.concat(coords.slice(0, 2));\n        });\n        // 先交换确保3个点顺序\n        let [source1, target1] = math.tar.exchangeOrder(source, target);\n        let matrix = math.tar.transform(source1, target1);\n        item.matrix = matrix;\n      });\n    }\n    // 默认图片类型\n    else {\n      let { transform = {} } = displayTarget;\n      let tex = texHash[displayTarget.path || displayTarget.name];\n      let parentBoneMatrix = boneHash[parent].currentMatrix;\n      let matrix = math.matrix.identity();\n      // 图片本身形变，因中心点在图片本身中心，所以无论是否有translate都要平移\n      let t = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, (transform.x || 0) - tex.frameWidth * 0.5, (transform.y || 0) - tex.frameHeight * 0.5, 0, 1];\n      matrix = math.matrix.multiply(matrix, t);\n      // 可选旋转\n      if(transform.skX) {\n        let d = math.geom.d2r(transform.skX);\n        let sin = Math.sin(d);\n        let cos = Math.cos(d);\n        let t = [cos, sin, 0, 0, -sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n        matrix = math.matrix.multiply(matrix, t);\n      }\n      // 可选缩放\n      if(transform.scX !== undefined || transform.scY !== undefined) {\n        let t = [transform.scX === undefined ? 1 : transform.scX, 0, 0, 0, 0, transform.scY === undefined ? 1 : transform.scY, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n        matrix = math.matrix.multiply(matrix, t);\n      }\n      // tfo为图片中心，可合并\n      t = math.matrix.identity();\n      t[12] = tex.frameWidth * 0.5;\n      t[13] = tex.frameHeight * 0.5;\n      matrix = math.matrix.multiply(t, matrix);\n      t = math.matrix.identity();\n      t[12] = -tex.frameWidth * 0.5;\n      t[13] = -tex.frameHeight * 0.5;\n      matrix = math.matrix.multiply(matrix, t);\n      matrix = math.matrix.multiply(parentBoneMatrix, matrix);\n      displayTarget.matrix = matrix;\n    }\n  });\n}\n\nfunction clearAnimation(bone, slot) {\n  bone.forEach(item => {\n    delete item.matrixA;\n  });\n  slot.forEach(item => {\n    delete item.displayIndexA;\n    delete item.colorA;\n  });\n}\n\nexport default {\n  animateBoneMatrix,\n  mergeBoneMatrix,\n  animateSlot,\n  calSlot,\n  clearAnimation,\n};\n","import karas from 'karas';\n\nconst { math } = karas;\n\nfunction canvasBone(ctx, matrixEvent, bone, dx, dy) {\n  let { length, children, currentMatrix } = bone;\n  let m = math.matrix.multiply(matrixEvent, currentMatrix);\n  ctx.setTransform(m[0], m[1], m[4], m[5], m[12], m[13]);\n  ctx.beginPath();\n  ctx.strokeStyle = '#000';\n  ctx.lineWidth = 1;\n  ctx.arc(dx, dy, 5, 0, Math.PI * 2);\n  ctx.moveTo(dx, dy);\n  ctx.lineTo((length || 5) + dx, dy);\n  ctx.closePath();\n  ctx.stroke();\n  children.forEach(item => {\n    canvasBone(ctx, matrixEvent, item, dx, dy);\n  });\n}\n\nfunction canvasSlot(ctx, matrixEvent, slot, skinHash, texHash, dx, dy) {\n  slot.forEach(item => {\n    let { name, displayIndex = 0, displayIndexA = displayIndex, blendMode, color = {}, colorA = color } = item;\n    // 插槽隐藏不显示\n    if(displayIndexA < 0) {\n      return;\n    }\n    // 叠加模式\n    if(blendMode === 'add') {\n      ctx.globalCompositeOperation = 'lighter';\n    }\n    else {\n      ctx.globalCompositeOperation = 'source-over';\n    }\n    let { aM = 100 } = colorA;\n    let opacity = ctx.globalAlpha;\n    // 透明度\n    ctx.globalAlpha *= aM / 100;\n    let skin = skinHash[name];\n    let displayTarget = skin.display[displayIndexA];\n    let tex = texHash[displayTarget.path || displayTarget.name];\n    // 网格类型\n    if(displayTarget.type === 'mesh') {\n      let { triangleList } = displayTarget;\n      triangleList.forEach(item => {\n        let { matrix, scaleCoords } = item;\n        matrix = math.matrix.multiply(matrixEvent, matrix);\n        // clip绘制\n        ctx.save();\n        ctx.setTransform(matrix[0], matrix[1], matrix[4], matrix[5], matrix[12], matrix[13]);\n        ctx.beginPath();\n        ctx.moveTo(scaleCoords[0][0] + dx, scaleCoords[0][1] + dy);\n        ctx.lineTo(scaleCoords[1][0] + dx, scaleCoords[1][1] + dy);\n        ctx.lineTo(scaleCoords[2][0] + dx, scaleCoords[2][1] + dy);\n        ctx.closePath();\n        ctx.clip();\n        ctx.drawImage(tex.source, -tex.x - tex.frameX + dx, -tex.y - tex.frameY + dy);\n        ctx.restore();\n      });\n    }\n    // 默认图片类型\n    else {\n      let { matrix } = displayTarget;\n      if(matrix[0] === 0 || matrix[5] === 0) {\n        return;\n      }\n      matrix = math.matrix.multiply(matrixEvent, matrix);\n      // clip绘制\n      ctx.save();\n      ctx.setTransform(matrix[0], matrix[1], matrix[4], matrix[5], matrix[12], matrix[13]);\n      ctx.beginPath();\n      ctx.moveTo(-tex.frameX + dx, -tex.frameY + dy);\n      ctx.lineTo(-tex.frameX + tex.width + dx, -tex.frameY + dy);\n      ctx.lineTo(-tex.frameX + tex.width + dx,  -tex.frameY + tex.height + dy);\n      ctx.lineTo(-tex.frameX + dx,  -tex.frameY + tex.height + dy);\n      ctx.closePath();\n      ctx.clip();\n      ctx.drawImage(tex.source, -tex.x - tex.frameX + dx, -tex.y - tex.frameY + dy);\n      ctx.restore();\n    }\n    // 恢复模式\n    if(blendMode) {\n      ctx.globalCompositeOperation = 'source-over';\n    }\n    ctx.globalAlpha = opacity;\n  });\n}\n\nfunction canvasTriangle(ctx, matrixEvent, slot, skinHash, texHash, dx, dy) {\n  slot.forEach(item => {\n    let { name, displayIndex = 0, displayIndexA = displayIndex } = item;\n    // 插槽隐藏不显示\n    if(displayIndexA < 0) {\n      return;\n    }\n    let skin = skinHash[name];\n    let displayTarget = skin.display[displayIndexA];\n    let tex = texHash[displayTarget.path || displayTarget.name];\n    // 网格类型\n    if(displayTarget.type === 'mesh') {\n      let { verticesList, triangleList } = displayTarget;\n      triangleList.forEach(item => {\n        let { matrix, scaleCoords } = item;\n        matrix = math.matrix.multiply(matrixEvent, matrix);\n        ctx.setTransform(matrix[0], matrix[1], matrix[4], matrix[5], matrix[12], matrix[13]);\n        ctx.strokeStyle = '#39F';\n        ctx.lineWidth = 1;\n        ctx.beginPath();\n        ctx.moveTo(scaleCoords[0][0] + dx, scaleCoords[0][1] + dy);\n        ctx.lineTo(scaleCoords[1][0] + dx, scaleCoords[1][1] + dy);\n        ctx.lineTo(scaleCoords[2][0] + dx, scaleCoords[2][1] + dy);\n        ctx.closePath();\n        ctx.stroke();\n      });\n      verticesList.forEach(item => {\n        let { matrix, matrixF } = item;\n        matrix = math.matrix.multiply(matrixEvent, matrixF || matrix);\n        ctx.setTransform(matrix[0], matrix[1], matrix[4], matrix[5], matrix[12], matrix[13]);\n        ctx.fillStyle = '#0D6';\n        ctx.beginPath();\n        ctx.arc(dx, dy, 4, 0, Math.PI * 2);\n        ctx.closePath();\n        ctx.fill();\n      });\n    }\n    // 默认图片类型\n    else {\n      let { matrix } = displayTarget;\n      matrix = math.matrix.multiply(matrixEvent, matrix);\n      ctx.save();\n      ctx.setTransform(matrix[0], matrix[1], matrix[4], matrix[5], matrix[12], matrix[13]);\n      ctx.strokeStyle = '#F90';\n      ctx.lineWidth = 1;\n      ctx.beginPath();\n      ctx.moveTo(dx, dy);\n      ctx.lineTo(tex.frameWidth + dx, dy);\n      ctx.lineTo(tex.frameWidth + dx, tex.frameHeight + dy);\n      ctx.lineTo(dx, tex.frameHeight + dy);\n      ctx.closePath();\n      ctx.stroke();\n      ctx.strokeStyle = 'rgba(172, 0, 172, 0.5)';\n      ctx.beginPath();\n      ctx.moveTo(-tex.frameX + dx, -tex.frameY + dy);\n      ctx.lineTo(-tex.frameX + tex.width + dx, -tex.frameY + dy);\n      ctx.lineTo(-tex.frameX + tex.width + dx,  -tex.frameY + tex.height + dy);\n      ctx.lineTo(-tex.frameX + dx,  -tex.frameY + tex.height + dy);\n      ctx.closePath();\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n}\n\nexport default {\n  canvasSlot,\n  canvasTriangle,\n  canvasBone,\n};\n","import karas from 'karas';\nimport parser from './parser';\nimport util from './util';\nimport render from './render';\nimport { version } from '../package.json';\n\nlet uuid = 0;\n\nconst SHARE_CACHE = {};\nconst { STYLE_KEY: {\n  DISPLAY,\n  VISIBILITY,\n  OPACITY,\n  MARGIN_LEFT,\n  PADDING_LEFT,\n  BORDER_LEFT_WIDTH,\n  MARGIN_TOP,\n  PADDING_TOP,\n  BORDER_TOP_WIDTH,\n  WIDTH,\n  HEIGHT,\n} } = karas.enums;\n\nclass Dragonbones extends karas.Component {\n  componentDidMount() {\n    this.init();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    let props = this.props;\n    if(nextProps !== props) {\n      if(nextProps.ske !== props.ske\n        || nextProps.tex !== props.tex\n        || nextProps.enlarge !== props.enlarge\n        || nextProps.enlargeSlot !== props.enlargeSlot\n          && !karas.util.equal(nextProps.enlargeSlot, props.enlargeSlot)) {\n        this.init();\n      }\n      else {\n        if(nextProps.armature !== props.armature) {\n          this.armature(nextProps.armature, props);\n        }\n        else {\n          if(nextProps.action !== props.action) {\n            this.action(nextProps.action);\n          }\n          if(nextProps.imagePath !== props.imagePath) {\n            this.changeImage(nextProps.imagePath);\n          }\n          if(nextProps.playbackRate !== props.playbackRate && this.animation) {\n            this.animation.playbackRate = nextProps.playbackRate;\n          }\n          if(nextProps.fps !== props.fps && this.animation) {\n            this.animation.fps = nextProps.fps;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  init() {\n    let props = this.props;\n    let { ske, tex } = props;\n    let total = 0;\n    if(karas.util.isString(ske)) {\n      total++;\n      props.loadJson(ske, (res) => {\n        total--;\n        ske = res;\n        this.build(total, ske, tex);\n      });\n    }\n    if(karas.util.isString(tex)) {\n      total++;\n      props.loadJson(tex, (res) => {\n        total--;\n        tex = res;\n        this.build(total, ske, tex);\n      });\n    }\n    this.build(total, ske, tex);\n  }\n\n  build(count, ske, tex) {\n    if(count !== 0) {\n      return;\n    }\n    let props = this.props;\n    this.staticCacheFlag = !!props.staticCache;\n    this.staticCacheHash = {};\n    ske.uuid = ske.uuid || ++uuid;\n    if(ske.version !== '5.5') {\n      throw new Error('The version' + ske.version + ' does not match 5.5');\n    }\n    this.ske = karas.util.clone(ske);\n    this.tex = karas.util.clone(tex);\n    parser.parseAndLoadTex(this.tex, (texHash) => {\n      this.texHash = texHash;\n      this.armature(props.armature, props);\n    }, props);\n  }\n\n  armature(name, options = {}) {\n    let op = karas.util.extend({}, options);\n    op.armature = name;\n    let {\n      name: n,\n      bone,\n      boneHash,\n      slot,\n      slotHash,\n      skin,\n      skinHash,\n      animationHash,\n      defaultActions,\n      canvas,\n    } = parser.parseSke(this.ske, this.texHash, op);\n    this.armatureName = n;\n    this.bone = bone;\n    this.boneHash = boneHash;\n    this.slot = slot;\n    this.slotHash = slotHash;\n    this.skin = skin;\n    this.skinHash = skinHash;\n    this.animationHash = animationHash;\n    this.canvas = canvas;\n\n    let defaultAction;\n    if(options.action && animationHash[options.action]) {\n      let key = options.pause ? 'gotoAndStop' : 'gotoAndPlay';\n      defaultAction = {\n        [key]: options.action,\n      };\n    }\n    // 不存在或没有指定使用ske文件的第一个\n    else if(defaultActions && defaultActions.length) {\n      defaultAction = defaultActions[0];\n    }\n    if(defaultAction) {\n      let a = this.action(defaultAction.gotoAndPlay || defaultAction.gotoAndStop);\n      if(options.pause || defaultAction.gotoAndStop) {\n        a.gotoAndStop(0);\n      }\n      return a;\n    }\n    else {\n      console.warn('No action data');\n    }\n  }\n\n  action(name) {\n    this.actionName = name;\n    let animation = this.animationHash[name];\n    if(!animation) {\n      throw new Error('Can not find animation: ' + name);\n    }\n    // 清除上次动画的影响\n    if(this.animation) {\n      util.clearAnimation(this.bone, this.slot);\n    }\n    let { boneAnimationList, slotAnimationList, ffdAnimationHash, options } = animation;\n    if(!karas.util.isNil(this.props.playbackRate)) {\n      options.playbackRate = this.props.playbackRate;\n    }\n    if(!karas.util.isNil(this.props.fps)) {\n      options.fps = this.props.fps;\n    }\n    // 隐藏节点模拟一段不展示的动画，带动每次渲染\n    let fake = this.ref.fake;\n    fake.clearAnimate();\n    let a = this.animation = fake.animate([\n      {\n        backgroundColor: '#000',\n      },\n      {\n        backgroundColor: '#FFF',\n      },\n    ], options);\n    // 劫持隐藏节点渲染，因本身display:none可以不执行原本逻辑，计算并渲染骨骼动画\n    let self = this;\n    let computedStyle = self.shadowRoot.computedStyle;\n    let root = self.root;\n    let width = root.width;\n    let height = root.height;\n    fake.render = function(renderMode, ctx, dx = 0, dy = 0) {\n      if(computedStyle[DISPLAY] === 'none'\n        || computedStyle[VISIBILITY] === 'hidden'\n        || computedStyle[OPACITY] === 0) {\n        return;\n      }\n      // 开启了静态帧优化优先使用缓存\n      let offScreen;\n      let sourceCtx;\n      let staticKey;\n      if(self.staticCacheFlag) {\n        offScreen = karas.inject.getCacheCanvas(width, height);\n        sourceCtx = ctx;\n        ctx = offScreen.ctx;\n        let frame = Math.floor(a.currentTime * (self.fps || 60) / 1000);\n        // ske文件uuid + 骨架名 + 动画名 + 帧数\n        staticKey = self.ske.uuid + '>' + self.armatureName + '>' + self.actionName + '>' + frame;\n        let ca = self.staticCacheHash[staticKey];\n        if(ca) {\n          ctx.putImageData(ca, 0, 0);\n          offScreen.draw(ctx);\n          sourceCtx.drawImage(offScreen.canvas, 0, 0);\n          ctx.clearRect(0, 0, width, height);\n          return;\n        }\n      }\n      let { bone, slot, boneHash, slotHash, skinHash, texHash } = self;\n      // 动态情况缓存当前帧，为多个实例节省计算\n      let dynamicKey = self.ske.uuid + '>' + self.armatureName + '>' + self.actionName;\n      let dynamicCache = SHARE_CACHE[dynamicKey];\n      if(self.props.share && dynamicCache && dynamicCache.currentTime === a.currentTime) {\n        bone = dynamicCache.bone;\n        slot = dynamicCache.slot;\n        skinHash = dynamicCache.skinHash;\n      }\n      else {\n        let offset = Math.min(1, a.currentTime / a.duration);\n        util.animateBoneMatrix(boneAnimationList, offset, boneHash);\n        util.mergeBoneMatrix(bone[0]);\n        util.animateSlot(slotAnimationList, offset, slotHash);\n        util.calSlot(offset, slot, skinHash, bone, boneHash, texHash, ffdAnimationHash);\n        SHARE_CACHE[dynamicKey] = {\n          bone,\n          slot,\n          skinHash,\n          currentTime: a.currentTime,\n        };\n      }\n      if(renderMode === karas.mode.CANVAS) {\n        let { matrixEvent } = self.shadowRoot;\n        // 先在dom中居中\n        let left = computedStyle[MARGIN_LEFT] + computedStyle[BORDER_LEFT_WIDTH] + computedStyle[PADDING_LEFT] + computedStyle[WIDTH] * 0.5;\n        let top = computedStyle[MARGIN_TOP] + computedStyle[BORDER_TOP_WIDTH] + computedStyle[PADDING_TOP] + computedStyle[HEIGHT] * 0.5;\n        let t = karas.math.matrix.identity();\n        t[12] = left;\n        t[13] = top;\n        // 画布居中\n        if(self.canvas) {\n          let dx = self.canvas.x || 0;\n          let dy = self.canvas.y || 0;\n          t[12] -= dx * 0.5;\n          t[13] -= dy * 0.5;\n          // 适配尺寸\n          if(self.props.fitSize) {\n            let sx = computedStyle.width / self.canvas.width;\n            let sy = computedStyle.height / self.canvas.height;\n            t[0] = sx;\n            t[5] = sy;\n          }\n        }\n        matrixEvent = karas.math.matrix.multiply(matrixEvent, t);\n        render.canvasSlot(ctx, matrixEvent, slot, skinHash, texHash, dx, dy);\n        // debug模式\n        if(self.props.debug) {\n          render.canvasTriangle(ctx, matrixEvent, slot, skinHash, texHash, dx, dy);\n          render.canvasBone(ctx, matrixEvent, bone[0], dx, dy);\n        }\n        else {\n          if(self.props.debugBone) {\n            render.canvasBone(ctx, matrixEvent, bone[0], dx, dy);\n          }\n          if(self.props.debugSlot) {\n            render.canvasTriangle(ctx, matrixEvent, slot, skinHash, texHash, dx, dy);\n          }\n        }\n        // 静态帧优化将离屏内容绘入\n        if(self.staticCacheFlag) {\n          offScreen.draw(ctx);\n          sourceCtx.drawImage(offScreen.canvas, 0, 0);\n          self.staticCacheHash[staticKey] = ctx.getImageData(0, 0, width, height);\n          ctx.clearRect(0, 0, width, height);\n        }\n      }\n    };\n    return a;\n  }\n\n  changeImage(src) {\n    if(src) {\n      let tex = this.tex;\n      tex.imagePath = src;\n      let texHash = this.texHash;\n      karas.inject.measureImg(src, function() {\n        tex.SubTexture.forEach(item => {\n          let { name } = item;\n          texHash[name].source = karas.inject.IMG[src].source;\n        });\n      });\n    }\n  }\n\n  setStaticCache(flag) {\n    this.staticCacheFlag = !!flag;\n  }\n\n  cleanStaticCache() {\n    this.staticCacheHash = {};\n  }\n\n  render() {\n    return <div>\n      <$polyline ref=\"fake\"/>\n    </div>;\n  }\n}\n\nDragonbones.version = version;\n\nexport default Dragonbones;\n"],"names":["inject","karas","math","parseAndLoadTex","tex","cb","props","src","imagePath","texHash","measureImg","SubTexture","forEach","item","name","x","y","width","height","frameX","frameY","frameWidth","frameHeight","source","IMG","parseSke","ske","globalFrameRate","frameRate","armature","currentArmature","i","len","length","Error","console","warn","bone","slot","skin","animation","defaultActions","canvas","boneHash","parseBone","slotHash","parseSlot","skinHash","parseSkin","animationHash","parseAnimation","data","hash","root","children","parent","transform","push","index","matrix","identity","m","multiply","skX","d","geom","d2r","sin","Math","cos","scX","undefined","scY","slotName","display","type","path","vertices","triangles","uvs","weights","bonePose","weightHash","bonePoseHash","verticesIndex","num","list","j","value","slice","coords","calPoint","pose","verticesList","res","weightList","weight","x0","y0","x1","y1","dx","dy","theta","atan","abs","PI","rotate","translate","triangleList","i1","i2","i3","p1x","p1y","p2x","p2y","p3x","p3y","x2","y2","x3","y3","triangleIncentre","px","parseFloat","enlarge","isNaN","enlargeSlot","hasOwnProperty","n","scale","triangleScale","t","sx1","sy1","sx2","sy2","sx3","sy3","round","indexList","scaleCoords","a","b","c","sqrt","pow","duration","playTimes","ffd","options","iterations","Infinity","fill","boneAnimationList","map","translateFrame","rotateFrame","scaleFrame","originTransform","offsetSum","last","frame","easingFn","getEasing","offset","translateX","translateY","rotateZ","dz","scaleX","scaleY","slotAnimationList","displayFrame","colorFrame","aM","da","ffdAnimationHash","ffdAnimationList","os","unshift","verticesLast","dv","max","curve","animate","easing","cubicBezier","animateBoneMatrix","animationList","frames","binarySearch","current","next","total","percent","matrixA","middle","min","mergeBoneMatrix","currentMatrix","mergeChildBoneMatrix","parentMatrix","animateSlot","displayIndexA","colorA","calSlot","displayIndex","displayTarget","boneMatrix","parentBoneMatrix","offsetMatrix","matrixF","target","concat","tar","exchangeOrder","source1","target1","clearAnimation","canvasBone","ctx","matrixEvent","setTransform","beginPath","strokeStyle","lineWidth","arc","moveTo","lineTo","closePath","stroke","canvasSlot","blendMode","color","globalCompositeOperation","opacity","globalAlpha","save","clip","drawImage","restore","canvasTriangle","fillStyle","uuid","SHARE_CACHE","enums","STYLE_KEY","DISPLAY","VISIBILITY","OPACITY","MARGIN_LEFT","PADDING_LEFT","BORDER_LEFT_WIDTH","MARGIN_TOP","PADDING_TOP","BORDER_TOP_WIDTH","WIDTH","HEIGHT","Dragonbones","init","nextProps","util","equal","action","changeImage","playbackRate","fps","isString","loadJson","build","count","staticCacheFlag","staticCache","staticCacheHash","version","clone","parser","op","extend","armatureName","defaultAction","key","pause","gotoAndPlay","gotoAndStop","actionName","isNil","fake","ref","clearAnimate","backgroundColor","self","computedStyle","shadowRoot","render","renderMode","offScreen","sourceCtx","staticKey","getCacheCanvas","floor","currentTime","ca","putImageData","draw","clearRect","dynamicKey","dynamicCache","share","mode","CANVAS","left","top","fitSize","sx","sy","debug","debugBone","debugSlot","getImageData","flag","Component"],"mappings":"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"}