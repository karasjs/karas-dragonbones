{"version":3,"file":"index.es.js","sources":["src/parser.js","src/util.js","src/render.js","src/index.js"],"sourcesContent":["import karas from 'karas';\n\nconst { inject, math } = karas;\n\nfunction parseAndLoadTex(tex, cb, props = {}) {\n  let src = props.imagePath || tex.imagePath;\n  let texHash = {};\n  inject.measureImg(src, function() {\n    tex.SubTexture.forEach(item => {\n      let { name, x, y, width, height, frameX = 0, frameY = 0, frameWidth = width, frameHeight = height } = item;\n      texHash[name] = {\n        name,\n        x,\n        y,\n        width,\n        height,\n        frameX,\n        frameY,\n        frameWidth,\n        frameHeight,\n        source: inject.IMG[src].source,\n      };\n    });\n    cb(texHash);\n  });\n}\n\nfunction parseSke(ske, texHash, props = {}) {\n  let {\n    frameRate: globalFrameRate,\n    armature,\n  } = ske;\n  let currentArmature = armature[0];\n  if(props.armature) {\n    for(let i = 0, len = armature.length; i < len; i++) {\n      let item = armature[i];\n      if(item.name === props.armature) {\n        currentArmature = item;\n        break;\n      }\n    }\n    if(!currentArmature) {\n      throw new Error('Can not find armature: ' + props.armature);\n    }\n  }\n  if(!currentArmature) {\n    console.warn('No armature data');\n    return;\n  }\n  let {\n    name,\n    bone,\n    slot,\n    skin,\n    frameRate,\n    animation,\n    defaultActions,\n    canvas,\n  } = currentArmature;\n  let boneHash = parseBone(bone);\n  let slotHash = parseSlot(slot);\n  let skinHash = parseSkin(skin, texHash, props);\n  let animationHash = parseAnimation(animation, frameRate || globalFrameRate || 60, boneHash);\n  return {\n    name,\n    bone,\n    boneHash,\n    slot,\n    slotHash,\n    skin: skin[0].slot,\n    skinHash,\n    animationHash,\n    defaultActions,\n    canvas,\n  };\n}\n\nfunction parseSlot(data) {\n  let hash = {};\n  data.forEach(item => {\n    hash[item.name] = item;\n  });\n  return hash;\n}\n\nfunction parseBone(data) {\n  let hash = {};\n  // bone数据形成tree结构，符合dom格式，第一个一定是root\n  let root = data[0];\n  root.children = [];\n  hash[root.name] = root;\n  data.forEach((item, i) => {\n    let { name, parent, transform = {} } = item;\n    if(parent) {\n      hash[parent].children.push(item);\n    }\n    hash[name] = item;\n    item.children = [];\n    item.index = i;\n    // 静态变换样式，可能某个骨骼没动画\n    let matrix = math.matrix.identity();\n    if(transform.x || transform.y) {\n      let m = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, transform.x || 0, transform.y || 0, 0, 1];\n      matrix = math.matrix.multiply(matrix, m);\n    }\n    if(transform.skX) {\n      let d = math.geom.d2r(transform.skX);\n      let sin = Math.sin(d);\n      let cos = Math.cos(d);\n      let m = [cos, sin, 0, 0, -sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n      matrix = math.matrix.multiply(matrix, m);\n    }\n    if(transform.scX !== undefined || transform.scY !== undefined) {\n      let m = [transform.scX === undefined ? 1 : transform.scX, 0, 0, 0, 0, transform.scY === undefined ? 1 : transform.scY, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n      matrix = karas.math.matrix.multiply(matrix, m);\n    }\n    item.matrix = matrix;\n  });\n  return hash;\n}\n\nfunction parseSkin(data, texHash, props) {\n  let hash = {};\n  data[0].slot.forEach(item => {\n    let { name: slotName, display } = item;\n    hash[slotName] = item;\n    display.forEach(item => {\n      let { type, name, path } = item;\n      // mesh网格分析三角形\n      if(type === 'mesh') {\n        let { vertices, triangles, uvs, weights, bonePose } = item;\n        let weightHash;\n        let bonePoseHash;\n        // 有权重则绑定骨骼，坐标系为世界；\n        // 没有权重时，完全属于父骨骼，类似普通贴图行为\n        if(weights) {\n          // 权重格式化hash\n          weightHash = {};\n          for(let i = 0, len = weights.length, verticesIndex = 0; i < len; i++) {\n            let num = weights[i];\n            let list = [];\n            for(let j = i + 1; j < i + 1 + num * 2; j += 2) {\n              let index = weights[j];\n              let value = weights[j + 1];\n              list.push({\n                index,\n                value,\n              });\n            }\n            weightHash[verticesIndex++] = list;\n            i += num * 2;\n          }\n          // 骨骼初始pose格式化和世界坐标\n          bonePoseHash = {};\n          for(let i = 0, len = bonePose.length; i < len; i += 7) {\n            let index = bonePose[i];\n            let m = bonePose.slice(i + 1, i + 7);\n            let matrix = [m[0], m[1], 0, 0, m[2], m[3], 0, 0, 0, 0, 1, 0, m[4], m[5], 0, 1];\n            let coords = math.matrix.calPoint([0, 0], matrix);\n            bonePoseHash[index] = {\n              coords,\n              pose: matrix,\n            };\n          }\n        }\n        // 顶点格式化，相对于骨骼点的x/y位移差值\n        let verticesList = item.verticesList = [];\n        for(let i = 0, len = vertices.length; i < len; i += 2) {\n          let index = i >> 1;\n          let x = vertices[i];\n          let y = vertices[i + 1];\n          let res = {\n            index,\n            x,\n            y,\n          };\n          verticesList.push(res);\n          // 有添加绑定骨骼才有权重\n          if(weightHash) {\n            res.weightList = [];\n            let weight = weightHash[index];\n            weight.forEach(item => {\n              let { index, value } = item;\n              let { coords, pose } = bonePoseHash[index];\n              // 先求骨头的角度，逆向选择至水平后，平移x/y的差值\n              let [x0, y0] = math.matrix.calPoint([0, 0], pose);\n              let [x1, y1] = math.matrix.calPoint([1, 0], pose);\n              let dx = x1 - x0;\n              let dy = y1 - y0;\n              let theta;\n              // 4个象限分开判断\n              if(dx >= 0 && dy >= 0) {\n                theta = -Math.atan(Math.abs(dy / dx));\n              }\n              else if(dx < 0 && dy >= 0) {\n                theta = -Math.PI + Math.atan(Math.abs(dy / dx));\n              }\n              else if(dx < 0 && dy < 0) {\n                theta = Math.PI - Math.atan(Math.abs(dy / dx));\n              }\n              else {\n                theta = Math.atan(Math.abs(dy / dx));\n              }\n              let rotate = [Math.cos(theta), Math.sin(theta), 0, 0, -Math.sin(theta), Math.cos(theta), 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n              let translate = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, x - coords[0], y - coords[1], 0, 1];\n              let matrix = math.matrix.multiply(rotate, translate);\n              res.weightList.push({\n                index,\n                value,\n                matrix,\n              });\n            });\n          }\n        }\n        // 三角形，切割图片坐标\n        let tex = texHash[path || name];\n        let { width, height } = tex;\n        let triangleList = item.triangleList = [];\n        for(let i = 0, len = triangles.length; i < len; i += 3) {\n          let i1 = triangles[i];\n          let i2 = triangles[i + 1];\n          let i3 = triangles[i + 2];\n          // uv坐标\n          let p1x = uvs[i1 * 2];\n          let p1y = uvs[i1 * 2 + 1];\n          let p2x = uvs[i2 * 2];\n          let p2y = uvs[i2 * 2 + 1];\n          let p3x = uvs[i3 * 2];\n          let p3y = uvs[i3 * 2 + 1];\n          // uv贴图坐标根据尺寸映射真实坐标\n          let x1 = p1x * width;\n          let y1 = p1y * height;\n          let x2 = p2x * width;\n          let y2 = p2y * height;\n          let x3 = p3x * width;\n          let y3 = p3y * height;\n          // 从内心往外扩展约0.25px，可参数指定\n          let [x0, y0] = math.geom.triangleIncentre(x1, y1, x2, y2, x3, y3);\n          let px = parseFloat(props.enlarge);\n          if(isNaN(px)) {\n            px = 0.25;\n          }\n          // 单独为slot配置的扩展参数\n          if(props.enlargeSlot && props.enlargeSlot.hasOwnProperty(slotName)) {\n            let n = parseFloat(props.enlargeSlot[slotName]);\n            if(isNaN(n)) {\n              n = 0.25;\n            }\n            px = n;\n          }\n          let scale = px ? triangleScale(x0, y0, x1, y1, x2, y2, x3, y3, px) : 1;\n          // 以内心为transformOrigin\n          let m = math.matrix.identity();\n          m[12] = -x0;\n          m[13] = -y0;\n          // 缩放\n          let t = math.matrix.identity();\n          t[0] = t[5] = scale;\n          m = math.matrix.multiply(t, m);\n          // 移动回去\n          t[12] = x0;\n          t[13] = y0;\n          m = math.matrix.multiply(t, m);\n          // 获取扩展后的三角形顶点坐标\n          let [sx1, sy1] = math.matrix.calPoint([x1, y1], m);\n          let [sx2, sy2] = math.matrix.calPoint([x2, y2], m);\n          let [sx3, sy3] = math.matrix.calPoint([x3, y3], m);\n          // 三角形所在矩形距离左上角原点的坐标，以此做img切割最小尺寸化，以及变换原点计算\n          // let [ox, oy, ow, oh] = triangleOriginCoords(sx1, sy1, sx2, sy2, sx3, sy3);\n          triangleList.push({\n            index: Math.round(i / 3),\n            indexList: [i1, i2, i3],\n            // ox,\n            // oy,\n            // ow,\n            // oh,\n            // points: [\n            //   [p1x, p1y],\n            //   [p2x, p2y],\n            //   [p3x, p3y]\n            // ],\n            coords: [\n              [x1, y1],\n              [x2, y2],\n              [x3, y3]\n            ],\n            scale,\n            scaleCoords: [\n              [sx1, sy1],\n              [sx2, sy2],\n              [sx3, sy3]\n            ],\n            width,\n            height,\n          });\n        }\n      }\n    });\n  });\n  return hash;\n}\n\n/**\n * 将三角形从内心缩放指定像素\n * @param x0\n * @param y0\n * @param x1\n * @param y1\n * @param x2\n * @param y2\n * @param x3\n * @param y3\n * @param px 缩放多少像素，可正负\n * @returns {number} 缩放倍数\n */\nfunction triangleScale(x0, y0, x1, y1, x2, y2, x3, y3, px = 0) {\n  // 内心到任意一边的距离\n  let a = y2 - y1;\n  let b = x1 - x2;\n  let c = x2 * y1 - x1 * y2;\n  let d = Math.abs(a * x0 + b * y0 + c) / Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n  return (d + px) / d;\n}\n\n/**\n * 获取三角形所在最小矩形的原点坐标、尺寸\n * @param x1\n * @param y1\n * @param x2\n * @param y2\n * @param x3\n * @param y3\n */\nfunction triangleOriginCoords(x1, y1, x2, y2, x3, y3) {\n  let xMin = x1;\n  let yMin = y1;\n  let xMax = x1;\n  let yMax = y1;\n  xMin = Math.min(xMin, x2);\n  xMin = Math.min(xMin, x3);\n  yMin = Math.min(yMin, y2);\n  yMin = Math.min(yMin, y3);\n  xMax = Math.max(xMax, x2);\n  xMax = Math.max(xMax, x3);\n  yMax = Math.max(yMax, y2);\n  yMax = Math.max(yMax, y3);\n  return [xMin, yMin, xMax - xMin, yMax - yMin];\n}\n\nfunction parseAnimation(data, frameRate, boneHash) {\n  let hash = {};\n  data.forEach(item => {\n    let { duration, playTimes, name, bone = [], slot = [], ffd = [] } = item;\n    hash[name] = item;\n    item.options = {\n      duration: 1000 * duration / frameRate,\n      iterations: playTimes === 0 ? Infinity : playTimes,\n      fill: 'forwards',\n    };\n    // 骨骼动画列表\n    item.boneAnimationList = bone.map(item => {\n      let { name, translateFrame, rotateFrame, scaleFrame } = item;\n      let { transform: originTransform = {} } = boneHash[name];\n      let res = {\n        name,\n        list: [],\n      };\n      if(translateFrame) {\n        let offsetSum = 0;\n        let last;\n        let value = translateFrame.map(frame => {\n          let { duration: d = 1 } = frame;\n          let easingFn = getEasing(frame);\n          let offset = offsetSum / duration;\n          offsetSum += d;\n          let { x = 0, y = 0 } = originTransform;\n          let res = {\n            type: 0,\n            translateX: (frame.x || 0) + x,\n            translateY: (frame.y || 0) + y,\n            offset,\n            easingFn,\n          };\n          if(last) {\n            last.dx = res.translateX - last.translateX;\n            last.dy = res.translateY - last.translateY;\n          }\n          last = res;\n          return res;\n        });\n        res.list.push(value);\n      }\n      if(rotateFrame) {\n        let offsetSum = 0;\n        let last;\n        let value = rotateFrame.map(frame => {\n          let { duration: d = 1 } = frame;\n          let easingFn = getEasing(frame);\n          let offset = offsetSum / duration;\n          offsetSum += d;\n          let { skX = 0 } = originTransform;\n          let res = {\n            type: 1,\n            rotateZ: (frame.rotate || 0) + skX,\n            offset,\n            easingFn,\n          };\n          if(last) {\n            last.dz = res.rotateZ - last.rotateZ;\n          }\n          last = res;\n          return res;\n        });\n        res.list.push(value);\n      }\n      if(scaleFrame) {\n        let offsetSum = 0;\n        let last;\n        let value = scaleFrame.map(frame => {\n          let { duration: d = 1 } = frame;\n          let easingFn = getEasing(frame);\n          let offset = offsetSum / duration;\n          offsetSum += d;\n          let { scX = 1, scY = 1 } = originTransform;\n          let res = {\n            type: 2,\n            scaleX: (frame.x === undefined ? 1 : frame.x) * scX,\n            scaleY: (frame.y === undefined ? 1 : frame.y) * scY,\n            offset,\n            easingFn,\n          };\n          if(last) {\n            last.dx = res.scaleX - last.scaleX;\n            last.dy = res.scaleY - last.scaleY;\n          }\n          last = res;\n          return res;\n        });\n        res.list.push(value);\n      }\n      return res;\n    });\n    // 插槽动画列表\n    item.slotAnimationList = slot.map(item => {\n      let { displayFrame, colorFrame } = item;\n      if(displayFrame) {\n        let offsetSum = 0;\n        displayFrame.forEach(frame => {\n          let { duration: d = 1 } = frame;\n          let offset = offsetSum / duration;\n          offsetSum += d;\n          frame.offset = offset;\n        });\n      }\n      if(colorFrame) {\n        let offsetSum = 0;\n        let last;\n        colorFrame.forEach(frame => {\n          let { duration: d = 1 } = frame;\n          frame.easingFn = getEasing(frame);\n          let offset = offsetSum / duration;\n          offsetSum += d;\n          frame.offset = offset;\n          // 没有value就用默认值\n          if(!frame.value) {\n            frame.value = {\n              aM: 100,\n            };\n          }\n          if(frame.value.aM === undefined) {\n            frame.value.aM = 100;\n          }\n          if(last) {\n            last.da = frame.value.aM - last.value.aM;\n          }\n          last = frame;\n        });\n      }\n      return item;\n    });\n    // 自由变形列表\n    let ffdAnimationHash = item.ffdAnimationHash = {};\n    item.ffdAnimationList = ffd.map(item => {\n      let { name, slot, frame } = item;\n      // db限制了不能出现在名字里\n      ffdAnimationHash[slot + '>' + name] = item;\n      if(frame) {\n        let offsetSum = 0;\n        let last;\n        frame.forEach(frame => {\n          let { vertices, duration: d = 1, offset: os } = frame;\n          frame.easingFn = getEasing(frame);\n          if(vertices) {\n            for(let i = 0; i < os; i++) {\n              vertices.unshift(0);\n            }\n          }\n          let offset = offsetSum / duration;\n          offsetSum += d;\n          frame.offset = offset;\n          // 顶点变形数据vertices都是偏移量，无偏移为空\n          if(last) {\n            let verticesLast = last.vertices;\n            if(verticesLast && vertices) {\n              last.dv = [];\n              for(let i = 0, len = Math.max(verticesLast.length, vertices.length); i < len; i++) {\n                last.dv.push((vertices[i] || 0) - (verticesLast[i] || 0));\n              }\n            }\n            else if(verticesLast) {\n              last.dv = last.vertices.map(n => -n);\n            }\n            else if(vertices) {\n              last.dv = vertices;\n            }\n          }\n          last = frame;\n        });\n      }\n      return item;\n    });\n  });\n  return hash;\n}\n\nfunction getEasing(frame) {\n  let curve = frame.curve;\n  if(curve && curve[0] !== 1 && curve[1] !== 1 && curve[2] !== 0 && curve[3] !== 0) {\n    return karas.animate.easing.cubicBezier(curve[0], curve[1], curve[2], curve[3]);\n  }\n}\n\nexport default {\n  parseAndLoadTex,\n  parseSke,\n};\n","import karas from 'karas';\n\nconst { math } = karas;\n\n/**\n * 根据动画时间状态修改骨骼当前matrix\n * @param animationList 动画列表\n * @param offset 当前时间偏移量\n * @param boneHash 骨骼hash\n */\nfunction animateBoneMatrix(animationList, offset, boneHash) {\n  animationList.forEach(item => {\n    let { name, list } = item;\n    let bone = boneHash[name];\n    // 先以静态变换样式为基础\n    let { transform = {} } = bone;\n    let res = {};\n    res.translateX = transform.x || 0;\n    res.translateY = transform.y || 0;\n    res.rotateZ = transform.skX || 0;\n    res.scaleX = transform.scX === undefined ? 1 : transform.scX;\n    res.scaleY = transform.scY === undefined ? 1 : transform.scY;\n    // 再assign动画中的变换样式\n    list.forEach(frames => {\n      let len = frames.length;\n      if(!len) {\n        return;\n      }\n      let type = frames[0].type;\n      let i = binarySearch(0, len - 1, offset, frames);\n      let current = frames[i];\n      let easingFn = current.easingFn;\n      // 是否最后一帧\n      if(i === len - 1) {\n        if(type === 0) {\n          res.translateX = current.translateX;\n          res.translateY = current.translateY;\n        }\n        else if(type === 1) {\n          res.rotateZ = current.rotateZ;\n        }\n        else if(type === 2) {\n          res.scaleX = current.scaleX;\n          res.scaleY = current.scaleY;\n        }\n      }\n      else {\n        let next = frames[i + 1];\n        let total = next.offset - current.offset;\n        let percent = (offset - current.offset) / total;\n        if(easingFn) {\n          percent = easingFn(percent);\n        }\n        if(type === 0) {\n          res.translateX = current.translateX + current.dx * percent;\n          res.translateY = current.translateY + current.dy * percent;\n        }\n        else if(type === 1) {\n          res.rotateZ = current.rotateZ + current.dz * percent;\n        }\n        else if(type === 2) {\n          res.scaleX = current.scaleX + current.dx * percent;\n          res.scaleY = current.scaleY + current.dy * percent;\n        }\n      }\n    });\n    let matrix = math.matrix.identity();\n    if(res.translateX || res.translateY) {\n      let m = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, res.translateX || 0, res.translateY || 0, 0, 1];\n      matrix = math.matrix.multiply(matrix, m);\n    }\n    if(res.rotateZ) {\n      let d = math.geom.d2r(res.rotateZ);\n      let sin = Math.sin(d);\n      let cos = Math.cos(d);\n      let m = [cos, sin, 0, 0, -sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n      matrix = math.matrix.multiply(matrix, m);\n    }\n    if(res.scaleX !== undefined || res.scaleY !== undefined) {\n      let m = [res.scaleX === undefined ? 1 : res.scaleX, 0, 0, 0, 0, res.scaleY === undefined ? 1 : res.scaleY, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n      matrix = math.matrix.multiply(matrix, m);\n    }\n    bone.matrixA = matrix;\n  });\n}\n\n/**\n * 二分查找根据时间轴帧序列和当前百分比获得当前帧\n * @param i\n * @param j\n * @param offset\n * @param frames\n * @returns {frame}\n */\nfunction binarySearch(i, j, offset, frames) {\n  if(i === j) {\n    let frame = frames[i];\n    if(frame.offset > offset) {\n      return i - 1;\n    }\n    return i;\n  }\n  else {\n    let middle = i + ((j - i) >> 1);\n    let frame = frames[middle];\n    if(frame.offset === offset) {\n      return middle;\n    }\n    else if(frame.offset > offset) {\n      return binarySearch(i, Math.max(middle - 1, i), offset, frames);\n    }\n    else {\n      return binarySearch(Math.min(middle + 1, j), j, offset, frames);\n    }\n  }\n}\n\n/**\n * 递归遍历骨骼，根据父子属性合并生成骨骼相对于舞台的最终currentMatrix\n * @param root 根骨骼\n */\nfunction mergeBoneMatrix(root) {\n  root.currentMatrix = root.matrixA || root.matrix;\n  root.children.forEach(item => {\n    mergeChildBoneMatrix(item, root.currentMatrix);\n  });\n}\n\nfunction mergeChildBoneMatrix(bone, parentMatrix) {\n  bone.currentMatrix = math.matrix.multiply(parentMatrix, bone.matrixA || bone.matrix);\n  bone.children.forEach(item => {\n    mergeChildBoneMatrix(item, bone.currentMatrix);\n  });\n}\n\n/**\n * 根据当前动画时间执行slot的动画，确定显示slot下的皮肤索引和透明度\n * @param slotAnimationList\n * @param offset\n * @param slotHash\n */\nfunction animateSlot(slotAnimationList, offset, slotHash) {\n  slotAnimationList.forEach(item => {\n    let { name, displayFrame, colorFrame } = item;\n    let slot = slotHash[name];\n    if(displayFrame) {\n      if(displayFrame.length) {\n        let i = binarySearch(0, displayFrame.length - 1, offset, displayFrame);\n        let { value = 0 } = displayFrame[i];\n        slot.displayIndexA = value;\n      }\n    }\n    if(colorFrame) {\n      let len = colorFrame.length;\n      if(len) {\n        let i = binarySearch(0, len - 1, offset, colorFrame);\n        let current = colorFrame[i];\n        let easingFn = current.easing;\n        // 是否最后一帧\n        if(i === len - 1) {\n          slot.colorA = current.value;\n        }\n        else {\n          let next = colorFrame[i + 1];\n          let total = next.offset - current.offset;\n          let percent = (offset - current.offset) / total;\n          if(easingFn) {\n            percent = easingFn(percent);\n          }\n          slot.colorA = {\n            aM: current.value.aM + current.da * percent,\n          };\n        }\n      }\n    }\n  });\n}\n\n/**\n * 根据当前骨骼状态计算slot中显示对象变换matrix\n * @param offset\n * @param slot\n * @param skinHash\n * @param bone\n * @param boneHash\n * @param texHash\n * @param ffdAnimationHash\n */\nfunction calSlot(offset, slot, skinHash, bone, boneHash, texHash, ffdAnimationHash) {\n  slot.forEach(item => {\n    let { name, parent, displayIndex = 0, displayIndexA = displayIndex } = item;\n    // 插槽隐藏不显示\n    if(displayIndexA < 0) {\n      return;\n    }\n    let skin = skinHash[name];\n    let displayTarget = skin.display[displayIndexA];\n    // 网格类型\n    if(displayTarget.type === 'mesh') {\n      let { verticesList, triangleList } = displayTarget;\n      // 先进行顶点变换\n      verticesList.forEach(item => {\n        let { weightList } = item;\n        // 有绑定骨骼的mesh，计算权重\n        if(weightList) {\n          let m = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n          weightList.forEach(weight => {\n            let { index, value, matrix } = weight;\n            let boneMatrix = bone[index].currentMatrix;\n            let offset = karas.math.matrix.multiply(boneMatrix, matrix);\n            for(let i = 0; i < 16; i++) {\n              m[i] += offset[i] * value;\n            }\n          });\n          item.matrix = m;\n        }\n        // 没有绑定认为直属父骨骼\n        else {\n          let parentBoneMatrix = boneHash[parent].currentMatrix;\n          let offsetMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, item.x, item.y, 0, 1];\n          let m = karas.math.matrix.multiply(parentBoneMatrix, offsetMatrix);\n          item.matrix = m;\n        }\n        // 每次先清空ffd自由变换的数据\n        item.matrixF = null;\n      });\n      // 如果有ffd自定义顶点变换，计算偏移量matrix\n      let ffd = ffdAnimationHash[name + '>' + (displayTarget.path || displayTarget.name)];\n      if(ffd) {\n        let { frame } = ffd;\n        if(frame) {\n          let len = frame.length;\n          let i = binarySearch(0, len - 1, offset, frame);\n          let current = frame[i];\n          let easingFn = current.easingFn;\n          // 是否最后一帧\n          if(i === len - 1) {\n            let { vertices } = current;\n            if(vertices) {\n              for(let i = 0, len = vertices.length; i < len - 1; i += 2) {\n                let x = vertices[i];\n                let y = vertices[i + 1];\n                if(x === 0 && y === 0) {\n                  continue;\n                }\n                let index = i >> 1;\n                let target = verticesList[index];\n                let m = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, x, y, 0, 1];\n                target.matrixF = math.matrix.multiply(target.matrix, m);\n              }\n            }\n          }\n          else {\n            let next = frame[i + 1];\n            let total = next.offset - current.offset;\n            let percent = (offset - current.offset) / total;\n            if(easingFn) {\n              percent = easingFn(percent);\n            }\n            let { vertices, dv } = current;\n            if(vertices || dv) {\n              let len = 0;\n              if(vertices) {\n                len = vertices.length;\n              }\n              if(dv) {\n                len = Math.max(len, dv.length);\n              }\n              for(let i = 0; i < len - 1; i += 2) {\n                let x, y;\n                if(vertices) {\n                  x = vertices[i] || 0;\n                  y = vertices[i + 1] || 0;\n                }\n                else {\n                  x = y = 0;\n                }\n                if(dv) {\n                  x += (dv[i] || 0) * percent;\n                  y += (dv[i + 1] || 0) * percent;\n                }\n                if(x === 0 && y === 0) {\n                  continue;\n                }\n                let index = i >> 1;\n                let target = verticesList[index];\n                let m = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, x, y, 0, 1];\n                target.matrixF = math.matrix.multiply(target.matrix, m);\n              }\n            }\n          }\n        }\n      }\n      // 三角形根据顶点坐标变化计算仿射变换matrix\n      triangleList.forEach(item => {\n        let { indexList, coords } = item;\n        let source = coords[0].concat(coords[1]).concat(coords[2]);\n        let target = [];\n        indexList.forEach(i => {\n          let vertices = verticesList[i];\n          let coords = math.matrix.calPoint([0, 0], vertices.matrixF || vertices.matrix);\n          target = target.concat(coords.slice(0, 2));\n        });\n        // 先交换确保3个点顺序\n        let [source1, target1] = math.tar.exchangeOrder(source, target);\n        let matrix = math.tar.transform(source1, target1);\n        item.matrix = matrix;\n      });\n    }\n    // 默认图片类型\n    else {\n      let { transform = {} } = displayTarget;\n      let tex = texHash[displayTarget.path || displayTarget.name];\n      let parentBoneMatrix = boneHash[parent].currentMatrix;\n      let matrix = math.matrix.identity();\n      // 图片本身形变，因中心点在图片本身中心，所以无论是否有translate都要平移\n      let t = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, (transform.x || 0) - tex.frameWidth * 0.5, (transform.y || 0) - tex.frameHeight * 0.5, 0, 1];\n      matrix = math.matrix.multiply(matrix, t);\n      // 可选旋转\n      if(transform.skX) {\n        let d = math.geom.d2r(transform.skX);\n        let sin = Math.sin(d);\n        let cos = Math.cos(d);\n        let t = [cos, sin, 0, 0, -sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n        matrix = math.matrix.multiply(matrix, t);\n      }\n      // 可选缩放\n      if(transform.scX !== undefined || transform.scY !== undefined) {\n        let t = [transform.scX === undefined ? 1 : transform.scX, 0, 0, 0, 0, transform.scY === undefined ? 1 : transform.scY, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n        matrix = math.matrix.multiply(matrix, t);\n      }\n      // tfo为图片中心，可合并\n      t = math.matrix.identity();\n      t[12] = tex.frameWidth * 0.5;\n      t[13] = tex.frameHeight * 0.5;\n      matrix = math.matrix.multiply(t, matrix);\n      t = math.matrix.identity();\n      t[12] = -tex.frameWidth * 0.5;\n      t[13] = -tex.frameHeight * 0.5;\n      matrix = math.matrix.multiply(matrix, t);\n      matrix = math.matrix.multiply(parentBoneMatrix, matrix);\n      displayTarget.matrix = matrix;\n    }\n  });\n}\n\nfunction clearAnimation(bone, slot) {\n  bone.forEach(item => {\n    delete item.matrixA;\n  });\n  slot.forEach(item => {\n    delete item.displayIndexA;\n    delete item.colorA;\n  });\n}\n\nexport default {\n  animateBoneMatrix,\n  mergeBoneMatrix,\n  animateSlot,\n  calSlot,\n  clearAnimation,\n};\n","import karas from 'karas';\n\nconst { math } = karas;\n\nfunction canvasBone(ctx, matrixEvent, bone, dx, dy) {\n  let { length, children, currentMatrix } = bone;\n  let m = math.matrix.multiply(matrixEvent, currentMatrix);\n  ctx.setTransform(m[0], m[1], m[4], m[5], m[12], m[13]);\n  ctx.beginPath();\n  ctx.strokeStyle = '#000';\n  ctx.lineWidth = 1;\n  ctx.arc(dx, dy, 5, 0, Math.PI * 2);\n  ctx.moveTo(dx, dy);\n  ctx.lineTo((length || 5) + dx, dy);\n  ctx.closePath();\n  ctx.stroke();\n  children.forEach(item => {\n    canvasBone(ctx, matrixEvent, item, dx, dy);\n  });\n}\n\nfunction canvasSlot(ctx, matrixEvent, slot, skinHash, texHash, dx, dy) {\n  slot.forEach(item => {\n    let { name, displayIndex = 0, displayIndexA = displayIndex, blendMode, color = {}, colorA = color } = item;\n    // 插槽隐藏不显示\n    if(displayIndexA < 0) {\n      return;\n    }\n    // 叠加模式\n    if(blendMode === 'add') {\n      ctx.globalCompositeOperation = 'lighter';\n    }\n    else {\n      ctx.globalCompositeOperation = 'source-over';\n    }\n    let { aM = 100 } = colorA;\n    let opacity = ctx.globalAlpha;\n    // 透明度\n    ctx.globalAlpha *= aM / 100;\n    let skin = skinHash[name];\n    let displayTarget = skin.display[displayIndexA];\n    let tex = texHash[displayTarget.path || displayTarget.name];\n    // 网格类型\n    if(displayTarget.type === 'mesh') {\n      let { triangleList } = displayTarget;\n      triangleList.forEach(item => {\n        let { matrix, scaleCoords } = item;\n        matrix = math.matrix.multiply(matrixEvent, matrix);\n        // clip绘制\n        ctx.save();\n        ctx.setTransform(matrix[0], matrix[1], matrix[4], matrix[5], matrix[12], matrix[13]);\n        ctx.beginPath();\n        ctx.moveTo(scaleCoords[0][0] + dx, scaleCoords[0][1] + dy);\n        ctx.lineTo(scaleCoords[1][0] + dx, scaleCoords[1][1] + dy);\n        ctx.lineTo(scaleCoords[2][0] + dx, scaleCoords[2][1] + dy);\n        ctx.closePath();\n        ctx.clip();\n        ctx.drawImage(tex.source, -tex.x - tex.frameX + dx, -tex.y - tex.frameY + dy);\n        ctx.restore();\n      });\n    }\n    // 默认图片类型\n    else {\n      let { matrix } = displayTarget;\n      if(matrix[0] === 0 || matrix[5] === 0) {\n        return;\n      }\n      matrix = math.matrix.multiply(matrixEvent, matrix);\n      // clip绘制\n      ctx.save();\n      ctx.setTransform(matrix[0], matrix[1], matrix[4], matrix[5], matrix[12], matrix[13]);\n      ctx.beginPath();\n      ctx.moveTo(-tex.frameX + dx, -tex.frameY + dy);\n      ctx.lineTo(-tex.frameX + tex.width + dx, -tex.frameY + dy);\n      ctx.lineTo(-tex.frameX + tex.width + dx,  -tex.frameY + tex.height + dy);\n      ctx.lineTo(-tex.frameX + dx,  -tex.frameY + tex.height + dy);\n      ctx.closePath();\n      ctx.clip();\n      ctx.drawImage(tex.source, -tex.x - tex.frameX + dx, -tex.y - tex.frameY + dy);\n      ctx.restore();\n    }\n    // 恢复模式\n    if(blendMode) {\n      ctx.globalCompositeOperation = 'source-over';\n    }\n    ctx.globalAlpha = opacity;\n  });\n}\n\nfunction canvasTriangle(ctx, matrixEvent, slot, skinHash, texHash, dx, dy) {\n  slot.forEach(item => {\n    let { name, displayIndex = 0, displayIndexA = displayIndex } = item;\n    // 插槽隐藏不显示\n    if(displayIndexA < 0) {\n      return;\n    }\n    let skin = skinHash[name];\n    let displayTarget = skin.display[displayIndexA];\n    let tex = texHash[displayTarget.path || displayTarget.name];\n    // 网格类型\n    if(displayTarget.type === 'mesh') {\n      let { verticesList, triangleList } = displayTarget;\n      triangleList.forEach(item => {\n        let { matrix, scaleCoords } = item;\n        matrix = math.matrix.multiply(matrixEvent, matrix);\n        ctx.setTransform(matrix[0], matrix[1], matrix[4], matrix[5], matrix[12], matrix[13]);\n        ctx.strokeStyle = '#39F';\n        ctx.lineWidth = 1;\n        ctx.beginPath();\n        ctx.moveTo(scaleCoords[0][0] + dx, scaleCoords[0][1] + dy);\n        ctx.lineTo(scaleCoords[1][0] + dx, scaleCoords[1][1] + dy);\n        ctx.lineTo(scaleCoords[2][0] + dx, scaleCoords[2][1] + dy);\n        ctx.closePath();\n        ctx.stroke();\n      });\n      verticesList.forEach(item => {\n        let { matrix, matrixF } = item;\n        matrix = math.matrix.multiply(matrixEvent, matrixF || matrix);\n        ctx.setTransform(matrix[0], matrix[1], matrix[4], matrix[5], matrix[12], matrix[13]);\n        ctx.fillStyle = '#0D6';\n        ctx.beginPath();\n        ctx.arc(dx, dy, 4, 0, Math.PI * 2);\n        ctx.closePath();\n        ctx.fill();\n      });\n    }\n    // 默认图片类型\n    else {\n      let { matrix } = displayTarget;\n      matrix = math.matrix.multiply(matrixEvent, matrix);\n      ctx.save();\n      ctx.setTransform(matrix[0], matrix[1], matrix[4], matrix[5], matrix[12], matrix[13]);\n      ctx.strokeStyle = '#F90';\n      ctx.lineWidth = 1;\n      ctx.beginPath();\n      ctx.moveTo(dx, dy);\n      ctx.lineTo(tex.frameWidth + dx, dy);\n      ctx.lineTo(tex.frameWidth + dx, tex.frameHeight + dy);\n      ctx.lineTo(dx, tex.frameHeight + dy);\n      ctx.closePath();\n      ctx.stroke();\n      ctx.strokeStyle = 'rgba(172, 0, 172, 0.5)';\n      ctx.beginPath();\n      ctx.moveTo(-tex.frameX + dx, -tex.frameY + dy);\n      ctx.lineTo(-tex.frameX + tex.width + dx, -tex.frameY + dy);\n      ctx.lineTo(-tex.frameX + tex.width + dx,  -tex.frameY + tex.height + dy);\n      ctx.lineTo(-tex.frameX + dx,  -tex.frameY + tex.height + dy);\n      ctx.closePath();\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n}\n\nexport default {\n  canvasSlot,\n  canvasTriangle,\n  canvasBone,\n};\n","import karas from 'karas';\nimport parser from './parser';\nimport util from './util';\nimport render from './render';\nimport { version } from '../package.json';\n\nlet uuid = 0;\n\nconst SHARE_CACHE = {};\nconst { STYLE_KEY: {\n  DISPLAY,\n  VISIBILITY,\n  OPACITY,\n  MARGIN_LEFT,\n  PADDING_LEFT,\n  BORDER_LEFT_WIDTH,\n  MARGIN_TOP,\n  PADDING_TOP,\n  BORDER_TOP_WIDTH,\n  WIDTH,\n  HEIGHT,\n} } = karas.enums;\n\nclass Dragonbones extends karas.Component {\n  componentDidMount() {\n    this.init();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    let props = this.props;\n    if(nextProps !== props) {\n      if(nextProps.ske !== props.ske\n        || nextProps.tex !== props.tex\n        || nextProps.enlarge !== props.enlarge\n        || nextProps.enlargeSlot !== props.enlargeSlot\n          && !karas.util.equal(nextProps.enlargeSlot, props.enlargeSlot)) {\n        this.init();\n      }\n      else {\n        if(nextProps.armature !== props.armature) {\n          this.armature(nextProps.armature, props);\n        }\n        else {\n          if(nextProps.action !== props.action) {\n            this.action(nextProps.action);\n          }\n          if(nextProps.imagePath !== props.imagePath) {\n            this.changeImage(nextProps.imagePath);\n          }\n          if(nextProps.playbackRate !== props.playbackRate && this.animation) {\n            this.animation.playbackRate = nextProps.playbackRate;\n          }\n          if(nextProps.fps !== props.fps && this.animation) {\n            this.animation.fps = nextProps.fps;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  init() {\n    let props = this.props;\n    let { ske, tex } = props;\n    let total = 0;\n    if(karas.util.isString(ske)) {\n      total++;\n      props.loadJson(ske, (res) => {\n        total--;\n        ske = res;\n        this.build(total, ske, tex);\n      });\n    }\n    if(karas.util.isString(tex)) {\n      total++;\n      props.loadJson(tex, (res) => {\n        total--;\n        tex = res;\n        this.build(total, ske, tex);\n      });\n    }\n    this.build(total, ske, tex);\n  }\n\n  build(count, ske, tex) {\n    if(count !== 0) {\n      return;\n    }\n    let props = this.props;\n    this.staticCacheFlag = !!props.staticCache;\n    this.staticCacheHash = {};\n    ske.uuid = ske.uuid || ++uuid;\n    if(ske.version !== '5.5') {\n      throw new Error('The version' + ske.version + ' does not match 5.5');\n    }\n    this.ske = karas.util.clone(ske);\n    this.tex = karas.util.clone(tex);\n    parser.parseAndLoadTex(this.tex, (texHash) => {\n      this.texHash = texHash;\n      this.armature(props.armature, props);\n    }, props);\n  }\n\n  armature(name, options = {}) {\n    let op = karas.util.extend({}, options);\n    op.armature = name;\n    let {\n      name: n,\n      bone,\n      boneHash,\n      slot,\n      slotHash,\n      skin,\n      skinHash,\n      animationHash,\n      defaultActions,\n      canvas,\n    } = parser.parseSke(this.ske, this.texHash, op);\n    this.armatureName = n;\n    this.bone = bone;\n    this.boneHash = boneHash;\n    this.slot = slot;\n    this.slotHash = slotHash;\n    this.skin = skin;\n    this.skinHash = skinHash;\n    this.animationHash = animationHash;\n    this.canvas = canvas;\n\n    let defaultAction;\n    if(options.action && animationHash[options.action]) {\n      let key = options.pause ? 'gotoAndStop' : 'gotoAndPlay';\n      defaultAction = {\n        [key]: options.action,\n      };\n    }\n    // 不存在或没有指定使用ske文件的第一个\n    else if(defaultActions && defaultActions.length) {\n      defaultAction = defaultActions[0];\n    }\n    if(defaultAction) {\n      let a = this.action(defaultAction.gotoAndPlay || defaultAction.gotoAndStop);\n      if(options.pause || defaultAction.gotoAndStop) {\n        a.gotoAndStop(0);\n      }\n      return a;\n    }\n    else {\n      console.warn('No action data');\n    }\n  }\n\n  action(name) {\n    this.actionName = name;\n    let animation = this.animationHash[name];\n    if(!animation) {\n      throw new Error('Can not find animation: ' + name);\n    }\n    // 清除上次动画的影响\n    if(this.animation) {\n      util.clearAnimation(this.bone, this.slot);\n    }\n    let { boneAnimationList, slotAnimationList, ffdAnimationHash, options } = animation;\n    if(!karas.util.isNil(this.props.playbackRate)) {\n      options.playbackRate = this.props.playbackRate;\n    }\n    if(!karas.util.isNil(this.props.fps)) {\n      options.fps = this.props.fps;\n    }\n    // 隐藏节点模拟一段不展示的动画，带动每次渲染\n    let fake = this.ref.fake;\n    fake.clearAnimate();\n    let a = this.animation = fake.animate([\n      {\n        backgroundColor: '#000',\n      },\n      {\n        backgroundColor: '#FFF',\n      },\n    ], options);\n    // 劫持隐藏节点渲染，因本身display:none可以不执行原本逻辑，计算并渲染骨骼动画\n    let self = this;\n    let computedStyle = self.shadowRoot.computedStyle;\n    let root = self.root;\n    let width = root.width;\n    let height = root.height;\n    fake.render = function(renderMode, lv, ctx, cache, dx = 0, dy = 0) {\n      if(computedStyle[DISPLAY] === 'none'\n        || computedStyle[VISIBILITY] === 'hidden'\n        || computedStyle[OPACITY] === 0) {\n        return;\n      }\n      // 开启了静态帧优化优先使用缓存\n      let offScreen;\n      let sourceCtx;\n      let staticKey;\n      if(self.staticCacheFlag) {\n        offScreen = karas.inject.getCacheCanvas(width, height);\n        sourceCtx = ctx;\n        ctx = offScreen.ctx;\n        let frame = Math.floor(a.currentTime * (self.fps || 60) / 1000);\n        // ske文件uuid + 骨架名 + 动画名 + 帧数\n        staticKey = self.ske.uuid + '>' + self.armatureName + '>' + self.actionName + '>' + frame;\n        let ca = self.staticCacheHash[staticKey];\n        if(ca) {\n          ctx.putImageData(ca, 0, 0);\n          offScreen.draw(ctx);\n          sourceCtx.drawImage(offScreen.canvas, 0, 0);\n          ctx.clearRect(0, 0, width, height);\n          return;\n        }\n      }\n      let { bone, slot, boneHash, slotHash, skinHash, texHash } = self;\n      // 动态情况缓存当前帧，为多个实例节省计算\n      let dynamicKey = self.ske.uuid + '>' + self.armatureName + '>' + self.actionName;\n      let dynamicCache = SHARE_CACHE[dynamicKey];\n      if(self.props.share && dynamicCache && dynamicCache.currentTime === a.currentTime) {\n        bone = dynamicCache.bone;\n        slot = dynamicCache.slot;\n        skinHash = dynamicCache.skinHash;\n      }\n      else {\n        let offset = Math.min(1, a.currentTime / a.duration);\n        util.animateBoneMatrix(boneAnimationList, offset, boneHash);\n        util.mergeBoneMatrix(bone[0]);\n        util.animateSlot(slotAnimationList, offset, slotHash);\n        util.calSlot(offset, slot, skinHash, bone, boneHash, texHash, ffdAnimationHash);\n        SHARE_CACHE[dynamicKey] = {\n          bone,\n          slot,\n          skinHash,\n          currentTime: a.currentTime,\n        };\n      }\n      if(renderMode === karas.mode.CANVAS) {\n        let { matrixEvent } = self.shadowRoot;\n        // 先在dom中居中\n        let left = computedStyle[MARGIN_LEFT] + computedStyle[BORDER_LEFT_WIDTH] + computedStyle[PADDING_LEFT] + computedStyle[WIDTH] * 0.5;\n        let top = computedStyle[MARGIN_TOP] + computedStyle[BORDER_TOP_WIDTH] + computedStyle[PADDING_TOP] + computedStyle[HEIGHT] * 0.5;\n        let t = karas.math.matrix.identity();\n        t[12] = left;\n        t[13] = top;\n        // 画布居中\n        if(self.canvas) {\n          let dx = self.canvas.x || 0;\n          let dy = self.canvas.y || 0;\n          t[12] -= dx * 0.5;\n          t[13] -= dy * 0.5;\n          // 适配尺寸\n          if(self.props.fitSize) {\n            let sx = computedStyle.width / self.canvas.width;\n            let sy = computedStyle.height / self.canvas.height;\n            t[0] = sx;\n            t[5] = sy;\n          }\n        }\n        matrixEvent = karas.math.matrix.multiply(matrixEvent, t);\n        render.canvasSlot(ctx, matrixEvent, slot, skinHash, texHash, dx, dy);\n        // debug模式\n        if(self.props.debug) {\n          render.canvasTriangle(ctx, matrixEvent, slot, skinHash, texHash, dx, dy);\n          render.canvasBone(ctx, matrixEvent, bone[0], dx, dy);\n        }\n        else {\n          if(self.props.debugBone) {\n            render.canvasBone(ctx, matrixEvent, bone[0], dx, dy);\n          }\n          if(self.props.debugSlot) {\n            render.canvasTriangle(ctx, matrixEvent, slot, skinHash, texHash, dx, dy);\n          }\n        }\n        // 静态帧优化将离屏内容绘入\n        if(self.staticCacheFlag) {\n          offScreen.draw(ctx);\n          sourceCtx.drawImage(offScreen.canvas, 0, 0);\n          self.staticCacheHash[staticKey] = ctx.getImageData(0, 0, width, height);\n          ctx.clearRect(0, 0, width, height);\n        }\n      }\n    };\n    return a;\n  }\n\n  changeImage(src) {\n    if(src) {\n      let tex = this.tex;\n      tex.imagePath = src;\n      let texHash = this.texHash;\n      karas.inject.measureImg(src, function() {\n        tex.SubTexture.forEach(item => {\n          let { name } = item;\n          texHash[name].source = karas.inject.IMG[src].source;\n        });\n      });\n    }\n  }\n\n  setStaticCache(flag) {\n    this.staticCacheFlag = !!flag;\n  }\n\n  cleanStaticCache() {\n    this.staticCacheHash = {};\n  }\n\n  render() {\n    return <div>\n      <$polyline ref=\"fake\"/>\n    </div>;\n  }\n}\n\nDragonbones.version = version;\n\nexport default Dragonbones;\n"],"names":["inject","karas","math","parseAndLoadTex","tex","cb","props","src","imagePath","texHash","measureImg","SubTexture","forEach","item","name","x","y","width","height","frameX","frameY","frameWidth","frameHeight","source","IMG","parseSke","ske","globalFrameRate","frameRate","armature","currentArmature","i","len","length","Error","console","warn","bone","slot","skin","animation","defaultActions","canvas","boneHash","parseBone","slotHash","parseSlot","skinHash","parseSkin","animationHash","parseAnimation","data","hash","root","children","parent","transform","push","index","matrix","identity","m","multiply","skX","d","geom","d2r","sin","Math","cos","scX","undefined","scY","slotName","display","type","path","vertices","triangles","uvs","weights","bonePose","weightHash","bonePoseHash","verticesIndex","num","list","j","value","slice","coords","calPoint","pose","verticesList","res","weightList","weight","x0","y0","x1","y1","dx","dy","theta","atan","abs","PI","rotate","translate","triangleList","i1","i2","i3","p1x","p1y","p2x","p2y","p3x","p3y","x2","y2","x3","y3","triangleIncentre","px","parseFloat","enlarge","isNaN","enlargeSlot","hasOwnProperty","n","scale","triangleScale","t","sx1","sy1","sx2","sy2","sx3","sy3","round","indexList","scaleCoords","a","b","c","sqrt","pow","duration","playTimes","ffd","options","iterations","Infinity","fill","boneAnimationList","map","translateFrame","rotateFrame","scaleFrame","originTransform","offsetSum","last","frame","easingFn","getEasing","offset","translateX","translateY","rotateZ","dz","scaleX","scaleY","slotAnimationList","displayFrame","colorFrame","aM","da","ffdAnimationHash","ffdAnimationList","os","unshift","verticesLast","dv","max","curve","animate","easing","cubicBezier","animateBoneMatrix","animationList","frames","binarySearch","current","next","total","percent","matrixA","middle","min","mergeBoneMatrix","currentMatrix","mergeChildBoneMatrix","parentMatrix","animateSlot","displayIndexA","colorA","calSlot","displayIndex","displayTarget","boneMatrix","parentBoneMatrix","offsetMatrix","matrixF","target","concat","tar","exchangeOrder","source1","target1","clearAnimation","canvasBone","ctx","matrixEvent","setTransform","beginPath","strokeStyle","lineWidth","arc","moveTo","lineTo","closePath","stroke","canvasSlot","blendMode","color","globalCompositeOperation","opacity","globalAlpha","save","clip","drawImage","restore","canvasTriangle","fillStyle","uuid","SHARE_CACHE","enums","STYLE_KEY","DISPLAY","VISIBILITY","OPACITY","MARGIN_LEFT","PADDING_LEFT","BORDER_LEFT_WIDTH","MARGIN_TOP","PADDING_TOP","BORDER_TOP_WIDTH","WIDTH","HEIGHT","Dragonbones","init","nextProps","util","equal","action","changeImage","playbackRate","fps","isString","loadJson","build","count","staticCacheFlag","staticCache","staticCacheHash","version","clone","parser","op","extend","armatureName","defaultAction","key","pause","gotoAndPlay","gotoAndStop","actionName","isNil","fake","ref","clearAnimate","backgroundColor","self","computedStyle","shadowRoot","render","renderMode","lv","cache","offScreen","sourceCtx","staticKey","getCacheCanvas","floor","currentTime","ca","putImageData","draw","clearRect","dynamicKey","dynamicCache","share","mode","CANVAS","left","top","fitSize","sx","sy","debug","debugBone","debugSlot","getImageData","flag","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEQA,SAAiBC,MAAjBD;IAAQE,OAASD,MAATC;;AAEhB,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,EAA9B,EAA8C;AAAA,MAAZC,KAAY,uEAAJ,EAAI;AAC5C,MAAIC,GAAG,GAAGD,KAAK,CAACE,SAAN,IAAmBJ,GAAG,CAACI,SAAjC;AACA,MAAIC,OAAO,GAAG,EAAd;AACAT,EAAAA,MAAM,CAACU,UAAP,CAAkBH,GAAlB,EAAuB,YAAW;AAChCH,IAAAA,GAAG,CAACO,UAAJ,CAAeC,OAAf,CAAuB,UAAAC,IAAI,EAAI;AAAA,UACvBC,IADuB,GACyED,IADzE,CACvBC,IADuB;AAAA,UACjBC,CADiB,GACyEF,IADzE,CACjBE,CADiB;AAAA,UACdC,CADc,GACyEH,IADzE,CACdG,CADc;AAAA,UACXC,KADW,GACyEJ,IADzE,CACXI,KADW;AAAA,UACJC,MADI,GACyEL,IADzE,CACJK,MADI;AAAA,yBACyEL,IADzE,CACIM,MADJ;AAAA,UACIA,MADJ,6BACa,CADb;AAAA,yBACyEN,IADzE,CACgBO,MADhB;AAAA,UACgBA,MADhB,6BACyB,CADzB;AAAA,6BACyEP,IADzE,CAC4BQ,UAD5B;AAAA,UAC4BA,UAD5B,iCACyCJ,KADzC;AAAA,8BACyEJ,IADzE,CACgDS,WADhD;AAAA,UACgDA,WADhD,kCAC8DJ,MAD9D;AAE7BT,MAAAA,OAAO,CAACK,IAAD,CAAP,GAAgB;AACdA,QAAAA,IAAI,EAAJA,IADc;AAEdC,QAAAA,CAAC,EAADA,CAFc;AAGdC,QAAAA,CAAC,EAADA,CAHc;AAIdC,QAAAA,KAAK,EAALA,KAJc;AAKdC,QAAAA,MAAM,EAANA,MALc;AAMdC,QAAAA,MAAM,EAANA,MANc;AAOdC,QAAAA,MAAM,EAANA,MAPc;AAQdC,QAAAA,UAAU,EAAVA,UARc;AASdC,QAAAA,WAAW,EAAXA,WATc;AAUdC,QAAAA,MAAM,EAAEvB,MAAM,CAACwB,GAAP,CAAWjB,GAAX,EAAgBgB;AAVV,OAAhB;AAYD,KAdD;AAeAlB,IAAAA,EAAE,CAACI,OAAD,CAAF;AACD,GAjBD;AAkBD;;AAED,SAASgB,QAAT,CAAkBC,GAAlB,EAAuBjB,OAAvB,EAA4C;AAAA,MAAZH,KAAY,uEAAJ,EAAI;AAAA,MAE7BqB,eAF6B,GAItCD,GAJsC,CAExCE,SAFwC;AAAA,MAGxCC,QAHwC,GAItCH,GAJsC,CAGxCG,QAHwC;AAK1C,MAAIC,eAAe,GAAGD,QAAQ,CAAC,CAAD,CAA9B;;AACA,MAAGvB,KAAK,CAACuB,QAAT,EAAmB;AACjB,SAAI,IAAIE,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGH,QAAQ,CAACI,MAA9B,EAAsCF,CAAC,GAAGC,GAA1C,EAA+CD,CAAC,EAAhD,EAAoD;AAClD,UAAIlB,IAAI,GAAGgB,QAAQ,CAACE,CAAD,CAAnB;;AACA,UAAGlB,IAAI,CAACC,IAAL,KAAcR,KAAK,CAACuB,QAAvB,EAAiC;AAC/BC,QAAAA,eAAe,GAAGjB,IAAlB;AACA;AACD;AACF;;AACD,QAAG,CAACiB,eAAJ,EAAqB;AACnB,YAAM,IAAII,KAAJ,CAAU,4BAA4B5B,KAAK,CAACuB,QAA5C,CAAN;AACD;AACF;;AACD,MAAG,CAACC,eAAJ,EAAqB;AACnBK,IAAAA,OAAO,CAACC,IAAR,CAAa,kBAAb;AACA;AACD;;AArByC,yBA+BtCN,eA/BsC;AAAA,MAuBxChB,IAvBwC,oBAuBxCA,IAvBwC;AAAA,MAwBxCuB,IAxBwC,oBAwBxCA,IAxBwC;AAAA,MAyBxCC,IAzBwC,oBAyBxCA,IAzBwC;AAAA,MA0BxCC,IA1BwC,oBA0BxCA,IA1BwC;AAAA,MA2BxCX,SA3BwC,oBA2BxCA,SA3BwC;AAAA,MA4BxCY,SA5BwC,oBA4BxCA,SA5BwC;AAAA,MA6BxCC,cA7BwC,oBA6BxCA,cA7BwC;AAAA,MA8BxCC,MA9BwC,oBA8BxCA,MA9BwC;AAgC1C,MAAIC,QAAQ,GAAGC,SAAS,CAACP,IAAD,CAAxB;AACA,MAAIQ,QAAQ,GAAGC,SAAS,CAACR,IAAD,CAAxB;AACA,MAAIS,QAAQ,GAAGC,SAAS,CAACT,IAAD,EAAO9B,OAAP,EAAgBH,KAAhB,CAAxB;AACA,MAAI2C,aAAa,GAAGC,cAAc,CAACV,SAAD,EAAYZ,SAAS,IAAID,eAAb,IAAgC,EAA5C,EAAgDgB,QAAhD,CAAlC;AACA,SAAO;AACL7B,IAAAA,IAAI,EAAJA,IADK;AAELuB,IAAAA,IAAI,EAAJA,IAFK;AAGLM,IAAAA,QAAQ,EAARA,QAHK;AAILL,IAAAA,IAAI,EAAJA,IAJK;AAKLO,IAAAA,QAAQ,EAARA,QALK;AAMLN,IAAAA,IAAI,EAAEA,IAAI,CAAC,CAAD,CAAJ,CAAQD,IANT;AAOLS,IAAAA,QAAQ,EAARA,QAPK;AAQLE,IAAAA,aAAa,EAAbA,aARK;AASLR,IAAAA,cAAc,EAAdA,cATK;AAULC,IAAAA,MAAM,EAANA;AAVK,GAAP;AAYD;;AAED,SAASI,SAAT,CAAmBK,IAAnB,EAAyB;AACvB,MAAIC,IAAI,GAAG,EAAX;AACAD,EAAAA,IAAI,CAACvC,OAAL,CAAa,UAAAC,IAAI,EAAI;AACnBuC,IAAAA,IAAI,CAACvC,IAAI,CAACC,IAAN,CAAJ,GAAkBD,IAAlB;AACD,GAFD;AAGA,SAAOuC,IAAP;AACD;;AAED,SAASR,SAAT,CAAmBO,IAAnB,EAAyB;AACvB,MAAIC,IAAI,GAAG,EAAX,CADuB;;AAGvB,MAAIC,IAAI,GAAGF,IAAI,CAAC,CAAD,CAAf;AACAE,EAAAA,IAAI,CAACC,QAAL,GAAgB,EAAhB;AACAF,EAAAA,IAAI,CAACC,IAAI,CAACvC,IAAN,CAAJ,GAAkBuC,IAAlB;AACAF,EAAAA,IAAI,CAACvC,OAAL,CAAa,UAACC,IAAD,EAAOkB,CAAP,EAAa;AAAA,QAClBjB,IADkB,GACeD,IADf,CAClBC,IADkB;AAAA,QACZyC,MADY,GACe1C,IADf,CACZ0C,MADY;AAAA,0BACe1C,IADf,CACJ2C,SADI;AAAA,QACJA,SADI,gCACQ,EADR;;AAExB,QAAGD,MAAH,EAAW;AACTH,MAAAA,IAAI,CAACG,MAAD,CAAJ,CAAaD,QAAb,CAAsBG,IAAtB,CAA2B5C,IAA3B;AACD;;AACDuC,IAAAA,IAAI,CAACtC,IAAD,CAAJ,GAAaD,IAAb;AACAA,IAAAA,IAAI,CAACyC,QAAL,GAAgB,EAAhB;AACAzC,IAAAA,IAAI,CAAC6C,KAAL,GAAa3B,CAAb,CAPwB;;AASxB,QAAI4B,MAAM,GAAGzD,IAAI,CAACyD,MAAL,CAAYC,QAAZ,EAAb;;AACA,QAAGJ,SAAS,CAACzC,CAAV,IAAeyC,SAAS,CAACxC,CAA5B,EAA+B;AAC7B,UAAI6C,CAAC,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqCL,SAAS,CAACzC,CAAV,IAAe,CAApD,EAAuDyC,SAAS,CAACxC,CAAV,IAAe,CAAtE,EAAyE,CAAzE,EAA4E,CAA5E,CAAR;AACA2C,MAAAA,MAAM,GAAGzD,IAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBH,MAArB,EAA6BE,CAA7B,CAAT;AACD;;AACD,QAAGL,SAAS,CAACO,GAAb,EAAkB;AAChB,UAAIC,CAAC,GAAG9D,IAAI,CAAC+D,IAAL,CAAUC,GAAV,CAAcV,SAAS,CAACO,GAAxB,CAAR;AACA,UAAII,GAAG,GAAGC,IAAI,CAACD,GAAL,CAASH,CAAT,CAAV;AACA,UAAIK,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASL,CAAT,CAAV;AACA,UAAIH,EAAC,GAAG,CAACQ,GAAD,EAAMF,GAAN,EAAW,CAAX,EAAc,CAAd,EAAiB,CAACA,GAAlB,EAAuBE,GAAvB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,CAAvD,CAAR;AACAV,MAAAA,MAAM,GAAGzD,IAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBH,MAArB,EAA6BE,EAA7B,CAAT;AACD;;AACD,QAAGL,SAAS,CAACc,GAAV,KAAkBC,SAAlB,IAA+Bf,SAAS,CAACgB,GAAV,KAAkBD,SAApD,EAA+D;AAC7D,UAAIV,GAAC,GAAG,CAACL,SAAS,CAACc,GAAV,KAAkBC,SAAlB,GAA8B,CAA9B,GAAkCf,SAAS,CAACc,GAA7C,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,CAAxD,EAA2D,CAA3D,EAA8Dd,SAAS,CAACgB,GAAV,KAAkBD,SAAlB,GAA8B,CAA9B,GAAkCf,SAAS,CAACgB,GAA1G,EAA+G,CAA/G,EAAkH,CAAlH,EAAqH,CAArH,EAAwH,CAAxH,EAA2H,CAA3H,EAA8H,CAA9H,EAAiI,CAAjI,EAAoI,CAApI,EAAuI,CAAvI,EAA0I,CAA1I,CAAR;AACAb,MAAAA,MAAM,GAAG1D,KAAK,CAACC,IAAN,CAAWyD,MAAX,CAAkBG,QAAlB,CAA2BH,MAA3B,EAAmCE,GAAnC,CAAT;AACD;;AACDhD,IAAAA,IAAI,CAAC8C,MAAL,GAAcA,MAAd;AACD,GA1BD;AA2BA,SAAOP,IAAP;AACD;;AAED,SAASJ,SAAT,CAAmBG,IAAnB,EAAyB1C,OAAzB,EAAkCH,KAAlC,EAAyC;AACvC,MAAI8C,IAAI,GAAG,EAAX;AACAD,EAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQb,IAAR,CAAa1B,OAAb,CAAqB,UAAAC,IAAI,EAAI;AAAA,QACf4D,QADe,GACO5D,IADP,CACrBC,IADqB;AAAA,QACL4D,OADK,GACO7D,IADP,CACL6D,OADK;AAE3BtB,IAAAA,IAAI,CAACqB,QAAD,CAAJ,GAAiB5D,IAAjB;AACA6D,IAAAA,OAAO,CAAC9D,OAAR,CAAgB,UAAAC,IAAI,EAAI;AAAA,UAChB8D,IADgB,GACK9D,IADL,CAChB8D,IADgB;AAAA,UACV7D,IADU,GACKD,IADL,CACVC,IADU;AAAA,UACJ8D,IADI,GACK/D,IADL,CACJ+D,IADI;;AAGtB,UAAGD,IAAI,KAAK,MAAZ,EAAoB;AAAA;AAAA,cACZE,QADY,GACoChE,IADpC,CACZgE,QADY;AAAA,cACFC,SADE,GACoCjE,IADpC,CACFiE,SADE;AAAA,cACSC,GADT,GACoClE,IADpC,CACSkE,GADT;AAAA,cACcC,OADd,GACoCnE,IADpC,CACcmE,OADd;AAAA,cACuBC,QADvB,GACoCpE,IADpC,CACuBoE,QADvB;AAElB,cAAIC,UAAJ;AACA,cAAIC,YAAJ,CAHkB;AAKlB;;AACA,cAAGH,OAAH,EAAY;AACV;AACAE,YAAAA,UAAU,GAAG,EAAb;;AACA,iBAAI,IAAInD,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGgD,OAAO,CAAC/C,MAAzB,EAAiCmD,aAAa,GAAG,CAArD,EAAwDrD,CAAC,GAAGC,GAA5D,EAAiED,CAAC,EAAlE,EAAsE;AACpE,kBAAIsD,GAAG,GAAGL,OAAO,CAACjD,CAAD,CAAjB;AACA,kBAAIuD,IAAI,GAAG,EAAX;;AACA,mBAAI,IAAIC,CAAC,GAAGxD,CAAC,GAAG,CAAhB,EAAmBwD,CAAC,GAAGxD,CAAC,GAAG,CAAJ,GAAQsD,GAAG,GAAG,CAArC,EAAwCE,CAAC,IAAI,CAA7C,EAAgD;AAC9C,oBAAI7B,KAAK,GAAGsB,OAAO,CAACO,CAAD,CAAnB;AACA,oBAAIC,KAAK,GAAGR,OAAO,CAACO,CAAC,GAAG,CAAL,CAAnB;AACAD,gBAAAA,IAAI,CAAC7B,IAAL,CAAU;AACRC,kBAAAA,KAAK,EAALA,KADQ;AAER8B,kBAAAA,KAAK,EAALA;AAFQ,iBAAV;AAID;;AACDN,cAAAA,UAAU,CAACE,aAAa,EAAd,CAAV,GAA8BE,IAA9B;AACAvD,cAAAA,CAAC,IAAIsD,GAAG,GAAG,CAAX;AACD,aAhBS;;;AAkBVF,YAAAA,YAAY,GAAG,EAAf;;AACA,iBAAI,IAAIpD,EAAC,GAAG,CAAR,EAAWC,IAAG,GAAGiD,QAAQ,CAAChD,MAA9B,EAAsCF,EAAC,GAAGC,IAA1C,EAA+CD,EAAC,IAAI,CAApD,EAAuD;AACrD,kBAAI2B,MAAK,GAAGuB,QAAQ,CAAClD,EAAD,CAApB;AACA,kBAAI8B,CAAC,GAAGoB,QAAQ,CAACQ,KAAT,CAAe1D,EAAC,GAAG,CAAnB,EAAsBA,EAAC,GAAG,CAA1B,CAAR;AACA,kBAAI4B,MAAM,GAAG,CAACE,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAa,CAAb,EAAgB,CAAhB,EAAmBA,CAAC,CAAC,CAAD,CAApB,EAAyBA,CAAC,CAAC,CAAD,CAA1B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiDA,CAAC,CAAC,CAAD,CAAlD,EAAuDA,CAAC,CAAC,CAAD,CAAxD,EAA6D,CAA7D,EAAgE,CAAhE,CAAb;AACA,kBAAI6B,MAAM,GAAGxF,IAAI,CAACyD,MAAL,CAAYgC,QAAZ,CAAqB,CAAC,CAAD,EAAI,CAAJ,CAArB,EAA6BhC,MAA7B,CAAb;AACAwB,cAAAA,YAAY,CAACzB,MAAD,CAAZ,GAAsB;AACpBgC,gBAAAA,MAAM,EAANA,MADoB;AAEpBE,gBAAAA,IAAI,EAAEjC;AAFc,eAAtB;AAID;AACF,WAnCiB;;;AAqClB,cAAIkC,YAAY,GAAGhF,IAAI,CAACgF,YAAL,GAAoB,EAAvC;;AArCkB,qCAsCV9D,GAtCU,EAsCHC,KAtCG;AAuChB,gBAAI0B,KAAK,GAAG3B,GAAC,IAAI,CAAjB;AACA,gBAAIhB,CAAC,GAAG8D,QAAQ,CAAC9C,GAAD,CAAhB;AACA,gBAAIf,CAAC,GAAG6D,QAAQ,CAAC9C,GAAC,GAAG,CAAL,CAAhB;AACA,gBAAI+D,GAAG,GAAG;AACRpC,cAAAA,KAAK,EAALA,KADQ;AAER3C,cAAAA,CAAC,EAADA,CAFQ;AAGRC,cAAAA,CAAC,EAADA;AAHQ,aAAV;AAKA6E,YAAAA,YAAY,CAACpC,IAAb,CAAkBqC,GAAlB,EA/CgB;;AAiDhB,gBAAGZ,UAAH,EAAe;AACbY,cAAAA,GAAG,CAACC,UAAJ,GAAiB,EAAjB;AACA,kBAAIC,MAAM,GAAGd,UAAU,CAACxB,KAAD,CAAvB;AACAsC,cAAAA,MAAM,CAACpF,OAAP,CAAe,UAAAC,IAAI,EAAI;AAAA,oBACf6C,KADe,GACE7C,IADF,CACf6C,KADe;AAAA,oBACR8B,KADQ,GACE3E,IADF,CACR2E,KADQ;AAAA,0CAEEL,YAAY,CAACzB,KAAD,CAFd;AAAA,oBAEfgC,MAFe,uBAEfA,MAFe;AAAA,oBAEPE,IAFO,uBAEPA,IAFO;;AAAA,6CAIN1F,IAAI,CAACyD,MAAL,CAAYgC,QAAZ,CAAqB,CAAC,CAAD,EAAI,CAAJ,CAArB,EAA6BC,IAA7B,CAJM;AAAA;AAAA,oBAIhBK,EAJgB;AAAA,oBAIZC,EAJY;;AAAA,6CAKNhG,IAAI,CAACyD,MAAL,CAAYgC,QAAZ,CAAqB,CAAC,CAAD,EAAI,CAAJ,CAArB,EAA6BC,IAA7B,CALM;AAAA;AAAA,oBAKhBO,EALgB;AAAA,oBAKZC,EALY;;AAMrB,oBAAIC,EAAE,GAAGF,EAAE,GAAGF,EAAd;AACA,oBAAIK,EAAE,GAAGF,EAAE,GAAGF,EAAd;AACA,oBAAIK,KAAJ,CARqB;;AAUrB,oBAAGF,EAAE,IAAI,CAAN,IAAWC,EAAE,IAAI,CAApB,EAAuB;AACrBC,kBAAAA,KAAK,GAAG,CAACnC,IAAI,CAACoC,IAAL,CAAUpC,IAAI,CAACqC,GAAL,CAASH,EAAE,GAAGD,EAAd,CAAV,CAAT;AACD,iBAFD,MAGK,IAAGA,EAAE,GAAG,CAAL,IAAUC,EAAE,IAAI,CAAnB,EAAsB;AACzBC,kBAAAA,KAAK,GAAG,CAACnC,IAAI,CAACsC,EAAN,GAAWtC,IAAI,CAACoC,IAAL,CAAUpC,IAAI,CAACqC,GAAL,CAASH,EAAE,GAAGD,EAAd,CAAV,CAAnB;AACD,iBAFI,MAGA,IAAGA,EAAE,GAAG,CAAL,IAAUC,EAAE,GAAG,CAAlB,EAAqB;AACxBC,kBAAAA,KAAK,GAAGnC,IAAI,CAACsC,EAAL,GAAUtC,IAAI,CAACoC,IAAL,CAAUpC,IAAI,CAACqC,GAAL,CAASH,EAAE,GAAGD,EAAd,CAAV,CAAlB;AACD,iBAFI,MAGA;AACHE,kBAAAA,KAAK,GAAGnC,IAAI,CAACoC,IAAL,CAAUpC,IAAI,CAACqC,GAAL,CAASH,EAAE,GAAGD,EAAd,CAAV,CAAR;AACD;;AACD,oBAAIM,MAAM,GAAG,CAACvC,IAAI,CAACC,GAAL,CAASkC,KAAT,CAAD,EAAkBnC,IAAI,CAACD,GAAL,CAASoC,KAAT,CAAlB,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAACnC,IAAI,CAACD,GAAL,CAASoC,KAAT,CAA1C,EAA2DnC,IAAI,CAACC,GAAL,CAASkC,KAAT,CAA3D,EAA4E,CAA5E,EAA+E,CAA/E,EAAkF,CAAlF,EAAqF,CAArF,EAAwF,CAAxF,EAA2F,CAA3F,EAA8F,CAA9F,EAAiG,CAAjG,EAAoG,CAApG,EAAuG,CAAvG,CAAb;AACA,oBAAIK,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC7F,CAAC,GAAG2E,MAAM,CAAC,CAAD,CAA/C,EAAoD1E,CAAC,GAAG0E,MAAM,CAAC,CAAD,CAA9D,EAAmE,CAAnE,EAAsE,CAAtE,CAAhB;AACA,oBAAI/B,MAAM,GAAGzD,IAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqB6C,MAArB,EAA6BC,SAA7B,CAAb;AACAd,gBAAAA,GAAG,CAACC,UAAJ,CAAetC,IAAf,CAAoB;AAClBC,kBAAAA,KAAK,EAALA,KADkB;AAElB8B,kBAAAA,KAAK,EAALA,KAFkB;AAGlB7B,kBAAAA,MAAM,EAANA;AAHkB,iBAApB;AAKD,eA9BD;AA+BD;AAnFe;;AAsClB,eAAI,IAAI5B,GAAC,GAAG,CAAR,EAAWC,KAAG,GAAG6C,QAAQ,CAAC5C,MAA9B,EAAsCF,GAAC,GAAGC,KAA1C,EAA+CD,GAAC,IAAI,CAApD,EAAuD;AAAA,kBAA/CA,GAA+C;AA8CtD,WApFiB;;;AAsFlB,cAAI3B,GAAG,GAAGK,OAAO,CAACmE,IAAI,IAAI9D,IAAT,CAAjB;AAtFkB,cAuFZG,KAvFY,GAuFMb,GAvFN,CAuFZa,KAvFY;AAAA,cAuFLC,MAvFK,GAuFMd,GAvFN,CAuFLc,MAvFK;AAwFlB,cAAI2F,YAAY,GAAGhG,IAAI,CAACgG,YAAL,GAAoB,EAAvC;;AACA,eAAI,IAAI9E,GAAC,GAAG,CAAR,EAAWC,KAAG,GAAG8C,SAAS,CAAC7C,MAA/B,EAAuCF,GAAC,GAAGC,KAA3C,EAAgDD,GAAC,IAAI,CAArD,EAAwD;AACtD,gBAAI+E,EAAE,GAAGhC,SAAS,CAAC/C,GAAD,CAAlB;AACA,gBAAIgF,EAAE,GAAGjC,SAAS,CAAC/C,GAAC,GAAG,CAAL,CAAlB;AACA,gBAAIiF,EAAE,GAAGlC,SAAS,CAAC/C,GAAC,GAAG,CAAL,CAAlB,CAHsD;;AAKtD,gBAAIkF,GAAG,GAAGlC,GAAG,CAAC+B,EAAE,GAAG,CAAN,CAAb;AACA,gBAAII,GAAG,GAAGnC,GAAG,CAAC+B,EAAE,GAAG,CAAL,GAAS,CAAV,CAAb;AACA,gBAAIK,GAAG,GAAGpC,GAAG,CAACgC,EAAE,GAAG,CAAN,CAAb;AACA,gBAAIK,GAAG,GAAGrC,GAAG,CAACgC,EAAE,GAAG,CAAL,GAAS,CAAV,CAAb;AACA,gBAAIM,GAAG,GAAGtC,GAAG,CAACiC,EAAE,GAAG,CAAN,CAAb;AACA,gBAAIM,GAAG,GAAGvC,GAAG,CAACiC,EAAE,GAAG,CAAL,GAAS,CAAV,CAAb,CAVsD;;AAYtD,gBAAIb,EAAE,GAAGc,GAAG,GAAGhG,KAAf;AACA,gBAAImF,EAAE,GAAGc,GAAG,GAAGhG,MAAf;AACA,gBAAIqG,EAAE,GAAGJ,GAAG,GAAGlG,KAAf;AACA,gBAAIuG,EAAE,GAAGJ,GAAG,GAAGlG,MAAf;AACA,gBAAIuG,EAAE,GAAGJ,GAAG,GAAGpG,KAAf;AACA,gBAAIyG,EAAE,GAAGJ,GAAG,GAAGpG,MAAf,CAjBsD;;AAAA,wCAmBvChB,IAAI,CAAC+D,IAAL,CAAU0D,gBAAV,CAA2BxB,EAA3B,EAA+BC,EAA/B,EAAmCmB,EAAnC,EAAuCC,EAAvC,EAA2CC,EAA3C,EAA+CC,EAA/C,CAnBuC;AAAA;AAAA,gBAmBjDzB,EAnBiD;AAAA,gBAmB7CC,EAnB6C;;AAoBtD,gBAAI0B,EAAE,GAAGC,UAAU,CAACvH,KAAK,CAACwH,OAAP,CAAnB;;AACA,gBAAGC,KAAK,CAACH,EAAD,CAAR,EAAc;AACZA,cAAAA,EAAE,GAAG,IAAL;AACD,aAvBqD;;;AAyBtD,gBAAGtH,KAAK,CAAC0H,WAAN,IAAqB1H,KAAK,CAAC0H,WAAN,CAAkBC,cAAlB,CAAiCxD,QAAjC,CAAxB,EAAoE;AAClE,kBAAIyD,CAAC,GAAGL,UAAU,CAACvH,KAAK,CAAC0H,WAAN,CAAkBvD,QAAlB,CAAD,CAAlB;;AACA,kBAAGsD,KAAK,CAACG,CAAD,CAAR,EAAa;AACXA,gBAAAA,CAAC,GAAG,IAAJ;AACD;;AACDN,cAAAA,EAAE,GAAGM,CAAL;AACD;;AACD,gBAAIC,KAAK,GAAGP,EAAE,GAAGQ,aAAa,CAACnC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBmB,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCE,EAAjC,CAAhB,GAAuD,CAArE,CAhCsD;;AAkCtD,gBAAI/D,GAAC,GAAG3D,IAAI,CAACyD,MAAL,CAAYC,QAAZ,EAAR;;AACAC,YAAAA,GAAC,CAAC,EAAD,CAAD,GAAQ,CAACoC,EAAT;AACApC,YAAAA,GAAC,CAAC,EAAD,CAAD,GAAQ,CAACqC,EAAT,CApCsD;;AAsCtD,gBAAImC,CAAC,GAAGnI,IAAI,CAACyD,MAAL,CAAYC,QAAZ,EAAR;AACAyE,YAAAA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAD,GAAOF,KAAd;AACAtE,YAAAA,GAAC,GAAG3D,IAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBuE,CAArB,EAAwBxE,GAAxB,CAAJ,CAxCsD;;AA0CtDwE,YAAAA,CAAC,CAAC,EAAD,CAAD,GAAQpC,EAAR;AACAoC,YAAAA,CAAC,CAAC,EAAD,CAAD,GAAQnC,EAAR;AACArC,YAAAA,GAAC,GAAG3D,IAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBuE,CAArB,EAAwBxE,GAAxB,CAAJ,CA5CsD;;AAAA,wCA8CrC3D,IAAI,CAACyD,MAAL,CAAYgC,QAAZ,CAAqB,CAACQ,EAAD,EAAKC,EAAL,CAArB,EAA+BvC,GAA/B,CA9CqC;AAAA;AAAA,gBA8CjDyE,GA9CiD;AAAA,gBA8C5CC,GA9C4C;;AAAA,yCA+CrCrI,IAAI,CAACyD,MAAL,CAAYgC,QAAZ,CAAqB,CAAC4B,EAAD,EAAKC,EAAL,CAArB,EAA+B3D,GAA/B,CA/CqC;AAAA;AAAA,gBA+CjD2E,GA/CiD;AAAA,gBA+C5CC,GA/C4C;;AAAA,yCAgDrCvI,IAAI,CAACyD,MAAL,CAAYgC,QAAZ,CAAqB,CAAC8B,EAAD,EAAKC,EAAL,CAArB,EAA+B7D,GAA/B,CAhDqC;AAAA;AAAA,gBAgDjD6E,GAhDiD;AAAA,gBAgD5CC,GAhD4C;AAkDtD;;;AACA9B,YAAAA,YAAY,CAACpD,IAAb,CAAkB;AAChBC,cAAAA,KAAK,EAAEU,IAAI,CAACwE,KAAL,CAAW7G,GAAC,GAAG,CAAf,CADS;AAEhB8G,cAAAA,SAAS,EAAE,CAAC/B,EAAD,EAAKC,EAAL,EAASC,EAAT,CAFK;AAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtB,cAAAA,MAAM,EAAE,CACN,CAACS,EAAD,EAAKC,EAAL,CADM,EAEN,CAACmB,EAAD,EAAKC,EAAL,CAFM,EAGN,CAACC,EAAD,EAAKC,EAAL,CAHM,CAZQ;AAiBhBS,cAAAA,KAAK,EAALA,KAjBgB;AAkBhBW,cAAAA,WAAW,EAAE,CACX,CAACR,GAAD,EAAMC,GAAN,CADW,EAEX,CAACC,GAAD,EAAMC,GAAN,CAFW,EAGX,CAACC,GAAD,EAAMC,GAAN,CAHW,CAlBG;AAuBhB1H,cAAAA,KAAK,EAALA,KAvBgB;AAwBhBC,cAAAA,MAAM,EAANA;AAxBgB,aAAlB;AA0BD;AAtKiB;AAuKnB;AACF,KA3KD;AA4KD,GA/KD;AAgLA,SAAOkC,IAAP;AACD;AAED;;;;;;;;;;;;;;;AAaA,SAASgF,aAAT,CAAuBnC,EAAvB,EAA2BC,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuCmB,EAAvC,EAA2CC,EAA3C,EAA+CC,EAA/C,EAAmDC,EAAnD,EAA+D;AAAA,MAARE,EAAQ,uEAAH,CAAG;AAC7D;AACA,MAAImB,CAAC,GAAGvB,EAAE,GAAGpB,EAAb;AACA,MAAI4C,CAAC,GAAG7C,EAAE,GAAGoB,EAAb;AACA,MAAI0B,CAAC,GAAG1B,EAAE,GAAGnB,EAAL,GAAUD,EAAE,GAAGqB,EAAvB;AACA,MAAIxD,CAAC,GAAGI,IAAI,CAACqC,GAAL,CAASsC,CAAC,GAAG9C,EAAJ,GAAS+C,CAAC,GAAG9C,EAAb,GAAkB+C,CAA3B,IAAgC7E,IAAI,CAAC8E,IAAL,CAAU9E,IAAI,CAAC+E,GAAL,CAASJ,CAAT,EAAY,CAAZ,IAAiB3E,IAAI,CAAC+E,GAAL,CAASH,CAAT,EAAY,CAAZ,CAA3B,CAAxC;AACA,SAAO,CAAChF,CAAC,GAAG4D,EAAL,IAAW5D,CAAlB;AACD;;AA2BD,SAASd,cAAT,CAAwBC,IAAxB,EAA8BvB,SAA9B,EAAyCe,QAAzC,EAAmD;AACjD,MAAIS,IAAI,GAAG,EAAX;AACAD,EAAAA,IAAI,CAACvC,OAAL,CAAa,UAAAC,IAAI,EAAI;AAAA,QACbuI,QADa,GACiDvI,IADjD,CACbuI,QADa;AAAA,QACHC,SADG,GACiDxI,IADjD,CACHwI,SADG;AAAA,QACQvI,IADR,GACiDD,IADjD,CACQC,IADR;AAAA,qBACiDD,IADjD,CACcwB,IADd;AAAA,QACcA,IADd,2BACqB,EADrB;AAAA,qBACiDxB,IADjD,CACyByB,IADzB;AAAA,QACyBA,IADzB,2BACgC,EADhC;AAAA,oBACiDzB,IADjD,CACoCyI,GADpC;AAAA,QACoCA,GADpC,0BAC0C,EAD1C;AAEnBlG,IAAAA,IAAI,CAACtC,IAAD,CAAJ,GAAaD,IAAb;AACAA,IAAAA,IAAI,CAAC0I,OAAL,GAAe;AACbH,MAAAA,QAAQ,EAAE,OAAOA,QAAP,GAAkBxH,SADf;AAEb4H,MAAAA,UAAU,EAAEH,SAAS,KAAK,CAAd,GAAkBI,QAAlB,GAA6BJ,SAF5B;AAGbK,MAAAA,IAAI,EAAE;AAHO,KAAf,CAHmB;;AASnB7I,IAAAA,IAAI,CAAC8I,iBAAL,GAAyBtH,IAAI,CAACuH,GAAL,CAAS,UAAA/I,IAAI,EAAI;AAAA,UAClCC,IADkC,GACgBD,IADhB,CAClCC,IADkC;AAAA,UAC5B+I,cAD4B,GACgBhJ,IADhB,CAC5BgJ,cAD4B;AAAA,UACZC,WADY,GACgBjJ,IADhB,CACZiJ,WADY;AAAA,UACCC,UADD,GACgBlJ,IADhB,CACCkJ,UADD;AAAA,kCAEEpH,QAAQ,CAAC7B,IAAD,CAFV,CAElC0C,SAFkC;AAAA,UAEvBwG,eAFuB,sCAEL,EAFK;AAGxC,UAAIlE,GAAG,GAAG;AACRhF,QAAAA,IAAI,EAAJA,IADQ;AAERwE,QAAAA,IAAI,EAAE;AAFE,OAAV;;AAIA,UAAGuE,cAAH,EAAmB;AACjB,YAAII,SAAS,GAAG,CAAhB;AACA,YAAIC,IAAJ;AACA,YAAI1E,KAAK,GAAGqE,cAAc,CAACD,GAAf,CAAmB,UAAAO,KAAK,EAAI;AAAA,gCACZA,KADY,CAChCf,QADgC;AAAA,cACtBpF,CADsB,gCAClB,CADkB;AAEtC,cAAIoG,QAAQ,GAAGC,SAAS,CAACF,KAAD,CAAxB;AACA,cAAIG,MAAM,GAAGL,SAAS,GAAGb,QAAzB;AACAa,UAAAA,SAAS,IAAIjG,CAAb;AAJsC,mCAKfgG,eALe,CAKhCjJ,CALgC;AAAA,cAKhCA,CALgC,mCAK5B,CAL4B;AAAA,mCAKfiJ,eALe,CAKzBhJ,CALyB;AAAA,cAKzBA,CALyB,mCAKrB,CALqB;AAMtC,cAAI8E,GAAG,GAAG;AACRnB,YAAAA,IAAI,EAAE,CADE;AAER4F,YAAAA,UAAU,EAAE,CAACJ,KAAK,CAACpJ,CAAN,IAAW,CAAZ,IAAiBA,CAFrB;AAGRyJ,YAAAA,UAAU,EAAE,CAACL,KAAK,CAACnJ,CAAN,IAAW,CAAZ,IAAiBA,CAHrB;AAIRsJ,YAAAA,MAAM,EAANA,MAJQ;AAKRF,YAAAA,QAAQ,EAARA;AALQ,WAAV;;AAOA,cAAGF,IAAH,EAAS;AACPA,YAAAA,IAAI,CAAC7D,EAAL,GAAUP,GAAG,CAACyE,UAAJ,GAAiBL,IAAI,CAACK,UAAhC;AACAL,YAAAA,IAAI,CAAC5D,EAAL,GAAUR,GAAG,CAAC0E,UAAJ,GAAiBN,IAAI,CAACM,UAAhC;AACD;;AACDN,UAAAA,IAAI,GAAGpE,GAAP;AACA,iBAAOA,GAAP;AACD,SAnBW,CAAZ;AAoBAA,QAAAA,GAAG,CAACR,IAAJ,CAAS7B,IAAT,CAAc+B,KAAd;AACD;;AACD,UAAGsE,WAAH,EAAgB;AACd,YAAIG,UAAS,GAAG,CAAhB;;AACA,YAAIC,KAAJ;;AACA,YAAI1E,MAAK,GAAGsE,WAAW,CAACF,GAAZ,CAAgB,UAAAO,KAAK,EAAI;AAAA,iCACTA,KADS,CAC7Bf,QAD6B;AAAA,cACnBpF,CADmB,iCACf,CADe;AAEnC,cAAIoG,QAAQ,GAAGC,SAAS,CAACF,KAAD,CAAxB;AACA,cAAIG,MAAM,GAAGL,UAAS,GAAGb,QAAzB;AACAa,UAAAA,UAAS,IAAIjG,CAAb;AAJmC,qCAKjBgG,eALiB,CAK7BjG,GAL6B;AAAA,cAK7BA,GAL6B,qCAKvB,CALuB;AAMnC,cAAI+B,GAAG,GAAG;AACRnB,YAAAA,IAAI,EAAE,CADE;AAER8F,YAAAA,OAAO,EAAE,CAACN,KAAK,CAACxD,MAAN,IAAgB,CAAjB,IAAsB5C,GAFvB;AAGRuG,YAAAA,MAAM,EAANA,MAHQ;AAIRF,YAAAA,QAAQ,EAARA;AAJQ,WAAV;;AAMA,cAAGF,KAAH,EAAS;AACPA,YAAAA,KAAI,CAACQ,EAAL,GAAU5E,GAAG,CAAC2E,OAAJ,GAAcP,KAAI,CAACO,OAA7B;AACD;;AACDP,UAAAA,KAAI,GAAGpE,GAAP;AACA,iBAAOA,GAAP;AACD,SAjBW,CAAZ;;AAkBAA,QAAAA,GAAG,CAACR,IAAJ,CAAS7B,IAAT,CAAc+B,MAAd;AACD;;AACD,UAAGuE,UAAH,EAAe;AACb,YAAIE,WAAS,GAAG,CAAhB;;AACA,YAAIC,MAAJ;;AACA,YAAI1E,OAAK,GAAGuE,UAAU,CAACH,GAAX,CAAe,UAAAO,KAAK,EAAI;AAAA,iCACRA,KADQ,CAC5Bf,QAD4B;AAAA,cAClBpF,CADkB,iCACd,CADc;AAElC,cAAIoG,QAAQ,GAAGC,SAAS,CAACF,KAAD,CAAxB;AACA,cAAIG,MAAM,GAAGL,WAAS,GAAGb,QAAzB;AACAa,UAAAA,WAAS,IAAIjG,CAAb;AAJkC,qCAKPgG,eALO,CAK5B1F,GAL4B;AAAA,cAK5BA,GAL4B,qCAKtB,CALsB;AAAA,qCAKP0F,eALO,CAKnBxF,GALmB;AAAA,cAKnBA,GALmB,qCAKb,CALa;AAMlC,cAAIsB,GAAG,GAAG;AACRnB,YAAAA,IAAI,EAAE,CADE;AAERgG,YAAAA,MAAM,EAAE,CAACR,KAAK,CAACpJ,CAAN,KAAYwD,SAAZ,GAAwB,CAAxB,GAA4B4F,KAAK,CAACpJ,CAAnC,IAAwCuD,GAFxC;AAGRsG,YAAAA,MAAM,EAAE,CAACT,KAAK,CAACnJ,CAAN,KAAYuD,SAAZ,GAAwB,CAAxB,GAA4B4F,KAAK,CAACnJ,CAAnC,IAAwCwD,GAHxC;AAIR8F,YAAAA,MAAM,EAANA,MAJQ;AAKRF,YAAAA,QAAQ,EAARA;AALQ,WAAV;;AAOA,cAAGF,MAAH,EAAS;AACPA,YAAAA,MAAI,CAAC7D,EAAL,GAAUP,GAAG,CAAC6E,MAAJ,GAAaT,MAAI,CAACS,MAA5B;AACAT,YAAAA,MAAI,CAAC5D,EAAL,GAAUR,GAAG,CAAC8E,MAAJ,GAAaV,MAAI,CAACU,MAA5B;AACD;;AACDV,UAAAA,MAAI,GAAGpE,GAAP;AACA,iBAAOA,GAAP;AACD,SAnBW,CAAZ;;AAoBAA,QAAAA,GAAG,CAACR,IAAJ,CAAS7B,IAAT,CAAc+B,OAAd;AACD;;AACD,aAAOM,GAAP;AACD,KAjFwB,CAAzB,CATmB;;AA4FnBjF,IAAAA,IAAI,CAACgK,iBAAL,GAAyBvI,IAAI,CAACsH,GAAL,CAAS,UAAA/I,IAAI,EAAI;AAAA,UAClCiK,YADkC,GACLjK,IADK,CAClCiK,YADkC;AAAA,UACpBC,UADoB,GACLlK,IADK,CACpBkK,UADoB;;AAExC,UAAGD,YAAH,EAAiB;AACf,YAAIb,SAAS,GAAG,CAAhB;AACAa,QAAAA,YAAY,CAAClK,OAAb,CAAqB,UAAAuJ,KAAK,EAAI;AAAA,iCACFA,KADE,CACtBf,QADsB;AAAA,cACZpF,CADY,iCACR,CADQ;AAE5B,cAAIsG,MAAM,GAAGL,SAAS,GAAGb,QAAzB;AACAa,UAAAA,SAAS,IAAIjG,CAAb;AACAmG,UAAAA,KAAK,CAACG,MAAN,GAAeA,MAAf;AACD,SALD;AAMD;;AACD,UAAGS,UAAH,EAAe;AACb,YAAId,WAAS,GAAG,CAAhB;AACA,YAAIC,IAAJ;AACAa,QAAAA,UAAU,CAACnK,OAAX,CAAmB,UAAAuJ,KAAK,EAAI;AAAA,iCACAA,KADA,CACpBf,QADoB;AAAA,cACVpF,CADU,iCACN,CADM;AAE1BmG,UAAAA,KAAK,CAACC,QAAN,GAAiBC,SAAS,CAACF,KAAD,CAA1B;AACA,cAAIG,MAAM,GAAGL,WAAS,GAAGb,QAAzB;AACAa,UAAAA,WAAS,IAAIjG,CAAb;AACAmG,UAAAA,KAAK,CAACG,MAAN,GAAeA,MAAf,CAL0B;;AAO1B,cAAG,CAACH,KAAK,CAAC3E,KAAV,EAAiB;AACf2E,YAAAA,KAAK,CAAC3E,KAAN,GAAc;AACZwF,cAAAA,EAAE,EAAE;AADQ,aAAd;AAGD;;AACD,cAAGb,KAAK,CAAC3E,KAAN,CAAYwF,EAAZ,KAAmBzG,SAAtB,EAAiC;AAC/B4F,YAAAA,KAAK,CAAC3E,KAAN,CAAYwF,EAAZ,GAAiB,GAAjB;AACD;;AACD,cAAGd,IAAH,EAAS;AACPA,YAAAA,IAAI,CAACe,EAAL,GAAUd,KAAK,CAAC3E,KAAN,CAAYwF,EAAZ,GAAiBd,IAAI,CAAC1E,KAAL,CAAWwF,EAAtC;AACD;;AACDd,UAAAA,IAAI,GAAGC,KAAP;AACD,SAnBD;AAoBD;;AACD,aAAOtJ,IAAP;AACD,KApCwB,CAAzB,CA5FmB;;AAkInB,QAAIqK,gBAAgB,GAAGrK,IAAI,CAACqK,gBAAL,GAAwB,EAA/C;AACArK,IAAAA,IAAI,CAACsK,gBAAL,GAAwB7B,GAAG,CAACM,GAAJ,CAAQ,UAAA/I,IAAI,EAAI;AAAA,UAChCC,IADgC,GACVD,IADU,CAChCC,IADgC;AAAA,UAC1BwB,IAD0B,GACVzB,IADU,CAC1ByB,IAD0B;AAAA,UACpB6H,KADoB,GACVtJ,IADU,CACpBsJ,KADoB;;AAGtCe,MAAAA,gBAAgB,CAAC5I,IAAI,GAAG,GAAP,GAAaxB,IAAd,CAAhB,GAAsCD,IAAtC;;AACA,UAAGsJ,KAAH,EAAU;AACR,YAAIF,SAAS,GAAG,CAAhB;AACA,YAAIC,IAAJ;AACAC,QAAAA,KAAK,CAACvJ,OAAN,CAAc,UAAAuJ,KAAK,EAAI;AAAA,cACftF,QADe,GAC2BsF,KAD3B,CACftF,QADe;AAAA,iCAC2BsF,KAD3B,CACLf,QADK;AAAA,cACKpF,CADL,iCACS,CADT;AAAA,cACoBoH,EADpB,GAC2BjB,KAD3B,CACYG,MADZ;AAErBH,UAAAA,KAAK,CAACC,QAAN,GAAiBC,SAAS,CAACF,KAAD,CAA1B;;AACA,cAAGtF,QAAH,EAAa;AACX,iBAAI,IAAI9C,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGqJ,EAAnB,EAAuBrJ,CAAC,EAAxB,EAA4B;AAC1B8C,cAAAA,QAAQ,CAACwG,OAAT,CAAiB,CAAjB;AACD;AACF;;AACD,cAAIf,MAAM,GAAGL,SAAS,GAAGb,QAAzB;AACAa,UAAAA,SAAS,IAAIjG,CAAb;AACAmG,UAAAA,KAAK,CAACG,MAAN,GAAeA,MAAf,CAVqB;;AAYrB,cAAGJ,IAAH,EAAS;AACP,gBAAIoB,YAAY,GAAGpB,IAAI,CAACrF,QAAxB;;AACA,gBAAGyG,YAAY,IAAIzG,QAAnB,EAA6B;AAC3BqF,cAAAA,IAAI,CAACqB,EAAL,GAAU,EAAV;;AACA,mBAAI,IAAIxJ,GAAC,GAAG,CAAR,EAAWC,GAAG,GAAGoC,IAAI,CAACoH,GAAL,CAASF,YAAY,CAACrJ,MAAtB,EAA8B4C,QAAQ,CAAC5C,MAAvC,CAArB,EAAqEF,GAAC,GAAGC,GAAzE,EAA8ED,GAAC,EAA/E,EAAmF;AACjFmI,gBAAAA,IAAI,CAACqB,EAAL,CAAQ9H,IAAR,CAAa,CAACoB,QAAQ,CAAC9C,GAAD,CAAR,IAAe,CAAhB,KAAsBuJ,YAAY,CAACvJ,GAAD,CAAZ,IAAmB,CAAzC,CAAb;AACD;AACF,aALD,MAMK,IAAGuJ,YAAH,EAAiB;AACpBpB,cAAAA,IAAI,CAACqB,EAAL,GAAUrB,IAAI,CAACrF,QAAL,CAAc+E,GAAd,CAAkB,UAAA1B,CAAC;AAAA,uBAAI,CAACA,CAAL;AAAA,eAAnB,CAAV;AACD,aAFI,MAGA,IAAGrD,QAAH,EAAa;AAChBqF,cAAAA,IAAI,CAACqB,EAAL,GAAU1G,QAAV;AACD;AACF;;AACDqF,UAAAA,IAAI,GAAGC,KAAP;AACD,SA5BD;AA6BD;;AACD,aAAOtJ,IAAP;AACD,KAtCuB,CAAxB;AAuCD,GA1KD;AA2KA,SAAOuC,IAAP;AACD;;AAED,SAASiH,SAAT,CAAmBF,KAAnB,EAA0B;AACxB,MAAIsB,KAAK,GAAGtB,KAAK,CAACsB,KAAlB;;AACA,MAAGA,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAL,KAAa,CAAtB,IAA2BA,KAAK,CAAC,CAAD,CAAL,KAAa,CAAxC,IAA6CA,KAAK,CAAC,CAAD,CAAL,KAAa,CAA1D,IAA+DA,KAAK,CAAC,CAAD,CAAL,KAAa,CAA/E,EAAkF;AAChF,WAAOxL,KAAK,CAACyL,OAAN,CAAcC,MAAd,CAAqBC,WAArB,CAAiCH,KAAK,CAAC,CAAD,CAAtC,EAA2CA,KAAK,CAAC,CAAD,CAAhD,EAAqDA,KAAK,CAAC,CAAD,CAA1D,EAA+DA,KAAK,CAAC,CAAD,CAApE,CAAP;AACD;AACF;;AAED,aAAe;AACbtL,EAAAA,eAAe,EAAfA,eADa;AAEbsB,EAAAA,QAAQ,EAARA;AAFa,CAAf;;IClhBQvB,SAASD,MAATC;AAER;;;;;;;AAMA,SAAS2L,iBAAT,CAA2BC,aAA3B,EAA0CxB,MAA1C,EAAkD3H,QAAlD,EAA4D;AAC1DmJ,EAAAA,aAAa,CAAClL,OAAd,CAAsB,UAAAC,IAAI,EAAI;AAAA,QACtBC,IADsB,GACPD,IADO,CACtBC,IADsB;AAAA,QAChBwE,IADgB,GACPzE,IADO,CAChByE,IADgB;AAE5B,QAAIjD,IAAI,GAAGM,QAAQ,CAAC7B,IAAD,CAAnB,CAF4B;;AAAA,0BAIHuB,IAJG,CAItBmB,SAJsB;AAAA,QAItBA,SAJsB,gCAIV,EAJU;AAK5B,QAAIsC,GAAG,GAAG,EAAV;AACAA,IAAAA,GAAG,CAACyE,UAAJ,GAAiB/G,SAAS,CAACzC,CAAV,IAAe,CAAhC;AACA+E,IAAAA,GAAG,CAAC0E,UAAJ,GAAiBhH,SAAS,CAACxC,CAAV,IAAe,CAAhC;AACA8E,IAAAA,GAAG,CAAC2E,OAAJ,GAAcjH,SAAS,CAACO,GAAV,IAAiB,CAA/B;AACA+B,IAAAA,GAAG,CAAC6E,MAAJ,GAAanH,SAAS,CAACc,GAAV,KAAkBC,SAAlB,GAA8B,CAA9B,GAAkCf,SAAS,CAACc,GAAzD;AACAwB,IAAAA,GAAG,CAAC8E,MAAJ,GAAapH,SAAS,CAACgB,GAAV,KAAkBD,SAAlB,GAA8B,CAA9B,GAAkCf,SAAS,CAACgB,GAAzD,CAV4B;;AAY5Bc,IAAAA,IAAI,CAAC1E,OAAL,CAAa,UAAAmL,MAAM,EAAI;AACrB,UAAI/J,GAAG,GAAG+J,MAAM,CAAC9J,MAAjB;;AACA,UAAG,CAACD,GAAJ,EAAS;AACP;AACD;;AACD,UAAI2C,IAAI,GAAGoH,MAAM,CAAC,CAAD,CAAN,CAAUpH,IAArB;AACA,UAAI5C,CAAC,GAAGiK,YAAY,CAAC,CAAD,EAAIhK,GAAG,GAAG,CAAV,EAAasI,MAAb,EAAqByB,MAArB,CAApB;AACA,UAAIE,OAAO,GAAGF,MAAM,CAAChK,CAAD,CAApB;AACA,UAAIqI,QAAQ,GAAG6B,OAAO,CAAC7B,QAAvB,CARqB;;AAUrB,UAAGrI,CAAC,KAAKC,GAAG,GAAG,CAAf,EAAkB;AAChB,YAAG2C,IAAI,KAAK,CAAZ,EAAe;AACbmB,UAAAA,GAAG,CAACyE,UAAJ,GAAiB0B,OAAO,CAAC1B,UAAzB;AACAzE,UAAAA,GAAG,CAAC0E,UAAJ,GAAiByB,OAAO,CAACzB,UAAzB;AACD,SAHD,MAIK,IAAG7F,IAAI,KAAK,CAAZ,EAAe;AAClBmB,UAAAA,GAAG,CAAC2E,OAAJ,GAAcwB,OAAO,CAACxB,OAAtB;AACD,SAFI,MAGA,IAAG9F,IAAI,KAAK,CAAZ,EAAe;AAClBmB,UAAAA,GAAG,CAAC6E,MAAJ,GAAasB,OAAO,CAACtB,MAArB;AACA7E,UAAAA,GAAG,CAAC8E,MAAJ,GAAaqB,OAAO,CAACrB,MAArB;AACD;AACF,OAZD,MAaK;AACH,YAAIsB,IAAI,GAAGH,MAAM,CAAChK,CAAC,GAAG,CAAL,CAAjB;AACA,YAAIoK,KAAK,GAAGD,IAAI,CAAC5B,MAAL,GAAc2B,OAAO,CAAC3B,MAAlC;AACA,YAAI8B,OAAO,GAAG,CAAC9B,MAAM,GAAG2B,OAAO,CAAC3B,MAAlB,IAA4B6B,KAA1C;;AACA,YAAG/B,QAAH,EAAa;AACXgC,UAAAA,OAAO,GAAGhC,QAAQ,CAACgC,OAAD,CAAlB;AACD;;AACD,YAAGzH,IAAI,KAAK,CAAZ,EAAe;AACbmB,UAAAA,GAAG,CAACyE,UAAJ,GAAiB0B,OAAO,CAAC1B,UAAR,GAAqB0B,OAAO,CAAC5F,EAAR,GAAa+F,OAAnD;AACAtG,UAAAA,GAAG,CAAC0E,UAAJ,GAAiByB,OAAO,CAACzB,UAAR,GAAqByB,OAAO,CAAC3F,EAAR,GAAa8F,OAAnD;AACD,SAHD,MAIK,IAAGzH,IAAI,KAAK,CAAZ,EAAe;AAClBmB,UAAAA,GAAG,CAAC2E,OAAJ,GAAcwB,OAAO,CAACxB,OAAR,GAAkBwB,OAAO,CAACvB,EAAR,GAAa0B,OAA7C;AACD,SAFI,MAGA,IAAGzH,IAAI,KAAK,CAAZ,EAAe;AAClBmB,UAAAA,GAAG,CAAC6E,MAAJ,GAAasB,OAAO,CAACtB,MAAR,GAAiBsB,OAAO,CAAC5F,EAAR,GAAa+F,OAA3C;AACAtG,UAAAA,GAAG,CAAC8E,MAAJ,GAAaqB,OAAO,CAACrB,MAAR,GAAiBqB,OAAO,CAAC3F,EAAR,GAAa8F,OAA3C;AACD;AACF;AACF,KA1CD;AA2CA,QAAIzI,MAAM,GAAGzD,MAAI,CAACyD,MAAL,CAAYC,QAAZ,EAAb;;AACA,QAAGkC,GAAG,CAACyE,UAAJ,IAAkBzE,GAAG,CAAC0E,UAAzB,EAAqC;AACnC,UAAI3G,CAAC,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqCiC,GAAG,CAACyE,UAAJ,IAAkB,CAAvD,EAA0DzE,GAAG,CAAC0E,UAAJ,IAAkB,CAA5E,EAA+E,CAA/E,EAAkF,CAAlF,CAAR;AACA7G,MAAAA,MAAM,GAAGzD,MAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBH,MAArB,EAA6BE,CAA7B,CAAT;AACD;;AACD,QAAGiC,GAAG,CAAC2E,OAAP,EAAgB;AACd,UAAIzG,CAAC,GAAG9D,MAAI,CAAC+D,IAAL,CAAUC,GAAV,CAAc4B,GAAG,CAAC2E,OAAlB,CAAR;AACA,UAAItG,GAAG,GAAGC,IAAI,CAACD,GAAL,CAASH,CAAT,CAAV;AACA,UAAIK,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASL,CAAT,CAAV;AACA,UAAIH,EAAC,GAAG,CAACQ,GAAD,EAAMF,GAAN,EAAW,CAAX,EAAc,CAAd,EAAiB,CAACA,GAAlB,EAAuBE,GAAvB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,CAAvD,CAAR;AACAV,MAAAA,MAAM,GAAGzD,MAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBH,MAArB,EAA6BE,EAA7B,CAAT;AACD;;AACD,QAAGiC,GAAG,CAAC6E,MAAJ,KAAepG,SAAf,IAA4BuB,GAAG,CAAC8E,MAAJ,KAAerG,SAA9C,EAAyD;AACvD,UAAIV,GAAC,GAAG,CAACiC,GAAG,CAAC6E,MAAJ,KAAepG,SAAf,GAA2B,CAA3B,GAA+BuB,GAAG,CAAC6E,MAApC,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,EAAwD7E,GAAG,CAAC8E,MAAJ,KAAerG,SAAf,GAA2B,CAA3B,GAA+BuB,GAAG,CAAC8E,MAA3F,EAAmG,CAAnG,EAAsG,CAAtG,EAAyG,CAAzG,EAA4G,CAA5G,EAA+G,CAA/G,EAAkH,CAAlH,EAAqH,CAArH,EAAwH,CAAxH,EAA2H,CAA3H,EAA8H,CAA9H,CAAR;AACAjH,MAAAA,MAAM,GAAGzD,MAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBH,MAArB,EAA6BE,GAA7B,CAAT;AACD;;AACDxB,IAAAA,IAAI,CAACgK,OAAL,GAAe1I,MAAf;AACD,GAxED;AAyED;AAED;;;;;;;;;;AAQA,SAASqI,YAAT,CAAsBjK,CAAtB,EAAyBwD,CAAzB,EAA4B+E,MAA5B,EAAoCyB,MAApC,EAA4C;AAC1C,MAAGhK,CAAC,KAAKwD,CAAT,EAAY;AACV,QAAI4E,KAAK,GAAG4B,MAAM,CAAChK,CAAD,CAAlB;;AACA,QAAGoI,KAAK,CAACG,MAAN,GAAeA,MAAlB,EAA0B;AACxB,aAAOvI,CAAC,GAAG,CAAX;AACD;;AACD,WAAOA,CAAP;AACD,GAND,MAOK;AACH,QAAIuK,MAAM,GAAGvK,CAAC,IAAKwD,CAAC,GAAGxD,CAAL,IAAW,CAAf,CAAd;AACA,QAAIoI,MAAK,GAAG4B,MAAM,CAACO,MAAD,CAAlB;;AACA,QAAGnC,MAAK,CAACG,MAAN,KAAiBA,MAApB,EAA4B;AAC1B,aAAOgC,MAAP;AACD,KAFD,MAGK,IAAGnC,MAAK,CAACG,MAAN,GAAeA,MAAlB,EAA0B;AAC7B,aAAO0B,YAAY,CAACjK,CAAD,EAAIqC,IAAI,CAACoH,GAAL,CAASc,MAAM,GAAG,CAAlB,EAAqBvK,CAArB,CAAJ,EAA6BuI,MAA7B,EAAqCyB,MAArC,CAAnB;AACD,KAFI,MAGA;AACH,aAAOC,YAAY,CAAC5H,IAAI,CAACmI,GAAL,CAASD,MAAM,GAAG,CAAlB,EAAqB/G,CAArB,CAAD,EAA0BA,CAA1B,EAA6B+E,MAA7B,EAAqCyB,MAArC,CAAnB;AACD;AACF;AACF;AAED;;;;;;AAIA,SAASS,eAAT,CAAyBnJ,IAAzB,EAA+B;AAC7BA,EAAAA,IAAI,CAACoJ,aAAL,GAAqBpJ,IAAI,CAACgJ,OAAL,IAAgBhJ,IAAI,CAACM,MAA1C;AACAN,EAAAA,IAAI,CAACC,QAAL,CAAc1C,OAAd,CAAsB,UAAAC,IAAI,EAAI;AAC5B6L,IAAAA,oBAAoB,CAAC7L,IAAD,EAAOwC,IAAI,CAACoJ,aAAZ,CAApB;AACD,GAFD;AAGD;;AAED,SAASC,oBAAT,CAA8BrK,IAA9B,EAAoCsK,YAApC,EAAkD;AAChDtK,EAAAA,IAAI,CAACoK,aAAL,GAAqBvM,MAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqB6I,YAArB,EAAmCtK,IAAI,CAACgK,OAAL,IAAgBhK,IAAI,CAACsB,MAAxD,CAArB;AACAtB,EAAAA,IAAI,CAACiB,QAAL,CAAc1C,OAAd,CAAsB,UAAAC,IAAI,EAAI;AAC5B6L,IAAAA,oBAAoB,CAAC7L,IAAD,EAAOwB,IAAI,CAACoK,aAAZ,CAApB;AACD,GAFD;AAGD;AAED;;;;;;;;AAMA,SAASG,WAAT,CAAqB/B,iBAArB,EAAwCP,MAAxC,EAAgDzH,QAAhD,EAA0D;AACxDgI,EAAAA,iBAAiB,CAACjK,OAAlB,CAA0B,UAAAC,IAAI,EAAI;AAAA,QAC1BC,IAD0B,GACSD,IADT,CAC1BC,IAD0B;AAAA,QACpBgK,YADoB,GACSjK,IADT,CACpBiK,YADoB;AAAA,QACNC,UADM,GACSlK,IADT,CACNkK,UADM;AAEhC,QAAIzI,IAAI,GAAGO,QAAQ,CAAC/B,IAAD,CAAnB;;AACA,QAAGgK,YAAH,EAAiB;AACf,UAAGA,YAAY,CAAC7I,MAAhB,EAAwB;AACtB,YAAIF,CAAC,GAAGiK,YAAY,CAAC,CAAD,EAAIlB,YAAY,CAAC7I,MAAb,GAAsB,CAA1B,EAA6BqI,MAA7B,EAAqCQ,YAArC,CAApB;AADsB,oCAEFA,YAAY,CAAC/I,CAAD,CAFV,CAEhByD,KAFgB;AAAA,YAEhBA,KAFgB,sCAER,CAFQ;AAGtBlD,QAAAA,IAAI,CAACuK,aAAL,GAAqBrH,KAArB;AACD;AACF;;AACD,QAAGuF,UAAH,EAAe;AACb,UAAI/I,GAAG,GAAG+I,UAAU,CAAC9I,MAArB;;AACA,UAAGD,GAAH,EAAQ;AACN,YAAID,EAAC,GAAGiK,YAAY,CAAC,CAAD,EAAIhK,GAAG,GAAG,CAAV,EAAasI,MAAb,EAAqBS,UAArB,CAApB;;AACA,YAAIkB,OAAO,GAAGlB,UAAU,CAAChJ,EAAD,CAAxB;AACA,YAAIqI,QAAQ,GAAG6B,OAAO,CAACN,MAAvB,CAHM;;AAKN,YAAG5J,EAAC,KAAKC,GAAG,GAAG,CAAf,EAAkB;AAChBM,UAAAA,IAAI,CAACwK,MAAL,GAAcb,OAAO,CAACzG,KAAtB;AACD,SAFD,MAGK;AACH,cAAI0G,IAAI,GAAGnB,UAAU,CAAChJ,EAAC,GAAG,CAAL,CAArB;AACA,cAAIoK,KAAK,GAAGD,IAAI,CAAC5B,MAAL,GAAc2B,OAAO,CAAC3B,MAAlC;AACA,cAAI8B,OAAO,GAAG,CAAC9B,MAAM,GAAG2B,OAAO,CAAC3B,MAAlB,IAA4B6B,KAA1C;;AACA,cAAG/B,QAAH,EAAa;AACXgC,YAAAA,OAAO,GAAGhC,QAAQ,CAACgC,OAAD,CAAlB;AACD;;AACD9J,UAAAA,IAAI,CAACwK,MAAL,GAAc;AACZ9B,YAAAA,EAAE,EAAEiB,OAAO,CAACzG,KAAR,CAAcwF,EAAd,GAAmBiB,OAAO,CAAChB,EAAR,GAAamB;AADxB,WAAd;AAGD;AACF;AACF;AACF,GAjCD;AAkCD;AAED;;;;;;;;;;;;AAUA,SAASW,OAAT,CAAiBzC,MAAjB,EAAyBhI,IAAzB,EAA+BS,QAA/B,EAAyCV,IAAzC,EAA+CM,QAA/C,EAAyDlC,OAAzD,EAAkEyK,gBAAlE,EAAoF;AAClF5I,EAAAA,IAAI,CAAC1B,OAAL,CAAa,UAAAC,IAAI,EAAI;AAAA,QACbC,IADa,GACoDD,IADpD,CACbC,IADa;AAAA,QACPyC,MADO,GACoD1C,IADpD,CACP0C,MADO;AAAA,6BACoD1C,IADpD,CACCmM,YADD;AAAA,QACCA,YADD,mCACgB,CADhB;AAAA,8BACoDnM,IADpD,CACmBgM,aADnB;AAAA,QACmBA,aADnB,oCACmCG,YADnC;;AAGnB,QAAGH,aAAa,GAAG,CAAnB,EAAsB;AACpB;AACD;;AACD,QAAItK,IAAI,GAAGQ,QAAQ,CAACjC,IAAD,CAAnB;AACA,QAAImM,aAAa,GAAG1K,IAAI,CAACmC,OAAL,CAAamI,aAAb,CAApB,CAPmB;;AASnB,QAAGI,aAAa,CAACtI,IAAd,KAAuB,MAA1B,EAAkC;AAAA,UAC1BkB,YAD0B,GACKoH,aADL,CAC1BpH,YAD0B;AAAA,UACZgB,YADY,GACKoG,aADL,CACZpG,YADY;;AAGhChB,MAAAA,YAAY,CAACjF,OAAb,CAAqB,UAAAC,IAAI,EAAI;AAAA,YACrBkF,UADqB,GACNlF,IADM,CACrBkF,UADqB;;AAG3B,YAAGA,UAAH,EAAe;AACb,cAAIlC,CAAC,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,CAAR;AACAkC,UAAAA,UAAU,CAACnF,OAAX,CAAmB,UAAAoF,MAAM,EAAI;AAAA,gBACrBtC,KADqB,GACIsC,MADJ,CACrBtC,KADqB;AAAA,gBACd8B,KADc,GACIQ,MADJ,CACdR,KADc;AAAA,gBACP7B,MADO,GACIqC,MADJ,CACPrC,MADO;AAE3B,gBAAIuJ,UAAU,GAAG7K,IAAI,CAACqB,KAAD,CAAJ,CAAY+I,aAA7B;AACA,gBAAInC,MAAM,GAAGrK,KAAK,CAACC,IAAN,CAAWyD,MAAX,CAAkBG,QAAlB,CAA2BoJ,UAA3B,EAAuCvJ,MAAvC,CAAb;;AACA,iBAAI,IAAI5B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B8B,cAAAA,CAAC,CAAC9B,CAAD,CAAD,IAAQuI,MAAM,CAACvI,CAAD,CAAN,GAAYyD,KAApB;AACD;AACF,WAPD;AAQA3E,UAAAA,IAAI,CAAC8C,MAAL,GAAcE,CAAd;AACD,SAXD;AAAA,aAaK;AACH,gBAAIsJ,gBAAgB,GAAGxK,QAAQ,CAACY,MAAD,CAAR,CAAiBkJ,aAAxC;AACA,gBAAIW,YAAY,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqCvM,IAAI,CAACE,CAA1C,EAA6CF,IAAI,CAACG,CAAlD,EAAqD,CAArD,EAAwD,CAAxD,CAAnB;;AACA,gBAAI6C,GAAC,GAAG5D,KAAK,CAACC,IAAN,CAAWyD,MAAX,CAAkBG,QAAlB,CAA2BqJ,gBAA3B,EAA6CC,YAA7C,CAAR;;AACAvM,YAAAA,IAAI,CAAC8C,MAAL,GAAcE,GAAd;AACD,WArB0B;;;AAuB3BhD,QAAAA,IAAI,CAACwM,OAAL,GAAe,IAAf;AACD,OAxBD,EAHgC;;AA6BhC,UAAI/D,GAAG,GAAG4B,gBAAgB,CAACpK,IAAI,GAAG,GAAP,IAAcmM,aAAa,CAACrI,IAAd,IAAsBqI,aAAa,CAACnM,IAAlD,CAAD,CAA1B;;AACA,UAAGwI,GAAH,EAAQ;AAAA,YACAa,KADA,GACUb,GADV,CACAa,KADA;;AAEN,YAAGA,KAAH,EAAU;AACR,cAAInI,GAAG,GAAGmI,KAAK,CAAClI,MAAhB;AACA,cAAIF,CAAC,GAAGiK,YAAY,CAAC,CAAD,EAAIhK,GAAG,GAAG,CAAV,EAAasI,MAAb,EAAqBH,KAArB,CAApB;AACA,cAAI8B,OAAO,GAAG9B,KAAK,CAACpI,CAAD,CAAnB;AACA,cAAIqI,QAAQ,GAAG6B,OAAO,CAAC7B,QAAvB,CAJQ;;AAMR,cAAGrI,CAAC,KAAKC,GAAG,GAAG,CAAf,EAAkB;AAAA,gBACV6C,QADU,GACGoH,OADH,CACVpH,QADU;;AAEhB,gBAAGA,QAAH,EAAa;AACX,mBAAI,IAAI9C,GAAC,GAAG,CAAR,EAAWC,IAAG,GAAG6C,QAAQ,CAAC5C,MAA9B,EAAsCF,GAAC,GAAGC,IAAG,GAAG,CAAhD,EAAmDD,GAAC,IAAI,CAAxD,EAA2D;AACzD,oBAAIhB,CAAC,GAAG8D,QAAQ,CAAC9C,GAAD,CAAhB;AACA,oBAAIf,CAAC,GAAG6D,QAAQ,CAAC9C,GAAC,GAAG,CAAL,CAAhB;;AACA,oBAAGhB,CAAC,KAAK,CAAN,IAAWC,CAAC,KAAK,CAApB,EAAuB;AACrB;AACD;;AACD,oBAAI0C,KAAK,GAAG3B,GAAC,IAAI,CAAjB;AACA,oBAAIuL,MAAM,GAAGzH,YAAY,CAACnC,KAAD,CAAzB;AACA,oBAAIG,CAAC,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC9C,CAArC,EAAwCC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,CAAR;AACAsM,gBAAAA,MAAM,CAACD,OAAP,GAAiBnN,MAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBwJ,MAAM,CAAC3J,MAA5B,EAAoCE,CAApC,CAAjB;AACD;AACF;AACF,WAfD,MAgBK;AACH,gBAAIqI,IAAI,GAAG/B,KAAK,CAACpI,CAAC,GAAG,CAAL,CAAhB;AACA,gBAAIoK,KAAK,GAAGD,IAAI,CAAC5B,MAAL,GAAc2B,OAAO,CAAC3B,MAAlC;AACA,gBAAI8B,OAAO,GAAG,CAAC9B,MAAM,GAAG2B,OAAO,CAAC3B,MAAlB,IAA4B6B,KAA1C;;AACA,gBAAG/B,QAAH,EAAa;AACXgC,cAAAA,OAAO,GAAGhC,QAAQ,CAACgC,OAAD,CAAlB;AACD;;AANE,gBAOGvH,SAPH,GAOoBoH,OAPpB,CAOGpH,QAPH;AAAA,gBAOa0G,EAPb,GAOoBU,OAPpB,CAOaV,EAPb;;AAQH,gBAAG1G,SAAQ,IAAI0G,EAAf,EAAmB;AACjB,kBAAIvJ,KAAG,GAAG,CAAV;;AACA,kBAAG6C,SAAH,EAAa;AACX7C,gBAAAA,KAAG,GAAG6C,SAAQ,CAAC5C,MAAf;AACD;;AACD,kBAAGsJ,EAAH,EAAO;AACLvJ,gBAAAA,KAAG,GAAGoC,IAAI,CAACoH,GAAL,CAASxJ,KAAT,EAAcuJ,EAAE,CAACtJ,MAAjB,CAAN;AACD;;AACD,mBAAI,IAAIF,GAAC,GAAG,CAAZ,EAAeA,GAAC,GAAGC,KAAG,GAAG,CAAzB,EAA4BD,GAAC,IAAI,CAAjC,EAAoC;AAClC,oBAAIhB,EAAC,SAAL;AAAA,oBAAOC,EAAC,SAAR;;AACA,oBAAG6D,SAAH,EAAa;AACX9D,kBAAAA,EAAC,GAAG8D,SAAQ,CAAC9C,GAAD,CAAR,IAAe,CAAnB;AACAf,kBAAAA,EAAC,GAAG6D,SAAQ,CAAC9C,GAAC,GAAG,CAAL,CAAR,IAAmB,CAAvB;AACD,iBAHD,MAIK;AACHhB,kBAAAA,EAAC,GAAGC,EAAC,GAAG,CAAR;AACD;;AACD,oBAAGuK,EAAH,EAAO;AACLxK,kBAAAA,EAAC,IAAI,CAACwK,EAAE,CAACxJ,GAAD,CAAF,IAAS,CAAV,IAAeqK,OAApB;AACApL,kBAAAA,EAAC,IAAI,CAACuK,EAAE,CAACxJ,GAAC,GAAG,CAAL,CAAF,IAAa,CAAd,IAAmBqK,OAAxB;AACD;;AACD,oBAAGrL,EAAC,KAAK,CAAN,IAAWC,EAAC,KAAK,CAApB,EAAuB;AACrB;AACD;;AACD,oBAAI0C,MAAK,GAAG3B,GAAC,IAAI,CAAjB;;AACA,oBAAIuL,OAAM,GAAGzH,YAAY,CAACnC,MAAD,CAAzB;AACA,oBAAIG,GAAC,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC9C,EAArC,EAAwCC,EAAxC,EAA2C,CAA3C,EAA8C,CAA9C,CAAR;AACAsM,gBAAAA,OAAM,CAACD,OAAP,GAAiBnN,MAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBwJ,OAAM,CAAC3J,MAA5B,EAAoCE,GAApC,CAAjB;AACD;AACF;AACF;AACF;AACF,OA9F+B;;;AAgGhCgD,MAAAA,YAAY,CAACjG,OAAb,CAAqB,UAAAC,IAAI,EAAI;AAAA,YACrBgI,SADqB,GACChI,IADD,CACrBgI,SADqB;AAAA,YACVnD,MADU,GACC7E,IADD,CACV6E,MADU;AAE3B,YAAInE,MAAM,GAAGmE,MAAM,CAAC,CAAD,CAAN,CAAU6H,MAAV,CAAiB7H,MAAM,CAAC,CAAD,CAAvB,EAA4B6H,MAA5B,CAAmC7H,MAAM,CAAC,CAAD,CAAzC,CAAb;AACA,YAAI4H,MAAM,GAAG,EAAb;AACAzE,QAAAA,SAAS,CAACjI,OAAV,CAAkB,UAAAmB,CAAC,EAAI;AACrB,cAAI8C,QAAQ,GAAGgB,YAAY,CAAC9D,CAAD,CAA3B;AACA,cAAI2D,MAAM,GAAGxF,MAAI,CAACyD,MAAL,CAAYgC,QAAZ,CAAqB,CAAC,CAAD,EAAI,CAAJ,CAArB,EAA6Bd,QAAQ,CAACwI,OAAT,IAAoBxI,QAAQ,CAAClB,MAA1D,CAAb;AACA2J,UAAAA,MAAM,GAAGA,MAAM,CAACC,MAAP,CAAc7H,MAAM,CAACD,KAAP,CAAa,CAAb,EAAgB,CAAhB,CAAd,CAAT;AACD,SAJD,EAJ2B;;AAAA,oCAUFvF,MAAI,CAACsN,GAAL,CAASC,aAAT,CAAuBlM,MAAvB,EAA+B+L,MAA/B,CAVE;AAAA;AAAA,YAUtBI,OAVsB;AAAA,YAUbC,OAVa;;AAW3B,YAAIhK,MAAM,GAAGzD,MAAI,CAACsN,GAAL,CAAShK,SAAT,CAAmBkK,OAAnB,EAA4BC,OAA5B,CAAb;AACA9M,QAAAA,IAAI,CAAC8C,MAAL,GAAcA,MAAd;AACD,OAbD;AAcD,KA9GD;AAAA,SAgHK;AAAA,oCACsBsJ,aADtB,CACGzJ,SADH;AAAA,YACGA,SADH,sCACe,EADf;AAEH,YAAIpD,GAAG,GAAGK,OAAO,CAACwM,aAAa,CAACrI,IAAd,IAAsBqI,aAAa,CAACnM,IAArC,CAAjB;AACA,YAAIqM,gBAAgB,GAAGxK,QAAQ,CAACY,MAAD,CAAR,CAAiBkJ,aAAxC;AACA,YAAI9I,MAAM,GAAGzD,MAAI,CAACyD,MAAL,CAAYC,QAAZ,EAAb,CAJG;;AAMH,YAAIyE,CAAC,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAAC7E,SAAS,CAACzC,CAAV,IAAe,CAAhB,IAAqBX,GAAG,CAACiB,UAAJ,GAAiB,GAA3E,EAAgF,CAACmC,SAAS,CAACxC,CAAV,IAAe,CAAhB,IAAqBZ,GAAG,CAACkB,WAAJ,GAAkB,GAAvH,EAA4H,CAA5H,EAA+H,CAA/H,CAAR;AACAqC,QAAAA,MAAM,GAAGzD,MAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBH,MAArB,EAA6B0E,CAA7B,CAAT,CAPG;;AASH,YAAG7E,SAAS,CAACO,GAAb,EAAkB;AAChB,cAAIC,CAAC,GAAG9D,MAAI,CAAC+D,IAAL,CAAUC,GAAV,CAAcV,SAAS,CAACO,GAAxB,CAAR;AACA,cAAII,GAAG,GAAGC,IAAI,CAACD,GAAL,CAASH,CAAT,CAAV;AACA,cAAIK,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASL,CAAT,CAAV;AACA,cAAIqE,EAAC,GAAG,CAAChE,GAAD,EAAMF,GAAN,EAAW,CAAX,EAAc,CAAd,EAAiB,CAACA,GAAlB,EAAuBE,GAAvB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,CAAvD,CAAR;AACAV,UAAAA,MAAM,GAAGzD,MAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBH,MAArB,EAA6B0E,EAA7B,CAAT;AACD,SAfE;;;AAiBH,YAAG7E,SAAS,CAACc,GAAV,KAAkBC,SAAlB,IAA+Bf,SAAS,CAACgB,GAAV,KAAkBD,SAApD,EAA+D;AAC7D,cAAI8D,GAAC,GAAG,CAAC7E,SAAS,CAACc,GAAV,KAAkBC,SAAlB,GAA8B,CAA9B,GAAkCf,SAAS,CAACc,GAA7C,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,CAAxD,EAA2D,CAA3D,EAA8Dd,SAAS,CAACgB,GAAV,KAAkBD,SAAlB,GAA8B,CAA9B,GAAkCf,SAAS,CAACgB,GAA1G,EAA+G,CAA/G,EAAkH,CAAlH,EAAqH,CAArH,EAAwH,CAAxH,EAA2H,CAA3H,EAA8H,CAA9H,EAAiI,CAAjI,EAAoI,CAApI,EAAuI,CAAvI,EAA0I,CAA1I,CAAR;AACAb,UAAAA,MAAM,GAAGzD,MAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBH,MAArB,EAA6B0E,GAA7B,CAAT;AACD,SApBE;;;AAsBHA,QAAAA,CAAC,GAAGnI,MAAI,CAACyD,MAAL,CAAYC,QAAZ,EAAJ;AACAyE,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQjI,GAAG,CAACiB,UAAJ,GAAiB,GAAzB;AACAgH,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQjI,GAAG,CAACkB,WAAJ,GAAkB,GAA1B;AACAqC,QAAAA,MAAM,GAAGzD,MAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBuE,CAArB,EAAwB1E,MAAxB,CAAT;AACA0E,QAAAA,CAAC,GAAGnI,MAAI,CAACyD,MAAL,CAAYC,QAAZ,EAAJ;AACAyE,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ,CAACjI,GAAG,CAACiB,UAAL,GAAkB,GAA1B;AACAgH,QAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ,CAACjI,GAAG,CAACkB,WAAL,GAAmB,GAA3B;AACAqC,QAAAA,MAAM,GAAGzD,MAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBH,MAArB,EAA6B0E,CAA7B,CAAT;AACA1E,QAAAA,MAAM,GAAGzD,MAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBqJ,gBAArB,EAAuCxJ,MAAvC,CAAT;AACAsJ,QAAAA,aAAa,CAACtJ,MAAd,GAAuBA,MAAvB;AACD;AACF,GA1JD;AA2JD;;AAED,SAASiK,cAAT,CAAwBvL,IAAxB,EAA8BC,IAA9B,EAAoC;AAClCD,EAAAA,IAAI,CAACzB,OAAL,CAAa,UAAAC,IAAI,EAAI;AACnB,WAAOA,IAAI,CAACwL,OAAZ;AACD,GAFD;AAGA/J,EAAAA,IAAI,CAAC1B,OAAL,CAAa,UAAAC,IAAI,EAAI;AACnB,WAAOA,IAAI,CAACgM,aAAZ;AACA,WAAOhM,IAAI,CAACiM,MAAZ;AACD,GAHD;AAID;;AAED,WAAe;AACbjB,EAAAA,iBAAiB,EAAjBA,iBADa;AAEbW,EAAAA,eAAe,EAAfA,eAFa;AAGbI,EAAAA,WAAW,EAAXA,WAHa;AAIbG,EAAAA,OAAO,EAAPA,OAJa;AAKba,EAAAA,cAAc,EAAdA;AALa,CAAf;;IClWQ1N,SAASD,MAATC;;AAER,SAAS2N,UAAT,CAAoBC,GAApB,EAAyBC,WAAzB,EAAsC1L,IAAtC,EAA4CgE,EAA5C,EAAgDC,EAAhD,EAAoD;AAAA,MAC5CrE,MAD4C,GACRI,IADQ,CAC5CJ,MAD4C;AAAA,MACpCqB,QADoC,GACRjB,IADQ,CACpCiB,QADoC;AAAA,MAC1BmJ,aAD0B,GACRpK,IADQ,CAC1BoK,aAD0B;AAElD,MAAI5I,CAAC,GAAG3D,MAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBiK,WAArB,EAAkCtB,aAAlC,CAAR;AACAqB,EAAAA,GAAG,CAACE,YAAJ,CAAiBnK,CAAC,CAAC,CAAD,CAAlB,EAAuBA,CAAC,CAAC,CAAD,CAAxB,EAA6BA,CAAC,CAAC,CAAD,CAA9B,EAAmCA,CAAC,CAAC,CAAD,CAApC,EAAyCA,CAAC,CAAC,EAAD,CAA1C,EAAgDA,CAAC,CAAC,EAAD,CAAjD;AACAiK,EAAAA,GAAG,CAACG,SAAJ;AACAH,EAAAA,GAAG,CAACI,WAAJ,GAAkB,MAAlB;AACAJ,EAAAA,GAAG,CAACK,SAAJ,GAAgB,CAAhB;AACAL,EAAAA,GAAG,CAACM,GAAJ,CAAQ/H,EAAR,EAAYC,EAAZ,EAAgB,CAAhB,EAAmB,CAAnB,EAAsBlC,IAAI,CAACsC,EAAL,GAAU,CAAhC;AACAoH,EAAAA,GAAG,CAACO,MAAJ,CAAWhI,EAAX,EAAeC,EAAf;AACAwH,EAAAA,GAAG,CAACQ,MAAJ,CAAW,CAACrM,MAAM,IAAI,CAAX,IAAgBoE,EAA3B,EAA+BC,EAA/B;AACAwH,EAAAA,GAAG,CAACS,SAAJ;AACAT,EAAAA,GAAG,CAACU,MAAJ;AACAlL,EAAAA,QAAQ,CAAC1C,OAAT,CAAiB,UAAAC,IAAI,EAAI;AACvBgN,IAAAA,UAAU,CAACC,GAAD,EAAMC,WAAN,EAAmBlN,IAAnB,EAAyBwF,EAAzB,EAA6BC,EAA7B,CAAV;AACD,GAFD;AAGD;;AAED,SAASmI,UAAT,CAAoBX,GAApB,EAAyBC,WAAzB,EAAsCzL,IAAtC,EAA4CS,QAA5C,EAAsDtC,OAAtD,EAA+D4F,EAA/D,EAAmEC,EAAnE,EAAuE;AACrEhE,EAAAA,IAAI,CAAC1B,OAAL,CAAa,UAAAC,IAAI,EAAI;AAAA,QACbC,IADa,GACmFD,IADnF,CACbC,IADa;AAAA,6BACmFD,IADnF,CACPmM,YADO;AAAA,QACPA,YADO,mCACQ,CADR;AAAA,8BACmFnM,IADnF,CACWgM,aADX;AAAA,QACWA,aADX,oCAC2BG,YAD3B;AAAA,QACyC0B,SADzC,GACmF7N,IADnF,CACyC6N,SADzC;AAAA,sBACmF7N,IADnF,CACoD8N,KADpD;AAAA,QACoDA,KADpD,4BAC4D,EAD5D;AAAA,uBACmF9N,IADnF,CACgEiM,MADhE;AAAA,QACgEA,MADhE,6BACyE6B,KADzE;;AAGnB,QAAG9B,aAAa,GAAG,CAAnB,EAAsB;AACpB;AACD,KALkB;;;AAOnB,QAAG6B,SAAS,KAAK,KAAjB,EAAwB;AACtBZ,MAAAA,GAAG,CAACc,wBAAJ,GAA+B,SAA/B;AACD,KAFD,MAGK;AACHd,MAAAA,GAAG,CAACc,wBAAJ,GAA+B,aAA/B;AACD;;AAZkB,qBAaA9B,MAbA,CAab9B,EAba;AAAA,QAabA,EAba,2BAaR,GAbQ;AAcnB,QAAI6D,OAAO,GAAGf,GAAG,CAACgB,WAAlB,CAdmB;;AAgBnBhB,IAAAA,GAAG,CAACgB,WAAJ,IAAmB9D,EAAE,GAAG,GAAxB;AACA,QAAIzI,IAAI,GAAGQ,QAAQ,CAACjC,IAAD,CAAnB;AACA,QAAImM,aAAa,GAAG1K,IAAI,CAACmC,OAAL,CAAamI,aAAb,CAApB;AACA,QAAIzM,GAAG,GAAGK,OAAO,CAACwM,aAAa,CAACrI,IAAd,IAAsBqI,aAAa,CAACnM,IAArC,CAAjB,CAnBmB;;AAqBnB,QAAGmM,aAAa,CAACtI,IAAd,KAAuB,MAA1B,EAAkC;AAAA,UAC1BkC,YAD0B,GACToG,aADS,CAC1BpG,YAD0B;AAEhCA,MAAAA,YAAY,CAACjG,OAAb,CAAqB,UAAAC,IAAI,EAAI;AAAA,YACrB8C,MADqB,GACG9C,IADH,CACrB8C,MADqB;AAAA,YACbmF,WADa,GACGjI,IADH,CACbiI,WADa;AAE3BnF,QAAAA,MAAM,GAAGzD,MAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBiK,WAArB,EAAkCpK,MAAlC,CAAT,CAF2B;;AAI3BmK,QAAAA,GAAG,CAACiB,IAAJ;AACAjB,QAAAA,GAAG,CAACE,YAAJ,CAAiBrK,MAAM,CAAC,CAAD,CAAvB,EAA4BA,MAAM,CAAC,CAAD,CAAlC,EAAuCA,MAAM,CAAC,CAAD,CAA7C,EAAkDA,MAAM,CAAC,CAAD,CAAxD,EAA6DA,MAAM,CAAC,EAAD,CAAnE,EAAyEA,MAAM,CAAC,EAAD,CAA/E;AACAmK,QAAAA,GAAG,CAACG,SAAJ;AACAH,QAAAA,GAAG,CAACO,MAAJ,CAAWvF,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf,IAAoBzC,EAA/B,EAAmCyC,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf,IAAoBxC,EAAvD;AACAwH,QAAAA,GAAG,CAACQ,MAAJ,CAAWxF,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf,IAAoBzC,EAA/B,EAAmCyC,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf,IAAoBxC,EAAvD;AACAwH,QAAAA,GAAG,CAACQ,MAAJ,CAAWxF,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf,IAAoBzC,EAA/B,EAAmCyC,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf,IAAoBxC,EAAvD;AACAwH,QAAAA,GAAG,CAACS,SAAJ;AACAT,QAAAA,GAAG,CAACkB,IAAJ;AACAlB,QAAAA,GAAG,CAACmB,SAAJ,CAAc7O,GAAG,CAACmB,MAAlB,EAA0B,CAACnB,GAAG,CAACW,CAAL,GAASX,GAAG,CAACe,MAAb,GAAsBkF,EAAhD,EAAoD,CAACjG,GAAG,CAACY,CAAL,GAASZ,GAAG,CAACgB,MAAb,GAAsBkF,EAA1E;AACAwH,QAAAA,GAAG,CAACoB,OAAJ;AACD,OAdD;AAeD,KAjBD;AAAA,SAmBK;AAAA,YACGvL,MADH,GACcsJ,aADd,CACGtJ,MADH;;AAEH,YAAGA,MAAM,CAAC,CAAD,CAAN,KAAc,CAAd,IAAmBA,MAAM,CAAC,CAAD,CAAN,KAAc,CAApC,EAAuC;AACrC;AACD;;AACDA,QAAAA,MAAM,GAAGzD,MAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBiK,WAArB,EAAkCpK,MAAlC,CAAT,CALG;;AAOHmK,QAAAA,GAAG,CAACiB,IAAJ;AACAjB,QAAAA,GAAG,CAACE,YAAJ,CAAiBrK,MAAM,CAAC,CAAD,CAAvB,EAA4BA,MAAM,CAAC,CAAD,CAAlC,EAAuCA,MAAM,CAAC,CAAD,CAA7C,EAAkDA,MAAM,CAAC,CAAD,CAAxD,EAA6DA,MAAM,CAAC,EAAD,CAAnE,EAAyEA,MAAM,CAAC,EAAD,CAA/E;AACAmK,QAAAA,GAAG,CAACG,SAAJ;AACAH,QAAAA,GAAG,CAACO,MAAJ,CAAW,CAACjO,GAAG,CAACe,MAAL,GAAckF,EAAzB,EAA6B,CAACjG,GAAG,CAACgB,MAAL,GAAckF,EAA3C;AACAwH,QAAAA,GAAG,CAACQ,MAAJ,CAAW,CAAClO,GAAG,CAACe,MAAL,GAAcf,GAAG,CAACa,KAAlB,GAA0BoF,EAArC,EAAyC,CAACjG,GAAG,CAACgB,MAAL,GAAckF,EAAvD;AACAwH,QAAAA,GAAG,CAACQ,MAAJ,CAAW,CAAClO,GAAG,CAACe,MAAL,GAAcf,GAAG,CAACa,KAAlB,GAA0BoF,EAArC,EAA0C,CAACjG,GAAG,CAACgB,MAAL,GAAchB,GAAG,CAACc,MAAlB,GAA2BoF,EAArE;AACAwH,QAAAA,GAAG,CAACQ,MAAJ,CAAW,CAAClO,GAAG,CAACe,MAAL,GAAckF,EAAzB,EAA8B,CAACjG,GAAG,CAACgB,MAAL,GAAchB,GAAG,CAACc,MAAlB,GAA2BoF,EAAzD;AACAwH,QAAAA,GAAG,CAACS,SAAJ;AACAT,QAAAA,GAAG,CAACkB,IAAJ;AACAlB,QAAAA,GAAG,CAACmB,SAAJ,CAAc7O,GAAG,CAACmB,MAAlB,EAA0B,CAACnB,GAAG,CAACW,CAAL,GAASX,GAAG,CAACe,MAAb,GAAsBkF,EAAhD,EAAoD,CAACjG,GAAG,CAACY,CAAL,GAASZ,GAAG,CAACgB,MAAb,GAAsBkF,EAA1E;AACAwH,QAAAA,GAAG,CAACoB,OAAJ;AACD,OA1DkB;;;AA4DnB,QAAGR,SAAH,EAAc;AACZZ,MAAAA,GAAG,CAACc,wBAAJ,GAA+B,aAA/B;AACD;;AACDd,IAAAA,GAAG,CAACgB,WAAJ,GAAkBD,OAAlB;AACD,GAhED;AAiED;;AAED,SAASM,cAAT,CAAwBrB,GAAxB,EAA6BC,WAA7B,EAA0CzL,IAA1C,EAAgDS,QAAhD,EAA0DtC,OAA1D,EAAmE4F,EAAnE,EAAuEC,EAAvE,EAA2E;AACzEhE,EAAAA,IAAI,CAAC1B,OAAL,CAAa,UAAAC,IAAI,EAAI;AAAA,QACbC,IADa,GAC4CD,IAD5C,CACbC,IADa;AAAA,8BAC4CD,IAD5C,CACPmM,YADO;AAAA,QACPA,YADO,oCACQ,CADR;AAAA,+BAC4CnM,IAD5C,CACWgM,aADX;AAAA,QACWA,aADX,qCAC2BG,YAD3B;;AAGnB,QAAGH,aAAa,GAAG,CAAnB,EAAsB;AACpB;AACD;;AACD,QAAItK,IAAI,GAAGQ,QAAQ,CAACjC,IAAD,CAAnB;AACA,QAAImM,aAAa,GAAG1K,IAAI,CAACmC,OAAL,CAAamI,aAAb,CAApB;AACA,QAAIzM,GAAG,GAAGK,OAAO,CAACwM,aAAa,CAACrI,IAAd,IAAsBqI,aAAa,CAACnM,IAArC,CAAjB,CARmB;;AAUnB,QAAGmM,aAAa,CAACtI,IAAd,KAAuB,MAA1B,EAAkC;AAAA,UAC1BkB,YAD0B,GACKoH,aADL,CAC1BpH,YAD0B;AAAA,UACZgB,YADY,GACKoG,aADL,CACZpG,YADY;AAEhCA,MAAAA,YAAY,CAACjG,OAAb,CAAqB,UAAAC,IAAI,EAAI;AAAA,YACrB8C,MADqB,GACG9C,IADH,CACrB8C,MADqB;AAAA,YACbmF,WADa,GACGjI,IADH,CACbiI,WADa;AAE3BnF,QAAAA,MAAM,GAAGzD,MAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBiK,WAArB,EAAkCpK,MAAlC,CAAT;AACAmK,QAAAA,GAAG,CAACE,YAAJ,CAAiBrK,MAAM,CAAC,CAAD,CAAvB,EAA4BA,MAAM,CAAC,CAAD,CAAlC,EAAuCA,MAAM,CAAC,CAAD,CAA7C,EAAkDA,MAAM,CAAC,CAAD,CAAxD,EAA6DA,MAAM,CAAC,EAAD,CAAnE,EAAyEA,MAAM,CAAC,EAAD,CAA/E;AACAmK,QAAAA,GAAG,CAACI,WAAJ,GAAkB,MAAlB;AACAJ,QAAAA,GAAG,CAACK,SAAJ,GAAgB,CAAhB;AACAL,QAAAA,GAAG,CAACG,SAAJ;AACAH,QAAAA,GAAG,CAACO,MAAJ,CAAWvF,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf,IAAoBzC,EAA/B,EAAmCyC,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf,IAAoBxC,EAAvD;AACAwH,QAAAA,GAAG,CAACQ,MAAJ,CAAWxF,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf,IAAoBzC,EAA/B,EAAmCyC,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf,IAAoBxC,EAAvD;AACAwH,QAAAA,GAAG,CAACQ,MAAJ,CAAWxF,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf,IAAoBzC,EAA/B,EAAmCyC,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf,IAAoBxC,EAAvD;AACAwH,QAAAA,GAAG,CAACS,SAAJ;AACAT,QAAAA,GAAG,CAACU,MAAJ;AACD,OAZD;AAaA3I,MAAAA,YAAY,CAACjF,OAAb,CAAqB,UAAAC,IAAI,EAAI;AAAA,YACrB8C,MADqB,GACD9C,IADC,CACrB8C,MADqB;AAAA,YACb0J,OADa,GACDxM,IADC,CACbwM,OADa;AAE3B1J,QAAAA,MAAM,GAAGzD,MAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBiK,WAArB,EAAkCV,OAAO,IAAI1J,MAA7C,CAAT;AACAmK,QAAAA,GAAG,CAACE,YAAJ,CAAiBrK,MAAM,CAAC,CAAD,CAAvB,EAA4BA,MAAM,CAAC,CAAD,CAAlC,EAAuCA,MAAM,CAAC,CAAD,CAA7C,EAAkDA,MAAM,CAAC,CAAD,CAAxD,EAA6DA,MAAM,CAAC,EAAD,CAAnE,EAAyEA,MAAM,CAAC,EAAD,CAA/E;AACAmK,QAAAA,GAAG,CAACsB,SAAJ,GAAgB,MAAhB;AACAtB,QAAAA,GAAG,CAACG,SAAJ;AACAH,QAAAA,GAAG,CAACM,GAAJ,CAAQ/H,EAAR,EAAYC,EAAZ,EAAgB,CAAhB,EAAmB,CAAnB,EAAsBlC,IAAI,CAACsC,EAAL,GAAU,CAAhC;AACAoH,QAAAA,GAAG,CAACS,SAAJ;AACAT,QAAAA,GAAG,CAACpE,IAAJ;AACD,OATD;AAUD,KAzBD;AAAA,SA2BK;AAAA,YACG/F,MADH,GACcsJ,aADd,CACGtJ,MADH;AAEHA,QAAAA,MAAM,GAAGzD,MAAI,CAACyD,MAAL,CAAYG,QAAZ,CAAqBiK,WAArB,EAAkCpK,MAAlC,CAAT;AACAmK,QAAAA,GAAG,CAACiB,IAAJ;AACAjB,QAAAA,GAAG,CAACE,YAAJ,CAAiBrK,MAAM,CAAC,CAAD,CAAvB,EAA4BA,MAAM,CAAC,CAAD,CAAlC,EAAuCA,MAAM,CAAC,CAAD,CAA7C,EAAkDA,MAAM,CAAC,CAAD,CAAxD,EAA6DA,MAAM,CAAC,EAAD,CAAnE,EAAyEA,MAAM,CAAC,EAAD,CAA/E;AACAmK,QAAAA,GAAG,CAACI,WAAJ,GAAkB,MAAlB;AACAJ,QAAAA,GAAG,CAACK,SAAJ,GAAgB,CAAhB;AACAL,QAAAA,GAAG,CAACG,SAAJ;AACAH,QAAAA,GAAG,CAACO,MAAJ,CAAWhI,EAAX,EAAeC,EAAf;AACAwH,QAAAA,GAAG,CAACQ,MAAJ,CAAWlO,GAAG,CAACiB,UAAJ,GAAiBgF,EAA5B,EAAgCC,EAAhC;AACAwH,QAAAA,GAAG,CAACQ,MAAJ,CAAWlO,GAAG,CAACiB,UAAJ,GAAiBgF,EAA5B,EAAgCjG,GAAG,CAACkB,WAAJ,GAAkBgF,EAAlD;AACAwH,QAAAA,GAAG,CAACQ,MAAJ,CAAWjI,EAAX,EAAejG,GAAG,CAACkB,WAAJ,GAAkBgF,EAAjC;AACAwH,QAAAA,GAAG,CAACS,SAAJ;AACAT,QAAAA,GAAG,CAACU,MAAJ;AACAV,QAAAA,GAAG,CAACI,WAAJ,GAAkB,wBAAlB;AACAJ,QAAAA,GAAG,CAACG,SAAJ;AACAH,QAAAA,GAAG,CAACO,MAAJ,CAAW,CAACjO,GAAG,CAACe,MAAL,GAAckF,EAAzB,EAA6B,CAACjG,GAAG,CAACgB,MAAL,GAAckF,EAA3C;AACAwH,QAAAA,GAAG,CAACQ,MAAJ,CAAW,CAAClO,GAAG,CAACe,MAAL,GAAcf,GAAG,CAACa,KAAlB,GAA0BoF,EAArC,EAAyC,CAACjG,GAAG,CAACgB,MAAL,GAAckF,EAAvD;AACAwH,QAAAA,GAAG,CAACQ,MAAJ,CAAW,CAAClO,GAAG,CAACe,MAAL,GAAcf,GAAG,CAACa,KAAlB,GAA0BoF,EAArC,EAA0C,CAACjG,GAAG,CAACgB,MAAL,GAAchB,GAAG,CAACc,MAAlB,GAA2BoF,EAArE;AACAwH,QAAAA,GAAG,CAACQ,MAAJ,CAAW,CAAClO,GAAG,CAACe,MAAL,GAAckF,EAAzB,EAA8B,CAACjG,GAAG,CAACgB,MAAL,GAAchB,GAAG,CAACc,MAAlB,GAA2BoF,EAAzD;AACAwH,QAAAA,GAAG,CAACS,SAAJ;AACAT,QAAAA,GAAG,CAACU,MAAJ;AACAV,QAAAA,GAAG,CAACoB,OAAJ;AACD;AACF,GA7DD;AA8DD;;AAED,aAAe;AACbT,EAAAA,UAAU,EAAVA,UADa;AAEbU,EAAAA,cAAc,EAAdA,cAFa;AAGbtB,EAAAA,UAAU,EAAVA;AAHa,CAAf;;;;ACpJA,IAAIwB,IAAI,GAAG,CAAX;AAEA,IAAMC,WAAW,GAAG,EAApB;4BAaMrP,KAAK,CAACsP,MAZJC;IACNC,gCAAAA;IACAC,mCAAAA;IACAC,gCAAAA;IACAC,oCAAAA;IACAC,qCAAAA;IACAC,0CAAAA;IACAC,mCAAAA;IACAC,oCAAAA;IACAC,yCAAAA;IACAC,8BAAAA;IACAC,+BAAAA;;IAGIC;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,IAAL;AACD;;;0CAEqBC,WAAW;AAC/B,UAAIhQ,KAAK,GAAG,KAAKA,KAAjB;;AACA,UAAGgQ,SAAS,KAAKhQ,KAAjB,EAAwB;AACtB,YAAGgQ,SAAS,CAAC5O,GAAV,KAAkBpB,KAAK,CAACoB,GAAxB,IACE4O,SAAS,CAAClQ,GAAV,KAAkBE,KAAK,CAACF,GAD1B,IAEEkQ,SAAS,CAACxI,OAAV,KAAsBxH,KAAK,CAACwH,OAF9B,IAGEwI,SAAS,CAACtI,WAAV,KAA0B1H,KAAK,CAAC0H,WAAhC,IACE,CAAC/H,KAAK,CAACsQ,IAAN,CAAWC,KAAX,CAAiBF,SAAS,CAACtI,WAA3B,EAAwC1H,KAAK,CAAC0H,WAA9C,CAJR,EAIoE;AAClE,eAAKqI,IAAL;AACD,SAND,MAOK;AACH,cAAGC,SAAS,CAACzO,QAAV,KAAuBvB,KAAK,CAACuB,QAAhC,EAA0C;AACxC,iBAAKA,QAAL,CAAcyO,SAAS,CAACzO,QAAxB,EAAkCvB,KAAlC;AACD,WAFD,MAGK;AACH,gBAAGgQ,SAAS,CAACG,MAAV,KAAqBnQ,KAAK,CAACmQ,MAA9B,EAAsC;AACpC,mBAAKA,MAAL,CAAYH,SAAS,CAACG,MAAtB;AACD;;AACD,gBAAGH,SAAS,CAAC9P,SAAV,KAAwBF,KAAK,CAACE,SAAjC,EAA4C;AAC1C,mBAAKkQ,WAAL,CAAiBJ,SAAS,CAAC9P,SAA3B;AACD;;AACD,gBAAG8P,SAAS,CAACK,YAAV,KAA2BrQ,KAAK,CAACqQ,YAAjC,IAAiD,KAAKnO,SAAzD,EAAoE;AAClE,mBAAKA,SAAL,CAAemO,YAAf,GAA8BL,SAAS,CAACK,YAAxC;AACD;;AACD,gBAAGL,SAAS,CAACM,GAAV,KAAkBtQ,KAAK,CAACsQ,GAAxB,IAA+B,KAAKpO,SAAvC,EAAkD;AAChD,mBAAKA,SAAL,CAAeoO,GAAf,GAAqBN,SAAS,CAACM,GAA/B;AACD;AACF;AACF;AACF;;AACD,aAAO,KAAP;AACD;;;2BAEM;AAAA;;AACL,UAAItQ,KAAK,GAAG,KAAKA,KAAjB;AADK,UAECoB,GAFD,GAEcpB,KAFd,CAECoB,GAFD;AAAA,UAEMtB,GAFN,GAEcE,KAFd,CAEMF,GAFN;AAGL,UAAI+L,KAAK,GAAG,CAAZ;;AACA,UAAGlM,KAAK,CAACsQ,IAAN,CAAWM,QAAX,CAAoBnP,GAApB,CAAH,EAA6B;AAC3ByK,QAAAA,KAAK;AACL7L,QAAAA,KAAK,CAACwQ,QAAN,CAAepP,GAAf,EAAoB,UAACoE,GAAD,EAAS;AAC3BqG,UAAAA,KAAK;AACLzK,UAAAA,GAAG,GAAGoE,GAAN;;AACA,UAAA,KAAI,CAACiL,KAAL,CAAW5E,KAAX,EAAkBzK,GAAlB,EAAuBtB,GAAvB;AACD,SAJD;AAKD;;AACD,UAAGH,KAAK,CAACsQ,IAAN,CAAWM,QAAX,CAAoBzQ,GAApB,CAAH,EAA6B;AAC3B+L,QAAAA,KAAK;AACL7L,QAAAA,KAAK,CAACwQ,QAAN,CAAe1Q,GAAf,EAAoB,UAAC0F,GAAD,EAAS;AAC3BqG,UAAAA,KAAK;AACL/L,UAAAA,GAAG,GAAG0F,GAAN;;AACA,UAAA,KAAI,CAACiL,KAAL,CAAW5E,KAAX,EAAkBzK,GAAlB,EAAuBtB,GAAvB;AACD,SAJD;AAKD;;AACD,WAAK2Q,KAAL,CAAW5E,KAAX,EAAkBzK,GAAlB,EAAuBtB,GAAvB;AACD;;;0BAEK4Q,OAAOtP,KAAKtB,KAAK;AAAA;;AACrB,UAAG4Q,KAAK,KAAK,CAAb,EAAgB;AACd;AACD;;AACD,UAAI1Q,KAAK,GAAG,KAAKA,KAAjB;AACA,WAAK2Q,eAAL,GAAuB,CAAC,CAAC3Q,KAAK,CAAC4Q,WAA/B;AACA,WAAKC,eAAL,GAAuB,EAAvB;AACAzP,MAAAA,GAAG,CAAC2N,IAAJ,GAAW3N,GAAG,CAAC2N,IAAJ,IAAY,EAAEA,IAAzB;;AACA,UAAG3N,GAAG,CAAC0P,OAAJ,KAAgB,KAAnB,EAA0B;AACxB,cAAM,IAAIlP,KAAJ,CAAU,gBAAgBR,GAAG,CAAC0P,OAApB,GAA8B,qBAAxC,CAAN;AACD;;AACD,WAAK1P,GAAL,GAAWzB,KAAK,CAACsQ,IAAN,CAAWc,KAAX,CAAiB3P,GAAjB,CAAX;AACA,WAAKtB,GAAL,GAAWH,KAAK,CAACsQ,IAAN,CAAWc,KAAX,CAAiBjR,GAAjB,CAAX;AACAkR,MAAAA,MAAM,CAACnR,eAAP,CAAuB,KAAKC,GAA5B,EAAiC,UAACK,OAAD,EAAa;AAC5C,QAAA,MAAI,CAACA,OAAL,GAAeA,OAAf;;AACA,QAAA,MAAI,CAACoB,QAAL,CAAcvB,KAAK,CAACuB,QAApB,EAA8BvB,KAA9B;AACD,OAHD,EAGGA,KAHH;AAID;;;6BAEQQ,MAAoB;AAAA,UAAdyI,OAAc,uEAAJ,EAAI;AAC3B,UAAIgI,EAAE,GAAGtR,KAAK,CAACsQ,IAAN,CAAWiB,MAAX,CAAkB,EAAlB,EAAsBjI,OAAtB,CAAT;AACAgI,MAAAA,EAAE,CAAC1P,QAAH,GAAcf,IAAd;;AAF2B,6BAcvBwQ,MAAM,CAAC7P,QAAP,CAAgB,KAAKC,GAArB,EAA0B,KAAKjB,OAA/B,EAAwC8Q,EAAxC,CAduB;AAAA,UAInBrJ,CAJmB,oBAIzBpH,IAJyB;AAAA,UAKzBuB,IALyB,oBAKzBA,IALyB;AAAA,UAMzBM,QANyB,oBAMzBA,QANyB;AAAA,UAOzBL,IAPyB,oBAOzBA,IAPyB;AAAA,UAQzBO,QARyB,oBAQzBA,QARyB;AAAA,UASzBN,IATyB,oBASzBA,IATyB;AAAA,UAUzBQ,QAVyB,oBAUzBA,QAVyB;AAAA,UAWzBE,aAXyB,oBAWzBA,aAXyB;AAAA,UAYzBR,cAZyB,oBAYzBA,cAZyB;AAAA,UAazBC,MAbyB,oBAazBA,MAbyB;;AAe3B,WAAK+O,YAAL,GAAoBvJ,CAApB;AACA,WAAK7F,IAAL,GAAYA,IAAZ;AACA,WAAKM,QAAL,GAAgBA,QAAhB;AACA,WAAKL,IAAL,GAAYA,IAAZ;AACA,WAAKO,QAAL,GAAgBA,QAAhB;AACA,WAAKN,IAAL,GAAYA,IAAZ;AACA,WAAKQ,QAAL,GAAgBA,QAAhB;AACA,WAAKE,aAAL,GAAqBA,aAArB;AACA,WAAKP,MAAL,GAAcA,MAAd;AAEA,UAAIgP,aAAJ;;AACA,UAAGnI,OAAO,CAACkH,MAAR,IAAkBxN,aAAa,CAACsG,OAAO,CAACkH,MAAT,CAAlC,EAAoD;AAClD,YAAIkB,GAAG,GAAGpI,OAAO,CAACqI,KAAR,GAAgB,aAAhB,GAAgC,aAA1C;AACAF,QAAAA,aAAa,uBACVC,GADU,EACJpI,OAAO,CAACkH,MADJ,CAAb;AAGD,OALD;AAAA,WAOK,IAAGhO,cAAc,IAAIA,cAAc,CAACR,MAApC,EAA4C;AAC/CyP,UAAAA,aAAa,GAAGjP,cAAc,CAAC,CAAD,CAA9B;AACD;;AACD,UAAGiP,aAAH,EAAkB;AAChB,YAAI3I,CAAC,GAAG,KAAK0H,MAAL,CAAYiB,aAAa,CAACG,WAAd,IAA6BH,aAAa,CAACI,WAAvD,CAAR;;AACA,YAAGvI,OAAO,CAACqI,KAAR,IAAiBF,aAAa,CAACI,WAAlC,EAA+C;AAC7C/I,UAAAA,CAAC,CAAC+I,WAAF,CAAc,CAAd;AACD;;AACD,eAAO/I,CAAP;AACD,OAND,MAOK;AACH5G,QAAAA,OAAO,CAACC,IAAR,CAAa,gBAAb;AACD;AACF;;;2BAEMtB,MAAM;AACX,WAAKiR,UAAL,GAAkBjR,IAAlB;AACA,UAAI0B,SAAS,GAAG,KAAKS,aAAL,CAAmBnC,IAAnB,CAAhB;;AACA,UAAG,CAAC0B,SAAJ,EAAe;AACb,cAAM,IAAIN,KAAJ,CAAU,6BAA6BpB,IAAvC,CAAN;AACD,OALU;;;AAOX,UAAG,KAAK0B,SAAR,EAAmB;AACjB+N,QAAAA,IAAI,CAAC3C,cAAL,CAAoB,KAAKvL,IAAzB,EAA+B,KAAKC,IAApC;AACD;;AATU,UAULqH,iBAVK,GAU+DnH,SAV/D,CAULmH,iBAVK;AAAA,UAUckB,iBAVd,GAU+DrI,SAV/D,CAUcqI,iBAVd;AAAA,UAUiCK,gBAVjC,GAU+D1I,SAV/D,CAUiC0I,gBAVjC;AAAA,UAUmD3B,OAVnD,GAU+D/G,SAV/D,CAUmD+G,OAVnD;;AAWX,UAAG,CAACtJ,KAAK,CAACsQ,IAAN,CAAWyB,KAAX,CAAiB,KAAK1R,KAAL,CAAWqQ,YAA5B,CAAJ,EAA+C;AAC7CpH,QAAAA,OAAO,CAACoH,YAAR,GAAuB,KAAKrQ,KAAL,CAAWqQ,YAAlC;AACD;;AACD,UAAG,CAAC1Q,KAAK,CAACsQ,IAAN,CAAWyB,KAAX,CAAiB,KAAK1R,KAAL,CAAWsQ,GAA5B,CAAJ,EAAsC;AACpCrH,QAAAA,OAAO,CAACqH,GAAR,GAAc,KAAKtQ,KAAL,CAAWsQ,GAAzB;AACD,OAhBU;;;AAkBX,UAAIqB,IAAI,GAAG,KAAKC,GAAL,CAASD,IAApB;AACAA,MAAAA,IAAI,CAACE,YAAL;AACA,UAAIpJ,CAAC,GAAG,KAAKvG,SAAL,GAAiByP,IAAI,CAACvG,OAAL,CAAa,CACpC;AACE0G,QAAAA,eAAe,EAAE;AADnB,OADoC,EAIpC;AACEA,QAAAA,eAAe,EAAE;AADnB,OAJoC,CAAb,EAOtB7I,OAPsB,CAAzB,CApBW;;AA6BX,UAAI8I,IAAI,GAAG,IAAX;AACA,UAAIC,aAAa,GAAGD,IAAI,CAACE,UAAL,CAAgBD,aAApC;AACA,UAAIjP,IAAI,GAAGgP,IAAI,CAAChP,IAAhB;AACA,UAAIpC,KAAK,GAAGoC,IAAI,CAACpC,KAAjB;AACA,UAAIC,MAAM,GAAGmC,IAAI,CAACnC,MAAlB;;AACA+Q,MAAAA,IAAI,CAACO,MAAL,GAAc,UAASC,UAAT,EAAqBC,EAArB,EAAyB5E,GAAzB,EAA8B6E,KAA9B,EAAqD;AAAA,YAAhBtM,EAAgB,uEAAX,CAAW;AAAA,YAARC,EAAQ,uEAAH,CAAG;;AACjE,YAAGgM,aAAa,CAAC7C,OAAD,CAAb,KAA2B,MAA3B,IACE6C,aAAa,CAAC5C,UAAD,CAAb,KAA8B,QADhC,IAEE4C,aAAa,CAAC3C,OAAD,CAAb,KAA2B,CAFhC,EAEmC;AACjC;AACD,SALgE;;;AAOjE,YAAIiD,SAAJ;AACA,YAAIC,SAAJ;AACA,YAAIC,SAAJ;;AACA,YAAGT,IAAI,CAACpB,eAAR,EAAyB;AACvB2B,UAAAA,SAAS,GAAG3S,KAAK,CAACD,MAAN,CAAa+S,cAAb,CAA4B9R,KAA5B,EAAmCC,MAAnC,CAAZ;AACA2R,UAAAA,SAAS,GAAG/E,GAAZ;AACAA,UAAAA,GAAG,GAAG8E,SAAS,CAAC9E,GAAhB;AACA,cAAI3D,KAAK,GAAG/F,IAAI,CAAC4O,KAAL,CAAWjK,CAAC,CAACkK,WAAF,IAAiBZ,IAAI,CAACzB,GAAL,IAAY,EAA7B,IAAmC,IAA9C,CAAZ,CAJuB;;AAMvBkC,UAAAA,SAAS,GAAGT,IAAI,CAAC3Q,GAAL,CAAS2N,IAAT,GAAgB,GAAhB,GAAsBgD,IAAI,CAACZ,YAA3B,GAA0C,GAA1C,GAAgDY,IAAI,CAACN,UAArD,GAAkE,GAAlE,GAAwE5H,KAApF;AACA,cAAI+I,EAAE,GAAGb,IAAI,CAAClB,eAAL,CAAqB2B,SAArB,CAAT;;AACA,cAAGI,EAAH,EAAO;AACLpF,YAAAA,GAAG,CAACqF,YAAJ,CAAiBD,EAAjB,EAAqB,CAArB,EAAwB,CAAxB;AACAN,YAAAA,SAAS,CAACQ,IAAV,CAAetF,GAAf;AACA+E,YAAAA,SAAS,CAAC5D,SAAV,CAAoB2D,SAAS,CAAClQ,MAA9B,EAAsC,CAAtC,EAAyC,CAAzC;AACAoL,YAAAA,GAAG,CAACuF,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBpS,KAApB,EAA2BC,MAA3B;AACA;AACD;AACF;;AAzBgE,YA0B3DmB,IA1B2D,GA0BLgQ,IA1BK,CA0B3DhQ,IA1B2D;AAAA,YA0BrDC,IA1BqD,GA0BL+P,IA1BK,CA0BrD/P,IA1BqD;AAAA,YA0B/CK,QA1B+C,GA0BL0P,IA1BK,CA0B/C1P,QA1B+C;AAAA,YA0BrCE,QA1BqC,GA0BLwP,IA1BK,CA0BrCxP,QA1BqC;AAAA,YA0B3BE,QA1B2B,GA0BLsP,IA1BK,CA0B3BtP,QA1B2B;AAAA,YA0BjBtC,OA1BiB,GA0BL4R,IA1BK,CA0BjB5R,OA1BiB;;AA4BjE,YAAI6S,UAAU,GAAGjB,IAAI,CAAC3Q,GAAL,CAAS2N,IAAT,GAAgB,GAAhB,GAAsBgD,IAAI,CAACZ,YAA3B,GAA0C,GAA1C,GAAgDY,IAAI,CAACN,UAAtE;AACA,YAAIwB,YAAY,GAAGjE,WAAW,CAACgE,UAAD,CAA9B;;AACA,YAAGjB,IAAI,CAAC/R,KAAL,CAAWkT,KAAX,IAAoBD,YAApB,IAAoCA,YAAY,CAACN,WAAb,KAA6BlK,CAAC,CAACkK,WAAtE,EAAmF;AACjF5Q,UAAAA,IAAI,GAAGkR,YAAY,CAAClR,IAApB;AACAC,UAAAA,IAAI,GAAGiR,YAAY,CAACjR,IAApB;AACAS,UAAAA,QAAQ,GAAGwQ,YAAY,CAACxQ,QAAxB;AACD,SAJD,MAKK;AACH,cAAIuH,MAAM,GAAGlG,IAAI,CAACmI,GAAL,CAAS,CAAT,EAAYxD,CAAC,CAACkK,WAAF,GAAgBlK,CAAC,CAACK,QAA9B,CAAb;AACAmH,UAAAA,IAAI,CAAC1E,iBAAL,CAAuBlC,iBAAvB,EAA0CW,MAA1C,EAAkD3H,QAAlD;AACA4N,UAAAA,IAAI,CAAC/D,eAAL,CAAqBnK,IAAI,CAAC,CAAD,CAAzB;AACAkO,UAAAA,IAAI,CAAC3D,WAAL,CAAiB/B,iBAAjB,EAAoCP,MAApC,EAA4CzH,QAA5C;AACA0N,UAAAA,IAAI,CAACxD,OAAL,CAAazC,MAAb,EAAqBhI,IAArB,EAA2BS,QAA3B,EAAqCV,IAArC,EAA2CM,QAA3C,EAAqDlC,OAArD,EAA8DyK,gBAA9D;AACAoE,UAAAA,WAAW,CAACgE,UAAD,CAAX,GAA0B;AACxBjR,YAAAA,IAAI,EAAJA,IADwB;AAExBC,YAAAA,IAAI,EAAJA,IAFwB;AAGxBS,YAAAA,QAAQ,EAARA,QAHwB;AAIxBkQ,YAAAA,WAAW,EAAElK,CAAC,CAACkK;AAJS,WAA1B;AAMD;;AACD,YAAGR,UAAU,KAAKxS,KAAK,CAACwT,IAAN,CAAWC,MAA7B,EAAqC;AAAA,cAC7B3F,WAD6B,GACbsE,IAAI,CAACE,UADQ,CAC7BxE,WAD6B;;AAGnC,cAAI4F,IAAI,GAAGrB,aAAa,CAAC1C,WAAD,CAAb,GAA6B0C,aAAa,CAACxC,iBAAD,CAA1C,GAAgEwC,aAAa,CAACzC,YAAD,CAA7E,GAA8FyC,aAAa,CAACpC,KAAD,CAAb,GAAuB,GAAhI;AACA,cAAI0D,GAAG,GAAGtB,aAAa,CAACvC,UAAD,CAAb,GAA4BuC,aAAa,CAACrC,gBAAD,CAAzC,GAA8DqC,aAAa,CAACtC,WAAD,CAA3E,GAA2FsC,aAAa,CAACnC,MAAD,CAAb,GAAwB,GAA7H;AACA,cAAI9H,CAAC,GAAGpI,KAAK,CAACC,IAAN,CAAWyD,MAAX,CAAkBC,QAAlB,EAAR;AACAyE,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQsL,IAAR;AACAtL,UAAAA,CAAC,CAAC,EAAD,CAAD,GAAQuL,GAAR,CAPmC;;AASnC,cAAGvB,IAAI,CAAC3P,MAAR,EAAgB;AACd,gBAAI2D,GAAE,GAAGgM,IAAI,CAAC3P,MAAL,CAAY3B,CAAZ,IAAiB,CAA1B;;AACA,gBAAIuF,GAAE,GAAG+L,IAAI,CAAC3P,MAAL,CAAY1B,CAAZ,IAAiB,CAA1B;;AACAqH,YAAAA,CAAC,CAAC,EAAD,CAAD,IAAShC,GAAE,GAAG,GAAd;AACAgC,YAAAA,CAAC,CAAC,EAAD,CAAD,IAAS/B,GAAE,GAAG,GAAd,CAJc;;AAMd,gBAAG+L,IAAI,CAAC/R,KAAL,CAAWuT,OAAd,EAAuB;AACrB,kBAAIC,EAAE,GAAGxB,aAAa,CAACrR,KAAd,GAAsBoR,IAAI,CAAC3P,MAAL,CAAYzB,KAA3C;AACA,kBAAI8S,EAAE,GAAGzB,aAAa,CAACpR,MAAd,GAAuBmR,IAAI,CAAC3P,MAAL,CAAYxB,MAA5C;AACAmH,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAOyL,EAAP;AACAzL,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAO0L,EAAP;AACD;AACF;;AACDhG,UAAAA,WAAW,GAAG9N,KAAK,CAACC,IAAN,CAAWyD,MAAX,CAAkBG,QAAlB,CAA2BiK,WAA3B,EAAwC1F,CAAxC,CAAd;AACAmK,UAAAA,MAAM,CAAC/D,UAAP,CAAkBX,GAAlB,EAAuBC,WAAvB,EAAoCzL,IAApC,EAA0CS,QAA1C,EAAoDtC,OAApD,EAA6D4F,EAA7D,EAAiEC,EAAjE,EAvBmC;;AAyBnC,cAAG+L,IAAI,CAAC/R,KAAL,CAAW0T,KAAd,EAAqB;AACnBxB,YAAAA,MAAM,CAACrD,cAAP,CAAsBrB,GAAtB,EAA2BC,WAA3B,EAAwCzL,IAAxC,EAA8CS,QAA9C,EAAwDtC,OAAxD,EAAiE4F,EAAjE,EAAqEC,EAArE;AACAkM,YAAAA,MAAM,CAAC3E,UAAP,CAAkBC,GAAlB,EAAuBC,WAAvB,EAAoC1L,IAAI,CAAC,CAAD,CAAxC,EAA6CgE,EAA7C,EAAiDC,EAAjD;AACD,WAHD,MAIK;AACH,gBAAG+L,IAAI,CAAC/R,KAAL,CAAW2T,SAAd,EAAyB;AACvBzB,cAAAA,MAAM,CAAC3E,UAAP,CAAkBC,GAAlB,EAAuBC,WAAvB,EAAoC1L,IAAI,CAAC,CAAD,CAAxC,EAA6CgE,EAA7C,EAAiDC,EAAjD;AACD;;AACD,gBAAG+L,IAAI,CAAC/R,KAAL,CAAW4T,SAAd,EAAyB;AACvB1B,cAAAA,MAAM,CAACrD,cAAP,CAAsBrB,GAAtB,EAA2BC,WAA3B,EAAwCzL,IAAxC,EAA8CS,QAA9C,EAAwDtC,OAAxD,EAAiE4F,EAAjE,EAAqEC,EAArE;AACD;AACF,WApCkC;;;AAsCnC,cAAG+L,IAAI,CAACpB,eAAR,EAAyB;AACvB2B,YAAAA,SAAS,CAACQ,IAAV,CAAetF,GAAf;AACA+E,YAAAA,SAAS,CAAC5D,SAAV,CAAoB2D,SAAS,CAAClQ,MAA9B,EAAsC,CAAtC,EAAyC,CAAzC;AACA2P,YAAAA,IAAI,CAAClB,eAAL,CAAqB2B,SAArB,IAAkChF,GAAG,CAACqG,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuBlT,KAAvB,EAA8BC,MAA9B,CAAlC;AACA4M,YAAAA,GAAG,CAACuF,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBpS,KAApB,EAA2BC,MAA3B;AACD;AACF;AACF,OA7FD;;AA8FA,aAAO6H,CAAP;AACD;;;gCAEWxI,KAAK;AACf,UAAGA,GAAH,EAAQ;AACN,YAAIH,GAAG,GAAG,KAAKA,GAAf;AACAA,QAAAA,GAAG,CAACI,SAAJ,GAAgBD,GAAhB;AACA,YAAIE,OAAO,GAAG,KAAKA,OAAnB;AACAR,QAAAA,KAAK,CAACD,MAAN,CAAaU,UAAb,CAAwBH,GAAxB,EAA6B,YAAW;AACtCH,UAAAA,GAAG,CAACO,UAAJ,CAAeC,OAAf,CAAuB,UAAAC,IAAI,EAAI;AAAA,gBACvBC,IADuB,GACdD,IADc,CACvBC,IADuB;AAE7BL,YAAAA,OAAO,CAACK,IAAD,CAAP,CAAcS,MAAd,GAAuBtB,KAAK,CAACD,MAAN,CAAawB,GAAb,CAAiBjB,GAAjB,EAAsBgB,MAA7C;AACD,WAHD;AAID,SALD;AAMD;AACF;;;mCAEc6S,MAAM;AACnB,WAAKnD,eAAL,GAAuB,CAAC,CAACmD,IAAzB;AACD;;;uCAEkB;AACjB,WAAKjD,eAAL,GAAuB,EAAvB;AACD;;;6BAEQ;AACP,aAAO,iCACL;AAAW,QAAA,GAAG,EAAC;AAAf,QADK,CAAP;AAGD;;;;EA7RuBlR,KAAK,CAACoU;;AAgShCjE,WAAW,CAACgB,OAAZ,GAAsBA,OAAtB;;;;"}